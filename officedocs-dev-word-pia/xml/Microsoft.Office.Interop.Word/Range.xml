<Type Name="Range" FullName="Microsoft.Office.Interop.Word.Range">
  <Metadata><Meta Name="ms.openlocfilehash" Value="796454862c2382b44ee98f989c9ce87993127d9e" /><Meta Name="ms.sourcegitcommit" Value="9a6162e1f2c2145e95970c1fdb1ddcac1366d42f" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="fr-FR" /><Meta Name="ms.lasthandoff" Value="05/17/2019" /><Meta Name="ms.locfileid" Value="34144252" /></Metadata><TypeSignature Language="C#" Value="public interface Range" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract Range" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Office.Interop.Word.Range" />
  <TypeSignature Language="VB.NET" Value="Public Interface Range" />
  <TypeSignature Language="C++ CLI" Value="public interface class Range" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
    <AssemblyVersion>15.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("0002095E-0000-0000-C000-000000000046")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.TypeLibType(4288)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Représente une zone contiguë dans un document.</summary>
    <remarks><para>Chaque <see cref="T:Microsoft.Office.Interop.Word.Range" /> objet est défini par une position de caractère de début et de fin. Tout comme les signets dans un document, <see cref="T:Microsoft.Office.Interop.Word.Range" /> les objets sont utilisés pour identifier des parties spécifiques d’un document. Toutefois, contrairement à un signet, <see cref="T:Microsoft.Office.Interop.Word.Range" /> un objet n’existe que pendant l’exécution du code de programmation qui le définit. <see cref="T:Microsoft.Office.Interop.Word.Range" />les objets sont indépendants de la sélection. Ainsi, vous pouvez définir et modifier une plage sans modifier la sélection actuelle. Vous pouvez aussi définir plusieurs plages dans un document, alors qu'il ne peut y avoir qu'une sélection par volet.</para>
      <para>Utilisez la <see cref="M:Microsoft.Office.Interop.Word._Document.Range(System.Object@,System.Object@)" /> méthode pour renvoyer un <see cref="T:Microsoft.Office.Interop.Word.Range" /> objet défini par les positions des caractères de début et de fin.</para>
      <para>Utilisez la propriété <b>Range</b> d’un objet individuel pour renvoyer un <see cref="T:Microsoft.Office.Interop.Word.Range" /> objet défini par le début et la fin de l’objet. La propriété <b>Range</b> s’applique à de nombreux objets (par <see cref="T:Microsoft.Office.Interop.Word.Paragraph" />exemple <see cref="T:Microsoft.Office.Interop.Word.Bookmark" />,, <see cref="T:Microsoft.Office.Interop.Word.Cell" />et).</para>
      <para> </para></remarks>
  </Docs>
  <Members>
    <Member MemberName="Application">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.Application Application { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Word.Application Application" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.Range.Application" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Application As Application" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Word::Application ^ Application { Microsoft::Office::Interop::Word::Application ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1000)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1000)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.Application</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Renvoie un <see cref="T:Microsoft.Office.Interop.Word.Application" /> Object qui représente l’application Microsoft Word.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoFormat">
      <MemberSignature Language="C#" Value="public void AutoFormat ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AutoFormat() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.Range.AutoFormat" />
      <MemberSignature Language="VB.NET" Value="Public Sub AutoFormat ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AutoFormat();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(195)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Met automatiquement en forme une plage.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Bold">
      <MemberSignature Language="C#" Value="public int Bold { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Bold" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.Range.Bold" />
      <MemberSignature Language="VB.NET" Value="Public Property Bold As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Bold { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(130)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(130)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(130)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Détermine si la police ou la plage est en gras.</summary>
        <value>To be added.</value>
        <remarks><para>Cette propriété renvoie la valeur <b>True</b>, <b>False</b> ou <b>wdUndefined</b> (un mélange de <b>True</b> et <b>False</b>).</para>
          <para>La valeur de cette propriété peut être <b>true</b>, false <b></b>et <b>wdToggle</b>.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="BoldBi">
      <MemberSignature Language="C#" Value="public int BoldBi { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 BoldBi" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.Range.BoldBi" />
      <MemberSignature Language="VB.NET" Value="Public Property BoldBi As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int BoldBi { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(400)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(400)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(400)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Détermine si la police ou la plage est en gras.</summary>
        <value>.</value>
        <remarks><para>Cette propriété renvoie <b>la valeur True</b>, <b>False</b> ou <b>wdUndefined</b> (pour un mélange de texte gras et non gras).</para>
          <para>La valeur de cette propriété peut être <b>true</b>, false <b></b>et <b>wdToggle</b>.</para>
          <para>La propriété <b>BoldBi</b> s'applique au texte dans une langue de droite à gauche.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="BookmarkID">
      <MemberSignature Language="C#" Value="public int BookmarkID { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 BookmarkID" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.Range.BookmarkID" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BookmarkID As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int BookmarkID { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(308)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(308)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Renvoie le numéro du signet qui encadre le début de la sélection ou de la plage spécifiée; renvoie 0 (zéro) s’il n’y a aucun signet correspondant.</summary>
        <value>To be added.</value>
        <remarks><para>Le nombre correspond à la position du signet dans le document: 1 pour le premier signet, 2 pour le deuxième, et ainsi de suite.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Bookmarks">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.Bookmarks Bookmarks { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Word.Bookmarks Bookmarks" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.Range.Bookmarks" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Bookmarks As Bookmarks" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Word::Bookmarks ^ Bookmarks { Microsoft::Office::Interop::Word::Bookmarks ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(75)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(75)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.Bookmarks</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Renvoie une <see cref="T:Microsoft.Office.Interop.Word.Bookmarks" /> collection qui représente tous les signets d’une plage.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Borders">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.Borders Borders { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Word.Borders Borders" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.Range.Borders" />
      <MemberSignature Language="VB.NET" Value="Public Property Borders As Borders" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Word::Borders ^ Borders { Microsoft::Office::Interop::Word::Borders ^ get(); void set(Microsoft::Office::Interop::Word::Borders ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1100)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1100)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1100)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.Borders</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Renvoie une <see cref="T:Microsoft.Office.Interop.Word.Borders" /> collection qui représente toutes les bordures de l’objet spécifié.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Calculate">
      <MemberSignature Language="C#" Value="public float Calculate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float32 Calculate() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.Range.Calculate" />
      <MemberSignature Language="VB.NET" Value="Public Function Calculate () As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; float Calculate();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(172)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Calcule une expression mathématique dans une plage.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanEdit">
      <MemberSignature Language="C#" Value="public int CanEdit { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 CanEdit" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.Range.CanEdit" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CanEdit As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int CanEdit { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(304)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(304)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Réservé à un usage interne. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanPaste">
      <MemberSignature Language="C#" Value="public int CanPaste { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 CanPaste" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.Range.CanPaste" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CanPaste As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int CanPaste { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(305)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(305)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Réservé à un usage interne.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Case">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.WdCharacterCase Case { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Word.WdCharacterCase Case" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.Range.Case" />
      <MemberSignature Language="VB.NET" Value="Public Property Case As WdCharacterCase" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Word::WdCharacterCase Case { Microsoft::Office::Interop::Word::WdCharacterCase get(); void set(Microsoft::Office::Interop::Word::WdCharacterCase value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(312)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(312)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(312)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.WdCharacterCase</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Cette propriété renvoie ou <see cref="T:Microsoft.Office.Interop.Word.WdCharacterCase" /> définit une constante qui représente la casse du texte dans la plage spécifiée.</summary>
        <value>To be added.</value>
        <remarks><para>Il se peut que certaines des constantes énumérées ci-dessus ne soient pas disponibles, selon la prise en charge de langue (anglais (États-Unis), par exemple) que vous avez sélectionnée ou installée.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Cells">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.Cells Cells { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Word.Cells Cells" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.Range.Cells" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Cells As Cells" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Word::Cells ^ Cells { Microsoft::Office::Interop::Word::Cells ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(57)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(57)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.Cells</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Renvoie une <see cref="T:Microsoft.Office.Interop.Word.Cells" /> collection qui représente les cellules de tableau d’une plage.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Characters">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.Characters Characters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Word.Characters Characters" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.Range.Characters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Characters As Characters" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Word::Characters ^ Characters { Microsoft::Office::Interop::Word::Characters ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(53)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(53)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.Characters</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Renvoie une <see cref="T:Microsoft.Office.Interop.Word.Characters" /> collection qui représente les caractères d’une plage.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CharacterStyle">
      <MemberSignature Language="C#" Value="public object CharacterStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object CharacterStyle" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.Range.CharacterStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CharacterStyle As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ CharacterStyle { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(420)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(420)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Renvoie un <b>Object</b> qui représente le style utilisé pour mettre en forme un ou plusieurs caractères. En lecture seule.</summary>
        <value><b>Object</b></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CharacterWidth">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.WdCharacterWidth CharacterWidth { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Word.WdCharacterWidth CharacterWidth" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.Range.CharacterWidth" />
      <MemberSignature Language="VB.NET" Value="Public Property CharacterWidth As WdCharacterWidth" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Word::WdCharacterWidth CharacterWidth { Microsoft::Office::Interop::Word::WdCharacterWidth get(); void set(Microsoft::Office::Interop::Word::WdCharacterWidth value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(326)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(326)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(326)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.WdCharacterWidth</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Cette propriété renvoie ou définit la largeur de caractère de la plage spécifiée.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckGrammar">
      <MemberSignature Language="C#" Value="public void CheckGrammar ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CheckGrammar() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.Range.CheckGrammar" />
      <MemberSignature Language="VB.NET" Value="Public Sub CheckGrammar ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CheckGrammar();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(204)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Cet exemple montre comment commencer une vérification de l'orthographe et de la grammaire dans l'ensemble des articles du document actif.</summary>
        <remarks><para>Si le document ou la plage contient des erreurs, cette méthode affiche la boîte de dialogue grammaire et orthographe (menu Outils), dans laquelle la case à cocher Vérifier la grammaire est activée. Lorsqu'elle est appliquée à un document, cette méthode vérifie tous les articles disponibles (notamment les en-têtes, les pieds de page et les zones de texte).</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckSpelling">
      <MemberSignature Language="C#" Value="public void CheckSpelling (ref object CustomDictionary, ref object IgnoreUppercase, ref object AlwaysSuggest, ref object CustomDictionary2, ref object CustomDictionary3, ref object CustomDictionary4, ref object CustomDictionary5, ref object CustomDictionary6, ref object CustomDictionary7, ref object CustomDictionary8, ref object CustomDictionary9, ref object CustomDictionary10);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CheckSpelling([in]object&amp; CustomDictionary, [in]object&amp; IgnoreUppercase, [in]object&amp; AlwaysSuggest, [in]object&amp; CustomDictionary2, [in]object&amp; CustomDictionary3, [in]object&amp; CustomDictionary4, [in]object&amp; CustomDictionary5, [in]object&amp; CustomDictionary6, [in]object&amp; CustomDictionary7, [in]object&amp; CustomDictionary8, [in]object&amp; CustomDictionary9, [in]object&amp; CustomDictionary10) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.Range.CheckSpelling(System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CheckSpelling (Optional ByRef CustomDictionary As Object, Optional ByRef IgnoreUppercase As Object, Optional ByRef AlwaysSuggest As Object, Optional ByRef CustomDictionary2 As Object, Optional ByRef CustomDictionary3 As Object, Optional ByRef CustomDictionary4 As Object, Optional ByRef CustomDictionary5 As Object, Optional ByRef CustomDictionary6 As Object, Optional ByRef CustomDictionary7 As Object, Optional ByRef CustomDictionary8 As Object, Optional ByRef CustomDictionary9 As Object, Optional ByRef CustomDictionary10 As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(205)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="CustomDictionary" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="IgnoreUppercase" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="AlwaysSuggest" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="CustomDictionary2" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="CustomDictionary3" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="CustomDictionary4" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="CustomDictionary5" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="CustomDictionary6" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="CustomDictionary7" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="CustomDictionary8" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="CustomDictionary9" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="CustomDictionary10" Type="System.Object&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="CustomDictionary"><b>Objet</b>facultatif. Expression qui renvoie un <see cref="T:Microsoft.Office.Interop.Word.Dictionary" /> objet ou le nom de fichier du dictionnaire personnel.</param>
        <param name="IgnoreUppercase"><b>Objet</b>facultatif. <b>True</b> si les majuscules sont ignorées. Si vous ne spécifiez pas cet argument, la valeur actuelle <see cref="P:Microsoft.Office.Interop.Word.Options.IgnoreUppercase" /> de la propriété est utilisée.</param>
        <param name="AlwaysSuggest"><b>Objet</b>facultatif. <b>True</b> pour que Microsoft Word suggère toujours des corrections. Si vous ne spécifiez pas cet argument, la valeur actuelle <see cref="P:Microsoft.Office.Interop.Word.Options.SuggestSpellingCorrections" /> de la propriété est utilisée.</param>
        <param name="CustomDictionary2"><b>Objet</b>facultatif. Expression qui renvoie un objet <b>Dictionary</b> ou le nom de fichier d'un dictionnaire personnel supplémentaire. Vous pouvez spécifier jusqu'à neuf dictionnaires supplémentaires.</param>
        <param name="CustomDictionary3"><b>Objet</b>facultatif. Expression qui renvoie un objet <b>Dictionary</b> ou le nom de fichier d'un dictionnaire personnel supplémentaire.</param>
        <param name="CustomDictionary4"><b>Objet</b>facultatif. Expression qui renvoie un objet <b>Dictionary</b> ou le nom de fichier d'un dictionnaire personnel supplémentaire.</param>
        <param name="CustomDictionary5"><b>Objet</b>facultatif. Expression qui renvoie un objet <b>Dictionary</b> ou le nom de fichier d'un dictionnaire personnel supplémentaire.</param>
        <param name="CustomDictionary6"><b>Objet</b>facultatif. Expression qui renvoie un objet <b>Dictionary</b> ou le nom de fichier d'un dictionnaire personnel supplémentaire.</param>
        <param name="CustomDictionary7"><b>Objet</b>facultatif. Expression qui renvoie un objet <b>Dictionary</b> ou le nom de fichier d'un dictionnaire personnel supplémentaire.</param>
        <param name="CustomDictionary8"><b>Objet</b>facultatif. Expression qui renvoie un objet <b>Dictionary</b> ou le nom de fichier d'un dictionnaire personnel supplémentaire.</param>
        <param name="CustomDictionary9"><b>Objet</b>facultatif. Expression qui renvoie un objet <b>Dictionary</b> ou le nom de fichier d'un dictionnaire personnel supplémentaire.</param>
        <param name="CustomDictionary10"><b>Objet</b>facultatif. Expression qui renvoie un objet <b>Dictionary</b> ou le nom de fichier d'un dictionnaire personnel supplémentaire.</param>
        <summary>Commence une vérification de l’orthographe pour la plage spécifiée.</summary>
        <remarks><para>Si le document ou la plage contient des erreurs, cette méthode affiche la boîte de dialogue Orthographe (menu Outils), dans laquelle la case à cocher Vérifier la grammaire est désactivée. Dans le cas d'un document, cette méthode vérifie tous les articles disponibles (notamment les en-têtes, pieds de page et zones de texte).</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckSynonyms">
      <MemberSignature Language="C#" Value="public void CheckSynonyms ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CheckSynonyms() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.Range.CheckSynonyms" />
      <MemberSignature Language="VB.NET" Value="Public Sub CheckSynonyms ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CheckSynonyms();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(180)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Affiche la boîte de dialogue Dictionnaire des synonymes qui contient la liste des mots de substitution, c'est-à-dire des synonymes de ceux que contient la plage spécifiée.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Collapse">
      <MemberSignature Language="C#" Value="public void Collapse (ref object Direction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Collapse([in]object&amp; Direction) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.Range.Collapse(System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Collapse (Optional ByRef Direction As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(101)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Direction" Type="System.Object&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="Direction"><b>Objet</b>facultatif. Sens dans lequel s'effectue la réduction de la plage ou de la sélection. Il peut s’agir de l' <see cref="T:Microsoft.Office.Interop.Word.WdCollapseDirection" /> une des constantes suivantes: <b>wdCollapseEnd</b> ou <b>wdCollapseStart</b>. La valeur par défaut est <b>wdCollapseStart</b>.</param>
        <summary>Réduit une plage à la position de début ou de fin.</summary>
        <remarks><para>Une fois qu’une plage est réduite, les points de début et de fin sont égaux.</para>
          <para>Si vous utilisez <b>wdCollapseEnd</b> pour réduire une plage qui fait référence à un paragraphe entier, la plage se situe après le symbole de fin de paragraphe (le début du paragraphe suivant). Toutefois, vous pouvez déplacer la plage d’un caractère vers l’arrière <see cref="M:Microsoft.Office.Interop.Word.Range.MoveEnd(System.Object@,System.Object@)" /> à l’aide de la méthode une fois la plage réduite.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Columns">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.Columns Columns { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Word.Columns Columns" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.Range.Columns" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Columns As Columns" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Word::Columns ^ Columns { Microsoft::Office::Interop::Word::Columns ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(302)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(302)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.Columns</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Renvoie une <see cref="T:Microsoft.Office.Interop.Word.Columns" /> collection qui représente toutes les colonnes de tableau contenues dans la plage.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CombineCharacters">
      <MemberSignature Language="C#" Value="public bool CombineCharacters { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CombineCharacters" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.Range.CombineCharacters" />
      <MemberSignature Language="VB.NET" Value="Public Property CombineCharacters As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CombineCharacters { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(267)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(267)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(267)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Détermine si la plage spécifiée contient des caractères combinés.</summary>
        <value>To be added.</value>
        <remarks><para>Cette propriété renvoie la <b>valeur true</b> si la plage spécifiée contient des caractères combinés et la <b>valeur false</b> dans le cas contraire.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Comments">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.Comments Comments { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Word.Comments Comments" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.Range.Comments" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Comments As Comments" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Word::Comments ^ Comments { Microsoft::Office::Interop::Word::Comments ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(56)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(56)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.Comments</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Renvoie une <see cref="T:Microsoft.Office.Interop.Word.Comments" /> collection qui représente tous les commentaires de la plage spécifiée.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ComputeStatistics">
      <MemberSignature Language="C#" Value="public int ComputeStatistics (Microsoft.Office.Interop.Word.WdStatistic Statistic);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 ComputeStatistics([in]valuetype Microsoft.Office.Interop.Word.WdStatistic Statistic) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.Range.ComputeStatistics(Microsoft.Office.Interop.Word.WdStatistic)" />
      <MemberSignature Language="VB.NET" Value="Public Function ComputeStatistics (Statistic As WdStatistic) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int ComputeStatistics(Microsoft::Office::Interop::Word::WdStatistic Statistic);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(178)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Statistic" Type="Microsoft.Office.Interop.Word.WdStatistic" />
      </Parameters>
      <Docs>
        <param name="Statistic">Obligatoire <see cref="T:Microsoft.Office.Interop.Word.WdStatistic" />.</param>
        <summary>Renvoie une statistique basée sur le contenu de la plage spécifiée.</summary>
        <returns>To be added.</returns>
        <remarks><para>Certaines des constantes <b>WdStatistic</b> peuvent ne pas être disponibles, en fonction de la prise en charge de langue (anglais (États-Unis), par exemple) que vous avez sélectionnée ou installée.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Conflicts">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.Conflicts Conflicts { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Word.Conflicts Conflicts" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.Range.Conflicts" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Conflicts As Conflicts" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Word::Conflicts ^ Conflicts { Microsoft::Office::Interop::Word::Conflicts ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(506)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(506)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.Conflicts</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient un <see cref="T:Microsoft.Office.Interop.Word.Conflicts" /> objet de collection qui contient tous les objets Conflict de la plage.</summary>
        <value>Objet <see cref="T:Microsoft.Office.Interop.Word.Conflicts" /> de collection qui contient tous les objets Conflict de la plage.</value>
        <remarks><para>En lecture seule. Utilisez cette propriété pour renvoyer l' <see cref="T:Microsoft.Office.Interop.Word.Conflicts" /> objet de collection d’un document. Utilisez <b></b>des conflits<paramref name="Index" />(), <paramref name="Index" /> où est le numéro d’index de conflit, pour <see cref="T:Microsoft.Office.Interop.Word.Conflict" /> renvoyer un seul objet.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="ContentControls">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.ContentControls ContentControls { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Word.ContentControls ContentControls" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.Range.ContentControls" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ContentControls As ContentControls" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Word::ContentControls ^ ContentControls { Microsoft::Office::Interop::Word::ContentControls ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(424)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(424)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.ContentControls</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Renvoie une <see cref="T:Microsoft.Office.Interop.Word.ContentControls" /> collection qui représente les contrôles de contenu contenus dans une plage. En lecture seule.</summary>
        <value><see cref="T:Microsoft.Office.Interop.Word.ContentControls" /></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConvertHangulAndHanja">
      <MemberSignature Language="C#" Value="public void ConvertHangulAndHanja (ref object ConversionsMode, ref object FastConversion, ref object CheckHangulEnding, ref object EnableRecentOrdering, ref object CustomDictionary);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ConvertHangulAndHanja([in]object&amp; ConversionsMode, [in]object&amp; FastConversion, [in]object&amp; CheckHangulEnding, [in]object&amp; EnableRecentOrdering, [in]object&amp; CustomDictionary) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.Range.ConvertHangulAndHanja(System.Object@,System.Object@,System.Object@,System.Object@,System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ConvertHangulAndHanja (Optional ByRef ConversionsMode As Object, Optional ByRef FastConversion As Object, Optional ByRef CheckHangulEnding As Object, Optional ByRef EnableRecentOrdering As Object, Optional ByRef CustomDictionary As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(221)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ConversionsMode" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="FastConversion" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="CheckHangulEnding" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="EnableRecentOrdering" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="CustomDictionary" Type="System.Object&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="ConversionsMode"><b>Objet</b>facultatif. Définit le sens de la conversion entre hangûl et Hanja. Peut être l’une des constantes suivantes <see cref="T:Microsoft.Office.Interop.Word.WdMultipleWordConversionsMode" /> : <b>wdHangulToHanja</b> ou <b>wdHanjaToHangul</b>. La valeur par défaut est la valeur actuelle de <see cref="P:Microsoft.Office.Interop.Word.Options.MultipleWordConversionsMode" /> la propriété.</param>
        <param name="FastConversion"><b>Objet</b>facultatif. <b>La valeur true</b> si Microsoft Word convertit automatiquement un mot avec une seule suggestion de conversion. La valeur par défaut est la valeur actuelle de <see cref="P:Microsoft.Office.Interop.Word.Options.HangulHanjaFastConversion" /> la propriété.</param>
        <param name="CheckHangulEnding"><b>Objet</b>facultatif. La <b>valeur true</b> si Word détecte automatiquement les terminaisons hangûl et les ignore. La valeur par défaut est la valeur actuelle de <see cref="P:Microsoft.Office.Interop.Word.Options.CheckHangulEndings" /> la propriété. Cet argument est ignoré si l' <paramref name="ConversionsMode" /> argument est défini sur <b>wdHanjaToHangul</b>.</param>
        <param name="EnableRecentOrdering"><b>Objet</b>facultatif. <b>La valeur true</b> si Word affiche les derniers mots utilisés en haut de la liste des suggestions. La valeur par défaut est la valeur actuelle de <see cref="P:Microsoft.Office.Interop.Word.Options.EnableHangulHanjaRecentOrdering" /> la propriété.</param>
        <param name="CustomDictionary"><b>Objet</b>facultatif. Nom d’un dictionnaire de Conversion hangûl-hanja personnalisé. Utilisez cet argument pour utiliser un dictionnaire personnel avec des conversions hangûl-hanja qui ne figurent pas dans le dictionnaire principal.</param>
        <summary>Convertit la plage spécifiée de l’hangûl en hanja ou vice versa.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConvertToTable">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.Table ConvertToTable (ref object Separator, ref object NumRows, ref object NumColumns, ref object InitialColumnWidth, ref object Format, ref object ApplyBorders, ref object ApplyShading, ref object ApplyFont, ref object ApplyColor, ref object ApplyHeadingRows, ref object ApplyLastRow, ref object ApplyFirstColumn, ref object ApplyLastColumn, ref object AutoFit, ref object AutoFitBehavior, ref object DefaultTableBehavior);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Word.Table ConvertToTable([in]object&amp; Separator, [in]object&amp; NumRows, [in]object&amp; NumColumns, [in]object&amp; InitialColumnWidth, [in]object&amp; Format, [in]object&amp; ApplyBorders, [in]object&amp; ApplyShading, [in]object&amp; ApplyFont, [in]object&amp; ApplyColor, [in]object&amp; ApplyHeadingRows, [in]object&amp; ApplyLastRow, [in]object&amp; ApplyFirstColumn, [in]object&amp; ApplyLastColumn, [in]object&amp; AutoFit, [in]object&amp; AutoFitBehavior, [in]object&amp; DefaultTableBehavior) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.Range.ConvertToTable(System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Function ConvertToTable (Optional ByRef Separator As Object, Optional ByRef NumRows As Object, Optional ByRef NumColumns As Object, Optional ByRef InitialColumnWidth As Object, Optional ByRef Format As Object, Optional ByRef ApplyBorders As Object, Optional ByRef ApplyShading As Object, Optional ByRef ApplyFont As Object, Optional ByRef ApplyColor As Object, Optional ByRef ApplyHeadingRows As Object, Optional ByRef ApplyLastRow As Object, Optional ByRef ApplyFirstColumn As Object, Optional ByRef ApplyLastColumn As Object, Optional ByRef AutoFit As Object, Optional ByRef AutoFitBehavior As Object, Optional ByRef DefaultTableBehavior As Object) As Table" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(498)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.Table</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Separator" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="NumRows" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="NumColumns" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="InitialColumnWidth" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="Format" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="ApplyBorders" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="ApplyShading" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="ApplyFont" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="ApplyColor" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="ApplyHeadingRows" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="ApplyLastRow" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="ApplyFirstColumn" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="ApplyLastColumn" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="AutoFit" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="AutoFitBehavior" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="DefaultTableBehavior" Type="System.Object&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="Separator"><b>Objet</b>facultatif. Spécifie le caractère utilisé pour séparer le texte dans des cellules. Il peut s’agir d’un <see cref="T:Microsoft.Office.Interop.Word.WdTableFieldSeparator" /> caractère ou d’une constante. Si cet argument est omis, la valeur de la propriété <b>DefaultTableSeparator</b> est utilisée.</param>
        <param name="NumRows"><b>Objet</b>facultatif. Nombre de lignes du tableau. Si vous ne spécifiez pas cet argument, Word définit le nombre de lignes en fonction du contenu de la plage.</param>
        <param name="NumColumns"><b>Objet</b>facultatif. Nombre de colonnes du tableau. Si vous ne spécifiez pas cet argument, Word définit le nombre de colonnes en fonction du contenu de la plage.</param>
        <param name="InitialColumnWidth"><b>Objet</b>facultatif. Largeur initiale de chaque colonne, exprimée en points. Si vous ne spécifiez pas cet argument, Word calcule et ajuste la largeur des colonnes de sorte que le tableau s'étire d'une marge à l'autre.</param>
        <param name="Format"><b>Objet</b>facultatif. Spécifie l’un des formats prédéfinis figurant dans la boîte de dialogue mise en forme automatique de tableau (menu Tableau). Il peut s’agir de <see cref="T:Microsoft.Office.Interop.Word.WdTableFormat" /> l’une des constantes.</param>
        <param name="ApplyBorders"><b>Objet</b>facultatif. <b>True</b> pour appliquer les propriétés de la bordure du format spécifié.</param>
        <param name="ApplyShading"><b>Objet</b>facultatif. <b>True</b> pour appliquer les propriétés de trame de fond du format spécifié.</param>
        <param name="ApplyFont"><b>Objet</b>facultatif. <b>True</b> pour appliquer les propriétés de police du format spécifié.</param>
        <param name="ApplyColor"><b>Objet</b>facultatif. <b>True</b> pour appliquer les propriétés de couleur du format spécifié.</param>
        <param name="ApplyHeadingRows"><b>Objet</b>facultatif. <b>True</b> pour appliquer les propriétés de ligne de titre de la mise en forme spécifiée.</param>
        <param name="ApplyLastRow"><b>Objet</b>facultatif. <b>True</b> pour appliquer les propriétés de dernière ligne du format spécifié.</param>
        <param name="ApplyFirstColumn"><b>Objet</b>facultatif. <b>True</b> pour appliquer les propriétés de première colonne du format spécifié.</param>
        <param name="ApplyLastColumn"><b>Objet</b>facultatif. <b>True</b> pour appliquer les propriétés de dernière colonne du format spécifié.</param>
        <param name="AutoFit"><b>Objet</b>facultatif. <b>True</b> pour diminuer la largeur des colonnes du tableau autant que possibles sans modifier la façon dont le texte s'ajuste dans les cellules.</param>
        <param name="AutoFitBehavior"><b>Objet</b>facultatif. Définit les règles d'ajustement automatique de la façon dont Word redimensionne un tableau. Il peut s’agir de <see cref="T:Microsoft.Office.Interop.Word.WdAutoFitBehavior" /> l’une des constantes. Si <paramref name="DefaultTableBehavior" /> est <b>wdWord8TableBehavior</b>, cet argument est ignoré.</param>
        <param name="DefaultTableBehavior"><b>Objet</b>facultatif. Définit une valeur qui indique si Microsoft Word redimensionne automatiquement les cellules d'un tableau pour s'adapter au contenu (ajustement automatique). Il peut s' <see cref="T:Microsoft.Office.Interop.Word.WdDefaultTableBehavior" /> agir d’une constante.</param>
        <summary>Convertit le texte d’une plage ou d’une sélection en tableau.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConvertToTableOld">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.Table ConvertToTableOld (ref object Separator, ref object NumRows, ref object NumColumns, ref object InitialColumnWidth, ref object Format, ref object ApplyBorders, ref object ApplyShading, ref object ApplyFont, ref object ApplyColor, ref object ApplyHeadingRows, ref object ApplyLastRow, ref object ApplyFirstColumn, ref object ApplyLastColumn, ref object AutoFit);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Word.Table ConvertToTableOld([in]object&amp; Separator, [in]object&amp; NumRows, [in]object&amp; NumColumns, [in]object&amp; InitialColumnWidth, [in]object&amp; Format, [in]object&amp; ApplyBorders, [in]object&amp; ApplyShading, [in]object&amp; ApplyFont, [in]object&amp; ApplyColor, [in]object&amp; ApplyHeadingRows, [in]object&amp; ApplyLastRow, [in]object&amp; ApplyFirstColumn, [in]object&amp; ApplyLastColumn, [in]object&amp; AutoFit) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.Range.ConvertToTableOld(System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Function ConvertToTableOld (Optional ByRef Separator As Object, Optional ByRef NumRows As Object, Optional ByRef NumColumns As Object, Optional ByRef InitialColumnWidth As Object, Optional ByRef Format As Object, Optional ByRef ApplyBorders As Object, Optional ByRef ApplyShading As Object, Optional ByRef ApplyFont As Object, Optional ByRef ApplyColor As Object, Optional ByRef ApplyHeadingRows As Object, Optional ByRef ApplyLastRow As Object, Optional ByRef ApplyFirstColumn As Object, Optional ByRef ApplyLastColumn As Object, Optional ByRef AutoFit As Object) As Table" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(162)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.Table</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Separator" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="NumRows" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="NumColumns" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="InitialColumnWidth" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="Format" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="ApplyBorders" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="ApplyShading" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="ApplyFont" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="ApplyColor" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="ApplyHeadingRows" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="ApplyLastRow" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="ApplyFirstColumn" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="ApplyLastColumn" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="AutoFit" Type="System.Object&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="Separator">To be added.</param>
        <param name="NumRows">To be added.</param>
        <param name="NumColumns">To be added.</param>
        <param name="InitialColumnWidth">To be added.</param>
        <param name="Format">To be added.</param>
        <param name="ApplyBorders">To be added.</param>
        <param name="ApplyShading">To be added.</param>
        <param name="ApplyFont">To be added.</param>
        <param name="ApplyColor">To be added.</param>
        <param name="ApplyHeadingRows">To be added.</param>
        <param name="ApplyLastRow">To be added.</param>
        <param name="ApplyFirstColumn">To be added.</param>
        <param name="ApplyLastColumn">To be added.</param>
        <param name="AutoFit">To be added.</param>
        <summary>Réservé à une utilisation interne.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public void Copy ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Copy() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.Range.Copy" />
      <MemberSignature Language="VB.NET" Value="Public Sub Copy ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Copy();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(120)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Copie l'objet spécifié dans le Presse-papiers.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyAsPicture">
      <MemberSignature Language="C#" Value="public void CopyAsPicture ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyAsPicture() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.Range.CopyAsPicture" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyAsPicture ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CopyAsPicture();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(167)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>La méthode <b>CopyAsPicture</b> fonctionne de la même manière que <see cref="M:Microsoft.Office.Interop.Word.Range.Copy" /> la méthode.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreatePublisher">
      <MemberSignature Language="C#" Value="public void CreatePublisher (ref object Edition, ref object ContainsPICT, ref object ContainsRTF, ref object ContainsText);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CreatePublisher([in]object&amp; Edition, [in]object&amp; ContainsPICT, [in]object&amp; ContainsRTF, [in]object&amp; ContainsText) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.Range.CreatePublisher(System.Object@,System.Object@,System.Object@,System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CreatePublisher (Optional ByRef Edition As Object, Optional ByRef ContainsPICT As Object, Optional ByRef ContainsRTF As Object, Optional ByRef ContainsText As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(182)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Edition" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="ContainsPICT" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="ContainsRTF" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="ContainsText" Type="System.Object&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="Edition">Ce paramètre est destiné à Macintosh uniquement et ne doit pas être utilisé.</param>
        <param name="ContainsPICT">Ce paramètre est destiné à Macintosh uniquement et ne doit pas être utilisé.</param>
        <param name="ContainsRTF">Ce paramètre est destiné à Macintosh uniquement et ne doit pas être utilisé.</param>
        <param name="ContainsText">Ce paramètre est destiné à Macintosh uniquement et ne doit pas être utilisé.</param>
        <summary>Réservé à un usage interne. Ce membre est pour Macintosh uniquement et ne doit pas être utilisé.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Creator">
      <MemberSignature Language="C#" Value="public int Creator { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Creator" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.Range.Creator" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Creator As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Creator { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1001)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1001)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Renvoie un entier 32 bits qui indique l'application dans laquelle l'objet spécifié a été créé.</summary>
        <value>To be added.</value>
        <remarks><para>Si l’objet spécifié a été créé dans Microsoft Word, cette propriété renvoie le nombre hexadécimal 4D535744, qui représente la chaîne «MSWD». [!REMARQUE] Cette valeur peut également être représentée par la constante <b>wdCreatorCode</b>.</para>
          <para>La propriété <b>Creator</b> a initialement été conçue pour être utilisée sur Macintosh, où chaque application possède un code de créateur de quatre caractères. Par exemple, Microsoft Word possède le code de créateur MSWD. Pour plus d'informations sur cette propriété, consultez la référence du langage aide incluse avec Microsoft Office Édition Macintosh.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Cut">
      <MemberSignature Language="C#" Value="public void Cut ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Cut() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.Range.Cut" />
      <MemberSignature Language="VB.NET" Value="Public Sub Cut ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Cut();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(119)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Supprime l'objet spécifié du document et le place dans le Presse-papiers.</summary>
        <remarks><para>Pour un <see cref="T:Microsoft.Office.Interop.Word.Range" /> objet <see cref="T:Microsoft.Office.Interop.Word.Selection" /> ou, le contenu de l’objet est coupé dans le presse-papiers, mais l’objet réduit reste dans le document.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public int Delete (ref object Unit, ref object Count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Delete([in]object&amp; Unit, [in]object&amp; Count) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.Range.Delete(System.Object@,System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Function Delete (Optional ByRef Unit As Object, Optional ByRef Count As Object) As Integer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(127)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Unit" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="Count" Type="System.Object&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="Unit"><b>Objet</b>facultatif. Unité de suppression de la plage ou de la sélection réduite. Il peut s’agir de l' <see cref="T:Microsoft.Office.Interop.Word.WdUnits" /> une des constantes suivantes: <b>wdCharacter</b> (valeur par défaut) ou <b>wdWord</b>.</param>
        <param name="Count"><b>Objet</b>facultatif. Nombre d'unités à supprimer. Pour supprimer des unités après la plage ou la sélection, réduisez la plage ou la sélection, puis utilisez un nombre positif. Pour supprimer des unités situées avant la plage ou la sélection, réduisez la plage ou la sélection, puis utilisez un nombre négatif.</param>
        <summary>Supprime le nombre de caractères ou de mots spécifié.</summary>
        <returns>To be added.</returns>
        <remarks><para>Cette méthode renvoie une valeur de <b>type Integer</b> qui indique le nombre d’éléments supprimés, ou elle renvoie la valeur 0 (zéro) si la suppression a échoué.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="DetectLanguage">
      <MemberSignature Language="C#" Value="public void DetectLanguage ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DetectLanguage() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.Range.DetectLanguage" />
      <MemberSignature Language="VB.NET" Value="Public Sub DetectLanguage ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DetectLanguage();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(203)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Analyse le texte spécifié pour en déterminer la langue.</summary>
        <remarks><para>Les résultats de la méthode <b>DetectLanguage</b> sont stockés dans la <see cref="P:Microsoft.Office.Interop.Word.Range.LanguageID" /> propriété caractère par caractère. Pour lire la propriété <b>LanguageID</b>, vous devez d'abord spécifier une sélection ou une plage de texte.</para>
          <para>Si la méthode <b>DetectLanguage</b> a déjà été appliquée au texte spécifié, la propriété <see cref="P:Microsoft.Office.Interop.Word.Range.LanguageDetected" /> a la valeur <b>true</b>. Pour réévaluer la langue du texte spécifié, vous devez d’abord affecter la valeur false à la propriété <b>LanguageDetected</b> .</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="DisableCharacterSpaceGrid">
      <MemberSignature Language="C#" Value="public bool DisableCharacterSpaceGrid { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DisableCharacterSpaceGrid" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.Range.DisableCharacterSpaceGrid" />
      <MemberSignature Language="VB.NET" Value="Public Property DisableCharacterSpaceGrid As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DisableCharacterSpaceGrid { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(141)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(141)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(141)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Détermine si Microsoft Word ignore le nombre de caractères par ligne de la plage.</summary>
        <value>To be added.</value>
        <remarks><para>Cette propriété renvoie la <b>valeur true</b> si Word ignore le nombre de caractères par ligne de la plage et <b>false</b> dans le cas contraire.</para>
          <para>Cette propriété renvoie <b>wdUndefined</b> si la propriété <b>DisableCharacterSpaceGrid</b> a la valeur <b>true</b> uniquement pour une partie de la plage spécifiée. </para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Document">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.Document Document { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Word.Document Document" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.Range.Document" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Document As Document" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Word::Document ^ Document { Microsoft::Office::Interop::Word::Document ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(409)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(409)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.Document</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Renvoie un <see cref="T:Microsoft.Office.Interop.Word.Document" /> objet associé à la plage spécifiée.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Duplicate">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.Range Duplicate { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Word.Range Duplicate" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.Range.Duplicate" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Duplicate As Range" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Word::Range ^ Duplicate { Microsoft::Office::Interop::Word::Range ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(6)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(6)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.Range</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Renvoie un <see cref="T:Microsoft.Office.Interop.Word.Range" /> Object qui représente toutes les propriétés de la plage spécifiée.</summary>
        <value>To be added.</value>
        <remarks><para>La duplication d'un objet <b>Range</b>, vous pouvez modifier la position du caractère de départ ou de fin de la plage dupliquée sans modifier la plage d'origine.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Editors">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.Editors Editors { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Word.Editors Editors" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.Range.Editors" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Editors As Editors" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Word::Editors ^ Editors { Microsoft::Office::Interop::Word::Editors ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(343)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(343)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.Editors</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Renvoie un <see cref="T:Microsoft.Office.Interop.Word.Editors" /> Object qui représente tous les utilisateurs autorisés à modifier une sélection ou une plage dans un document.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EmphasisMark">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.WdEmphasisMark EmphasisMark { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Word.WdEmphasisMark EmphasisMark" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.Range.EmphasisMark" />
      <MemberSignature Language="VB.NET" Value="Public Property EmphasisMark As WdEmphasisMark" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Word::WdEmphasisMark EmphasisMark { Microsoft::Office::Interop::Word::WdEmphasisMark get(); void set(Microsoft::Office::Interop::Word::WdEmphasisMark value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(140)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(140)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(140)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.WdEmphasisMark</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Cette propriété renvoie ou définit la marque d'accentuation d'un caractère ou une chaîne de caractères spécifique.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="End">
      <MemberSignature Language="C#" Value="public int End { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 End" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.Range.End" />
      <MemberSignature Language="VB.NET" Value="Public Property End As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int End { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(4)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(4)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(4)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Renvoie ou définit l'emplacement du caractère de fin d'une plage .</summary>
        <value>To be added.</value>
        <remarks><para>Si cette propriété a une valeur inférieure à celle de la <see cref="P:Microsoft.Office.Interop.Word.Range.Start" /> propriété, la propriété <b>Start</b> est définie sur la même valeur (autrement dit, les propriétés <b>Start</b> et <b>end</b> sont identiques).</para>
          <para>Les objets <b>Selection</b>, <b>Range</b>et <b>Bookmark</b> ont tous une position de départ et une position de fin. La position de fin est le point éloigné du début de l'histoire.</para>
          <para>Cette propriété renvoie la position du caractère de fin par rapport au début de l'histoire. Le principal article du document (<b>wdMainTextStory</b>) commence par le caractère dont l'emplacement est égal à 0 (zéro). Vous pouvez modifier la taille d'une sélection, d'une plage ou d'un signet en configurant cette propriété.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="EndnoteOptions">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.EndnoteOptions EndnoteOptions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Word.EndnoteOptions EndnoteOptions" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.Range.EndnoteOptions" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EndnoteOptions As EndnoteOptions" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Word::EndnoteOptions ^ EndnoteOptions { Microsoft::Office::Interop::Word::EndnoteOptions ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(411)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(411)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.EndnoteOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Renvoie un <see cref="T:Microsoft.Office.Interop.Word.EndnoteOptions" /> Object qui représente les notes de fin d’une plage ou d’une sélection.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Endnotes">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.Endnotes Endnotes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Word.Endnotes Endnotes" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.Range.Endnotes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Endnotes As Endnotes" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Word::Endnotes ^ Endnotes { Microsoft::Office::Interop::Word::Endnotes ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(55)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(55)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.Endnotes</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Renvoie une <see cref="T:Microsoft.Office.Interop.Word.Endnotes" /> collection qui représente toutes les notes de fin d’une plage.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EndOf">
      <MemberSignature Language="C#" Value="public int EndOf (ref object Unit, ref object Extend);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 EndOf([in]object&amp; Unit, [in]object&amp; Extend) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.Range.EndOf(System.Object@,System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Function EndOf (Optional ByRef Unit As Object, Optional ByRef Extend As Object) As Integer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(108)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Unit" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="Extend" Type="System.Object&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="Unit"><b>Objet</b>facultatif. Unité en fonction de laquelle déplacer la position du caractère de fin. Il peut s’agir de <see cref="T:Microsoft.Office.Interop.Word.WdUnits" /> l’une des constantes.</param>
        <param name="Extend"><b>Objet</b>facultatif. Il peut s’agir de <see cref="T:Microsoft.Office.Interop.Word.WdMovementType" /> l’une des constantes.</param>
        <summary>Déplace ou étend l'emplacement du caractère de fin d'une plage ou d'une sélection vers la fin de l'unité de texte spécifiée la plus proche.</summary>
        <returns>To be added.</returns>
        <remarks><para>Déplace ou étend l'emplacement du caractère de fin d'une plage ou d'une sélection vers la fin de l'unité de texte spécifiée la plus proche. Cette méthode renvoie une valeur qui correspond au nombre d'emplacements correspondant à la distance de déplacement ou d'extension de la plage ou de la sélection (le déplacement au sein d'un document est effectué vers l'avant).</para>
          <para>Si l'emplacement de fin et de début de la plage ou de la sélection correspond déjà à la fin de l'unité spécifiée, cette méthode ne déplace ni n'étend la plage ou la sélection. </para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="EnhMetaFileBits">
      <MemberSignature Language="C#" Value="public object EnhMetaFileBits { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object EnhMetaFileBits" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.Range.EnhMetaFileBits" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EnhMetaFileBits As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ EnhMetaFileBits { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(345)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(345)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Renvoie une image représentant le mode d’affichage d’une sélection ou d’une plage de texte.</summary>
        <value>To be added.</value>
        <remarks><para>La propriété <b>EnhMetaFileBits</b> renvoie un tableau d’octets qui peut être utilisé avec l’interface de programmation d’applications Microsoft Windows 32.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Expand">
      <MemberSignature Language="C#" Value="public int Expand (ref object Unit);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Expand([in]object&amp; Unit) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.Range.Expand(System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Function Expand (Optional ByRef Unit As Object) As Integer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(129)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Unit" Type="System.Object&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="Unit"><b>Objet</b>facultatif. Unité selon laquelle étendre la plage. Il peut s’agir de <see cref="T:Microsoft.Office.Interop.Word.WdUnits" /> l’une des constantes.</param>
        <summary>Développe la plage spécifiée.</summary>
        <returns>To be added.</returns>
        <remarks><para>Cette propriété renvoie le nombre de caractères ajoutés à la plage.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="ExportAsFixedFormat">
      <MemberSignature Language="C#" Value="public void ExportAsFixedFormat (string OutputFileName, Microsoft.Office.Interop.Word.WdExportFormat ExportFormat, bool OpenAfterExport = false, Microsoft.Office.Interop.Word.WdExportOptimizeFor OptimizeFor = Microsoft.Office.Interop.Word.WdExportOptimizeFor.wdExportOptimizeForPrint, bool ExportCurrentPage = false, Microsoft.Office.Interop.Word.WdExportItem Item = Microsoft.Office.Interop.Word.WdExportItem.wdExportDocumentContent, bool IncludeDocProps = false, bool KeepIRM = false, Microsoft.Office.Interop.Word.WdExportCreateBookmarks CreateBookmarks = Microsoft.Office.Interop.Word.WdExportCreateBookmarks.wdExportCreateNoBookmarks, bool DocStructureTags = false, bool BitmapMissingFonts = false, bool UseISO19005_1 = false, ref object FixedFormatExtClassPtr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ExportAsFixedFormat([in]string OutputFileName, [in]valuetype Microsoft.Office.Interop.Word.WdExportFormat ExportFormat, [in]bool OpenAfterExport, [in]valuetype Microsoft.Office.Interop.Word.WdExportOptimizeFor OptimizeFor, [in]bool ExportCurrentPage, [in]valuetype Microsoft.Office.Interop.Word.WdExportItem Item, [in]bool IncludeDocProps, [in]bool KeepIRM, [in]valuetype Microsoft.Office.Interop.Word.WdExportCreateBookmarks CreateBookmarks, [in]bool DocStructureTags, [in]bool BitmapMissingFonts, [in]bool UseISO19005_1, [in]object&amp; FixedFormatExtClassPtr) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.Range.ExportAsFixedFormat(System.String,Microsoft.Office.Interop.Word.WdExportFormat,System.Boolean,Microsoft.Office.Interop.Word.WdExportOptimizeFor,System.Boolean,Microsoft.Office.Interop.Word.WdExportItem,System.Boolean,System.Boolean,Microsoft.Office.Interop.Word.WdExportCreateBookmarks,System.Boolean,System.Boolean,System.Boolean,System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ExportAsFixedFormat (OutputFileName As String, ExportFormat As WdExportFormat, Optional OpenAfterExport As Boolean = false, Optional OptimizeFor As WdExportOptimizeFor = Microsoft.Office.Interop.Word.WdExportOptimizeFor.wdExportOptimizeForPrint, Optional ExportCurrentPage As Boolean = false, Optional Item As WdExportItem = Microsoft.Office.Interop.Word.WdExportItem.wdExportDocumentContent, Optional IncludeDocProps As Boolean = false, Optional KeepIRM As Boolean = false, Optional CreateBookmarks As WdExportCreateBookmarks = Microsoft.Office.Interop.Word.WdExportCreateBookmarks.wdExportCreateNoBookmarks, Optional DocStructureTags As Boolean = false, Optional BitmapMissingFonts As Boolean = false, Optional UseISO19005_1 As Boolean = false, Optional ByRef FixedFormatExtClassPtr As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(503)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="OutputFileName" Type="System.String" />
        <Parameter Name="ExportFormat" Type="Microsoft.Office.Interop.Word.WdExportFormat" />
        <Parameter Name="OpenAfterExport" Type="System.Boolean" />
        <Parameter Name="OptimizeFor" Type="Microsoft.Office.Interop.Word.WdExportOptimizeFor" />
        <Parameter Name="ExportCurrentPage" Type="System.Boolean" />
        <Parameter Name="Item" Type="Microsoft.Office.Interop.Word.WdExportItem" />
        <Parameter Name="IncludeDocProps" Type="System.Boolean" />
        <Parameter Name="KeepIRM" Type="System.Boolean" />
        <Parameter Name="CreateBookmarks" Type="Microsoft.Office.Interop.Word.WdExportCreateBookmarks" />
        <Parameter Name="DocStructureTags" Type="System.Boolean" />
        <Parameter Name="BitmapMissingFonts" Type="System.Boolean" />
        <Parameter Name="UseISO19005_1" Type="System.Boolean" />
        <Parameter Name="FixedFormatExtClassPtr" Type="System.Object&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="OutputFileName"><b>String</b> obligatoire chemin d’accès et nom de fichier du nouveau fichier PDF ou XPS.</param>
        <param name="ExportFormat">Obligatoire <see cref="T:Microsoft.Office.Interop.Word.WdExportFormat" /> spécifie le format PDF ou XPS.</param>
        <param name="OpenAfterExport"><b>Boolean</b> facultatif ouvre le nouveau fichier après avoir exporté le contenu.</param>
        <param name="OptimizeFor">Facultatif <see cref="T:Microsoft.Office.Interop.Word.WdExportOptimizeFor" /> indique s’il faut optimiser l’écran ou l’impression.</param>
        <param name="ExportCurrentPage"><b>Boolean</b> facultatif indique si la page actuelle doit être exportée.  <b>True :</b> exporte la totalité de la page. <b>False</b> exporte uniquement la sélection actuelle.</param>
        <param name="Item">Facultatif <see cref="T:Microsoft.Office.Interop.Word.WdExportItem" /> spécifie si le processus d’exportation inclut uniquement le texte ou inclut du texte avec des balises.</param>
        <param name="IncludeDocProps"><b>Boolean</b> facultatif indique s’il faut inclure les propriétés du document dans le fichier nouvellement exporté.</param>
        <param name="KeepIRM">Optional <b>Boolean</b> indique s’il faut copier les autorisations IRM vers un document XPS si le document source dispose de protections IRM. Valeur par défaut est <b>True</b>.</param>
        <param name="CreateBookmarks">Facultatif <see cref="T:Microsoft.Office.Interop.Word.WdExportCreateBookmarks" /> indique si les signets doivent être exportés et le type de signets à exporter.</param>
        <param name="DocStructureTags"><b>Boolean</b> facultatif indique s’il faut inclure des données supplémentaires pour aider les lecteurs d’écran, par exemple des informations sur le flux et l’organisation logique du contenu. La valeur par défaut est  <b>True</b>.</param>
        <param name="BitmapMissingFonts"><b>Boolean</b> facultatif indique s’il faut inclure une image bitmap du texte. Définissez ce paramètre sur <b>True</b> lorsque les licences de police n'autorisent pas une police à incorporer dans le fichier PDF. S’il a la valeur <b>False</b>, la police est référencée et, si la police créée n’est pas disponible, l’ordinateur de la visionneuse la remplace par la police appropriée. La valeur par défaut est <b>True</b>.</param>
        <param name="UseISO19005_1"><b>Boolean</b> facultatif indique s’il faut limiter l’utilisation du PDF au sous-ensemble PDF normalisé en tant que ISO 19005-1. Si ce paramètre à la valeur <b>True</b>, les fichiers obtenus seront plus fiables et autonomes, mais ils risquent aussi d’être plus volumineux et de contenir davantage d’artefacts visuels en raison des restrictions de format. La valeur par défaut est <b>False</b>.</param>
        <param name="FixedFormatExtClassPtr">L' <b>objet</b> facultatif spécifie un pointeur vers un complément qui autorise les appels à une autre implémentation de code.  Cette dernière interprète les descriptions EMF et EMF+ page générées par les applications pour produire des PDF ou XPS propres. Pour plus d’informations, reportez-vous à la rubrique «<a href="bd5ab634-71c4-4d29-a264-05969eded844">extension de la fonctionnalité d’exportation au format fixe Office (2007)</a></param>
        <summary>Enregistre une partie d’un document au format PDF ou XPS.</summary>
        <remarks><para>Vous pouvez enregistrer un fichier au format PDF ou XPS à partir d’un programme Microsoft Office 2007 uniquement après avoir installé un complément.  <a href="http://www.microsoft.com/downloads/details.aspx?FamilyId=4D951911-3E7E-4AE6-B059-A2E79ED87041&amp;displaylang=enOnline">Centre de téléchargement Microsoft</a></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="ExportFragment">
      <MemberSignature Language="C#" Value="public void ExportFragment (string FileName, Microsoft.Office.Interop.Word.WdSaveFormat Format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ExportFragment([in]string FileName, [in]valuetype Microsoft.Office.Interop.Word.WdSaveFormat Format) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.Range.ExportFragment(System.String,Microsoft.Office.Interop.Word.WdSaveFormat)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ExportFragment (FileName As String, Format As WdSaveFormat)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ExportFragment(System::String ^ FileName, Microsoft::Office::Interop::Word::WdSaveFormat Format);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(425)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileName" Type="System.String" />
        <Parameter Name="Format" Type="Microsoft.Office.Interop.Word.WdSaveFormat" />
      </Parameters>
      <Docs>
        <param name="FileName"><b>Chaîne</b> obligatoire spécifie le chemin d’accès et le nom du fichier dans lequel enregistrer le fragment de document.</param>
        <param name="Format">Obligatoire <see cref="T:Microsoft.Office.Interop.Word.WdSaveFormat" /> spécifie le format de fichier du fichier de fragment de document. Vous pouvez enregistrer un fragment de document dans n’importe quel format pris en charge par Microsoft Office Word.</param>
        <summary>Exporte la plage sélectionnée dans un document pour l'utiliser en tant que fragment de ce document.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Fields">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.Fields Fields { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Word.Fields Fields" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.Range.Fields" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Fields As Fields" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Word::Fields ^ Fields { Microsoft::Office::Interop::Word::Fields ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(64)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.Fields</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Renvoie une collection en lecture <see cref="T:Microsoft.Office.Interop.Word.Fields" /> seule qui représente tous les champs de la plage.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Find">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.Find Find { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Word.Find Find" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.Range.Find" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Find As Find" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Word::Find ^ Find { Microsoft::Office::Interop::Word::Find ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(262)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(262)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.Find</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Renvoie un <see cref="T:Microsoft.Office.Interop.Word.Find" /> objet qui contient les critères spécifiés pour une opération de recherche.</summary>
        <value>To be added.</value>
        <remarks><para>Lorsque cette propriété est utilisée avec un <see cref="T:Microsoft.Office.Interop.Word.Selection" /> objet, la sélection est modifiée si l’opération de recherche réussit. Si cette propriété est utilisée avec un <see cref="T:Microsoft.Office.Interop.Word.Range" /> objet, la sélection n’est pas modifiée <see cref="M:Microsoft.Office.Interop.Word.Range.Select" /> sauf si la méthode est appliquée.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="FitTextWidth">
      <MemberSignature Language="C#" Value="public float FitTextWidth { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 FitTextWidth" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.Range.FitTextWidth" />
      <MemberSignature Language="VB.NET" Value="Public Property FitTextWidth As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property float FitTextWidth { float get(); void set(float value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(264)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(264)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(264)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Cette propriété renvoie ou définit la largeur (dans les unités de mesure en cours) dans laquelle Microsoft Word ajuste le texte de la plage active.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Font">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.Font Font { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Word.Font Font" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.Range.Font" />
      <MemberSignature Language="VB.NET" Value="Public Property Font As Font" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Word::Font ^ Font { Microsoft::Office::Interop::Word::Font ^ get(); void set(Microsoft::Office::Interop::Word::Font ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(5)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(5)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(5)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.Font</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Cette propriété renvoie ou <see cref="T:Microsoft.Office.Interop.Word.Font" /> définit un objet qui représente la mise en forme de caractères de l’objet spécifié.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FootnoteOptions">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.FootnoteOptions FootnoteOptions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Word.FootnoteOptions FootnoteOptions" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.Range.FootnoteOptions" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FootnoteOptions As FootnoteOptions" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Word::FootnoteOptions ^ FootnoteOptions { Microsoft::Office::Interop::Word::FootnoteOptions ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(410)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(410)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.FootnoteOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Renvoie un <see cref="T:Microsoft.Office.Interop.Word.FootnoteOptions" /> Object qui représente les options de note de bas de page d’une plage.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Footnotes">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.Footnotes Footnotes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Word.Footnotes Footnotes" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.Range.Footnotes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Footnotes As Footnotes" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Word::Footnotes ^ Footnotes { Microsoft::Office::Interop::Word::Footnotes ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(54)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(54)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.Footnotes</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Renvoie une <see cref="T:Microsoft.Office.Interop.Word.Footnotes" /> collection qui représente toutes les notes de bas de page d’une plage.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FormattedText">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.Range FormattedText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Word.Range FormattedText" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.Range.FormattedText" />
      <MemberSignature Language="VB.NET" Value="Public Property FormattedText As Range" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Word::Range ^ FormattedText { Microsoft::Office::Interop::Word::Range ^ get(); void set(Microsoft::Office::Interop::Word::Range ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.Range</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Cette propriété renvoie ou <see cref="T:Microsoft.Office.Interop.Word.Range" /> définit un objet qui inclut le texte mis en forme dans la plage spécifiée ou la sélection.</summary>
        <value>To be added.</value>
        <remarks><para>Cette propriété renvoie un objet <b>Range</b> avec la mise en forme de caractères et le texte de la plage spécifiée. La mise en forme de paragraphes est incluse dans l’objet <b>Range</b> si la plage ou la sélection contient une marque de paragraphe.</para>
          <para>Lorsque vous définissez cette propriété, le texte de la plage est remplacé par le texte mis en forme. Si vous ne souhaitez pas remplacer le texte existant, utilisez la <see cref="M:Microsoft.Office.Interop.Word.Range.Collapse(System.Object@)" /> méthode avant d’utiliser cette propriété.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="FormFields">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.FormFields FormFields { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Word.FormFields FormFields" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.Range.FormFields" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FormFields As FormFields" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Word::FormFields ^ FormFields { Microsoft::Office::Interop::Word::FormFields ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(65)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(65)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.FormFields</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Renvoie une <see cref="T:Microsoft.Office.Interop.Word.FormFields" /> collection qui représente tous les champs de formulaire contenus dans la plage.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Frames">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.Frames Frames { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Word.Frames Frames" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.Range.Frames" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Frames As Frames" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Word::Frames ^ Frames { Microsoft::Office::Interop::Word::Frames ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(66)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(66)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.Frames</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Renvoie une <see cref="T:Microsoft.Office.Interop.Word.Frames" /> collection qui représente tous les cadres contenus dans une plage.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSpellingSuggestions">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.SpellingSuggestions GetSpellingSuggestions (ref object CustomDictionary, ref object IgnoreUppercase, ref object MainDictionary, ref object SuggestionMode, ref object CustomDictionary2, ref object CustomDictionary3, ref object CustomDictionary4, ref object CustomDictionary5, ref object CustomDictionary6, ref object CustomDictionary7, ref object CustomDictionary8, ref object CustomDictionary9, ref object CustomDictionary10);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Word.SpellingSuggestions GetSpellingSuggestions([in]object&amp; CustomDictionary, [in]object&amp; IgnoreUppercase, [in]object&amp; MainDictionary, [in]object&amp; SuggestionMode, [in]object&amp; CustomDictionary2, [in]object&amp; CustomDictionary3, [in]object&amp; CustomDictionary4, [in]object&amp; CustomDictionary5, [in]object&amp; CustomDictionary6, [in]object&amp; CustomDictionary7, [in]object&amp; CustomDictionary8, [in]object&amp; CustomDictionary9, [in]object&amp; CustomDictionary10) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.Range.GetSpellingSuggestions(System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetSpellingSuggestions (Optional ByRef CustomDictionary As Object, Optional ByRef IgnoreUppercase As Object, Optional ByRef MainDictionary As Object, Optional ByRef SuggestionMode As Object, Optional ByRef CustomDictionary2 As Object, Optional ByRef CustomDictionary3 As Object, Optional ByRef CustomDictionary4 As Object, Optional ByRef CustomDictionary5 As Object, Optional ByRef CustomDictionary6 As Object, Optional ByRef CustomDictionary7 As Object, Optional ByRef CustomDictionary8 As Object, Optional ByRef CustomDictionary9 As Object, Optional ByRef CustomDictionary10 As Object) As SpellingSuggestions" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(209)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.SpellingSuggestions</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="CustomDictionary" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="IgnoreUppercase" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="MainDictionary" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="SuggestionMode" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="CustomDictionary2" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="CustomDictionary3" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="CustomDictionary4" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="CustomDictionary5" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="CustomDictionary6" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="CustomDictionary7" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="CustomDictionary8" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="CustomDictionary9" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="CustomDictionary10" Type="System.Object&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="CustomDictionary"><b>Objet</b>facultatif. Expression qui renvoie un <see cref="T:Microsoft.Office.Interop.Word.Dictionary" /> objet ou le nom de fichier du dictionnaire personnel.</param>
        <param name="IgnoreUppercase"><b>Objet</b>facultatif. <b>True</b> pour ignorer les mots en majuscules. Si vous ne spécifiez pas cet argument, la valeur actuelle <see cref="P:Microsoft.Office.Interop.Word.Options.IgnoreUppercase" /> de la propriété est utilisée.</param>
        <param name="MainDictionary"><b>Objet</b>facultatif. Expression qui renvoie un objet <b>Dictionary</b> ou le nom de fichier du dictionnaire principal. Si vous ne spécifiez pas le dictionnaire principal, Microsoft Word utilise le dictionnaire principal qui correspond à la langue de la mise en forme du premier mot de la plage.</param>
        <param name="SuggestionMode"><b>Objet</b>facultatif. Spécifie la façon dont Word suggère les corrections. Il peut s’agir de <see cref="T:Microsoft.Office.Interop.Word.WdSpellingWordType" /> l’une des constantes. La valeur par défaut est <b>WdSpellword</b>.</param>
        <param name="CustomDictionary2"><b>Objet</b>facultatif. Expression qui renvoie un objet <b>Dictionary</b> ou le nom de fichier d'un dictionnaire personnel supplémentaire. Vous pouvez spécifier jusqu'à neuf dictionnaires supplémentaires.</param>
        <param name="CustomDictionary3"><b>Objet</b>facultatif. Expression qui renvoie un objet <b>Dictionary</b> ou le nom de fichier d'un dictionnaire personnel supplémentaire.</param>
        <param name="CustomDictionary4"><b>Objet</b>facultatif. Expression qui renvoie un objet <b>Dictionary</b> ou le nom de fichier d'un dictionnaire personnel supplémentaire.</param>
        <param name="CustomDictionary5"><b>Objet</b>facultatif. Expression qui renvoie un objet <b>Dictionary</b> ou le nom de fichier d'un dictionnaire personnel supplémentaire.</param>
        <param name="CustomDictionary6"><b>Objet</b>facultatif. Expression qui renvoie un objet <b>Dictionary</b> ou le nom de fichier d'un dictionnaire personnel supplémentaire.</param>
        <param name="CustomDictionary7"><b>Objet</b>facultatif. Expression qui renvoie un objet <b>Dictionary</b> ou le nom de fichier d'un dictionnaire personnel supplémentaire.</param>
        <param name="CustomDictionary8"><b>Objet</b>facultatif. Expression qui renvoie un objet <b>Dictionary</b> ou le nom de fichier d'un dictionnaire personnel supplémentaire.</param>
        <param name="CustomDictionary9"><b>Objet</b>facultatif. Expression qui renvoie un objet <b>Dictionary</b> ou le nom de fichier d'un dictionnaire personnel supplémentaire.</param>
        <param name="CustomDictionary10"><b>Objet</b>facultatif. Expression qui renvoie un objet <b>Dictionary</b> ou le nom de fichier d'un dictionnaire personnel supplémentaire.</param>
        <summary>Renvoie une <see cref="T:Microsoft.Office.Interop.Word.SpellingSuggestions" /> collection qui représente les mots suggérés en remplacement du premier mot de la plage spécifiée.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GoTo">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.Range GoTo (ref object What, ref object Which, ref object Count, ref object Name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Word.Range GoTo([in]object&amp; What, [in]object&amp; Which, [in]object&amp; Count, [in]object&amp; Name) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.Range.GoTo(System.Object@,System.Object@,System.Object@,System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Function GoTo (Optional ByRef What As Object, Optional ByRef Which As Object, Optional ByRef Count As Object, Optional ByRef Name As Object) As Range" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(173)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.Range</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="What" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="Which" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="Count" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="Name" Type="System.Object&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="What"><b>Objet</b>facultatif. Type d'élément vers lequel doit être déplacée la sélection. Il peut s’agir de <see cref="T:Microsoft.Office.Interop.Word.WdGoToItem" /> l’une des constantes.</param>
        <param name="Which"><b>Objet</b>facultatif. Élément vers lequel la plage ou la sélection est déplacée. Il peut s’agir de <see cref="T:Microsoft.Office.Interop.Word.WdGoToDirection" /> l’une des constantes.</param>
        <param name="Count"><b>Objet</b>facultatif. Le numéro de l'élément dans le document. La valeur par défaut est 1. seules les valeurs positives sont valides. Pour spécifier un élément qui précède la plage ou la sélection, utilisez <b>wdGoToPrevious</b> en <paramref name="Which" /> tant qu’argument et <paramref name="Count" /> spécifiez une valeur.</param>
        <param name="Name"><b>Objet</b>facultatif. Si l' <paramref name="What" /> argument est <b>constantes wdGoToBookmark</b>, <b>wdGoToComment</b>, <b>wdGoToField</b>ou <b>wdGoToObject</b>, cet argument spécifie un nom.</param>
        <summary>Renvoie un <see cref="T:Microsoft.Office.Interop.Word.Range" /> Object qui représente la position de début de l’élément spécifié, par exemple une page, un signet ou un champ.</summary>
        <returns>To be added.</returns>
        <remarks><para>Lorsque vous utilisez la méthode <b>GoTo</b> avec la <b>constante wdGoToGrammaticalError</b>, <b>wdGoToProofreadingError</b> ou <b>wdGoToSpellingError</b> constante, la <b>plage</b> qui est renvoyé inclut tout texte d'erreur de grammaire ou d'orthographe.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="GoToEditableRange">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.Range GoToEditableRange (ref object EditorID);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Word.Range GoToEditableRange([in]object&amp; EditorID) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.Range.GoToEditableRange(System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Function GoToEditableRange (Optional ByRef EditorID As Object) As Range" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(415)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.Range</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="EditorID" Type="System.Object&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="EditorID"><b>Objet</b>facultatif. Peut être une <b>chaîne</b> qui représente l’alias de messagerie de l’utilisateur (s’il se trouve dans le même domaine), une <see cref="T:Microsoft.Office.Interop.Word.WdEditorType" /> adresse de messagerie ou une constante qui représente un groupe d’utilisateurs. En cas d'omission, sélectionne toutes les plages pour lesquelles tous les utilisateurs disposent des autorisations à modifier.</param>
        <summary>Renvoie un <see cref="T:Microsoft.Office.Interop.Word.Range" /> objet qui représente une zone d’un document qui peut être modifiée par l’utilisateur ou le groupe d’utilisateurs spécifié.</summary>
        <returns>To be added.</returns>
        <remarks><para>Vous pouvez également utiliser la <see cref="P:Microsoft.Office.Interop.Word.Editor.NextRange" /> propriété de l' <see cref="T:Microsoft.Office.Interop.Word.Editor" /> objet pour renvoyer la plage suivante que l’utilisateur est autorisé à modifier.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="GoToNext">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.Range GoToNext (Microsoft.Office.Interop.Word.WdGoToItem What);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Word.Range GoToNext([in]valuetype Microsoft.Office.Interop.Word.WdGoToItem What) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.Range.GoToNext(Microsoft.Office.Interop.Word.WdGoToItem)" />
      <MemberSignature Language="VB.NET" Value="Public Function GoToNext (What As WdGoToItem) As Range" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Office::Interop::Word::Range ^ GoToNext(Microsoft::Office::Interop::Word::WdGoToItem What);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(174)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.Range</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="What" Type="Microsoft.Office.Interop.Word.WdGoToItem" />
      </Parameters>
      <Docs>
        <param name="What">Obligatoire <see cref="T:Microsoft.Office.Interop.Word.WdGoToItem" />.</param>
        <summary>Renvoie un <see cref="T:Microsoft.Office.Interop.Word.Range" /> Object qui fait référence à la position de début de l’élément suivant ou l’emplacement <paramref name="What" /> spécifié par l’argument.</summary>
        <returns>To be added.</returns>
        <remarks><para>[!REMARQUE] Lorsque vous utilisez cette méthode avec la <b>constante wdGoToGrammaticalError</b>, <b>wdGoToProofreadingError</b> ou <b>wdGoToSpellingError</b> constante, l'objet <b>Range</b> renvoyé inclut tout texte d'erreur de grammaire ou d'orthographe.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="GoToPrevious">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.Range GoToPrevious (Microsoft.Office.Interop.Word.WdGoToItem What);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Word.Range GoToPrevious([in]valuetype Microsoft.Office.Interop.Word.WdGoToItem What) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.Range.GoToPrevious(Microsoft.Office.Interop.Word.WdGoToItem)" />
      <MemberSignature Language="VB.NET" Value="Public Function GoToPrevious (What As WdGoToItem) As Range" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Office::Interop::Word::Range ^ GoToPrevious(Microsoft::Office::Interop::Word::WdGoToItem What);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(175)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.Range</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="What" Type="Microsoft.Office.Interop.Word.WdGoToItem" />
      </Parameters>
      <Docs>
        <param name="What">Obligatoire <see cref="T:Microsoft.Office.Interop.Word.WdGoToItem" />. Élément vers lequel la plage ou la sélection spécifiée doit être déplacée.</param>
        <summary>Renvoie un <see cref="T:Microsoft.Office.Interop.Word.Range" /> Object qui fait référence à la position de début de l’élément précédent ou l’emplacement <paramref name="What" /> spécifié par l’argument.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GrammarChecked">
      <MemberSignature Language="C#" Value="public bool GrammarChecked { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool GrammarChecked" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.Range.GrammarChecked" />
      <MemberSignature Language="VB.NET" Value="Public Property GrammarChecked As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool GrammarChecked { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(260)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(260)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(260)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Détermine si une vérification de la grammaire a été exécutée sur la plage spécifiée.</summary>
        <value>To be added.</value>
        <remarks><para>Cette propriété renvoie la <b>valeur true</b> si une vérification de la grammaire a été exécutée sur la plage ou le document spécifié et la <b>valeur false</b> si une partie de la plage ou du document spécifié n’a pas été vérifiée.</para>
          <para>Si vous souhaitez vérifier de nouveau la grammaire dans un document, affectez à la propriété <b>GrammarChecked</b> la valeur <b>False</b>.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="GrammaticalErrors">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.ProofreadingErrors GrammaticalErrors { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Word.ProofreadingErrors GrammaticalErrors" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.Range.GrammaticalErrors" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property GrammaticalErrors As ProofreadingErrors" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Word::ProofreadingErrors ^ GrammaticalErrors { Microsoft::Office::Interop::Word::ProofreadingErrors ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(315)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(315)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.ProofreadingErrors</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Renvoie une <see cref="T:Microsoft.Office.Interop.Word.ProofreadingErrors" /> collection qui représente les phrases qui ont échoué à la vérification grammaticale dans la plage spécifiée.</summary>
        <value>To be added.</value>
        <remarks><para>Il peut y avoir plusieurs erreurs par phrase.</para>
          <para>S’il n’y a pas d’erreurs <see cref="P:Microsoft.Office.Interop.Word.ProofreadingErrors.Count" /> grammaticales, la propriété de l’objet <b>ProofreadingErrors</b> renvoyé par la propriété <b>GrammaticalErrors</b> renvoie la valeur 0 (zéro).</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="HighlightColorIndex">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.WdColorIndex HighlightColorIndex { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Word.WdColorIndex HighlightColorIndex" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.Range.HighlightColorIndex" />
      <MemberSignature Language="VB.NET" Value="Public Property HighlightColorIndex As WdColorIndex" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Word::WdColorIndex HighlightColorIndex { Microsoft::Office::Interop::Word::WdColorIndex get(); void set(Microsoft::Office::Interop::Word::WdColorIndex value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(301)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(301)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(301)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.WdColorIndex</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Renvoie ou définit la couleur utilisée pour mettre la plage spécifiée en surbrillance.</summary>
        <value>To be added.</value>
        <remarks><para>Si vous affectez à cette propriété la valeur <b>wdNoHighlight</b> , la couleur de surbrillance (le cas échéant) de la plage spécifiée est supprimée.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="HorizontalInVertical">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.WdHorizontalInVerticalType HorizontalInVertical { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Word.WdHorizontalInVerticalType HorizontalInVertical" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.Range.HorizontalInVertical" />
      <MemberSignature Language="VB.NET" Value="Public Property HorizontalInVertical As WdHorizontalInVerticalType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Word::WdHorizontalInVerticalType HorizontalInVertical { Microsoft::Office::Interop::Word::WdHorizontalInVerticalType get(); void set(Microsoft::Office::Interop::Word::WdHorizontalInVerticalType value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(265)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(265)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(265)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.WdHorizontalInVerticalType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Cette propriété renvoie ou définit la mise en forme de texte horizontal défini dans du texte vertical.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HTMLDivisions">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.HTMLDivisions HTMLDivisions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Word.HTMLDivisions HTMLDivisions" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.Range.HTMLDivisions" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HTMLDivisions As HTMLDivisions" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Word::HTMLDivisions ^ HTMLDivisions { Microsoft::Office::Interop::Word::HTMLDivisions ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(406)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(406)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.HTMLDivisions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Renvoie un <see cref="T:Microsoft.Office.Interop.Word.HTMLDivisions" /> Object qui représente une division HTML dans un document Web.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Hyperlinks">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.Hyperlinks Hyperlinks { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Word.Hyperlinks Hyperlinks" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.Range.Hyperlinks" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Hyperlinks As Hyperlinks" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Word::Hyperlinks ^ Hyperlinks { Microsoft::Office::Interop::Word::Hyperlinks ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(156)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(156)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.Hyperlinks</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Renvoie une <see cref="T:Microsoft.Office.Interop.Word.Hyperlinks" /> collection qui représente tous les liens hypertexte de la plage spécifiée.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ID">
      <MemberSignature Language="C#" Value="public string ID { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ID" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.Range.ID" />
      <MemberSignature Language="VB.NET" Value="Public Property ID As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ID { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(405)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(405)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(405)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Cette propriété renvoie ou définit l'étiquette d'identification de l'objet spécifié lorsque le document actif est enregistré en tant que page Web.</summary>
        <value>To be added.</value>
        <remarks><para>À l’exception de l' <see cref="T:Microsoft.Office.Interop.Word.Editor" /> objet, vous pouvez utiliser une étiquette comme référence de lien hypertexte à partir d’autres pages Web ou à partir du document actif.</para>
          <para>Microsoft Word ne stocke pas <b></b> le paramètre de propriété ID <see cref="T:Microsoft.Office.Interop.Word.Range" /> pour un objet. Si vous définissez la propriété <b>ID</b> et que vous renvoyez ensuite sa valeur, la valeur renvoyée sera une <b>chaîne</b>vide.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="ImportFragment">
      <MemberSignature Language="C#" Value="public void ImportFragment (string FileName, bool MatchDestination = false);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ImportFragment([in]string FileName, [in]bool MatchDestination) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.Range.ImportFragment(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ImportFragment (FileName As String, Optional MatchDestination As Boolean = false)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(502)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileName" Type="System.String" />
        <Parameter Name="MatchDestination" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="FileName"><b>Chaîne</b> obligatoire spécifie le chemin d’accès et le nom du fichier dans lequel le fragment de document est stocké.</param>
        <param name="MatchDestination"><b>Boolean</b> facultatif indique s’il faut respecter la mise en forme de destination. Si l'argument est <b>False</b>, le fragment de document importé conserve la mise en forme dans le document d'origine. Valeur par défaut est <b>False</b>.</param>
        <summary>Importe un fragment de document dans le document sur la plage spécifiée.</summary>
        <remarks><para>Cette méthode remplace le contenu d’une plage. Pour arrêter ce problème, utilisez la <see cref="M:Microsoft.Office.Interop.Word.Range.Collapse(System.Object@)" /> méthode avant d’utiliser cette méthode.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Information">
      <MemberSignature Language="C#" Value="public object Information[Microsoft.Office.Interop.Word.WdInformation Type] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Information(valuetype Microsoft.Office.Interop.Word.WdInformation)" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.Range.Information(Microsoft.Office.Interop.Word.WdInformation)" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Information(Type As WdInformation) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Information[Microsoft::Office::Interop::Word::WdInformation] { System::Object ^ get(Microsoft::Office::Interop::Word::WdInformation Type); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(313)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(313)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Type" Type="Microsoft.Office.Interop.Word.WdInformation" />
      </Parameters>
      <Docs>
        <param name="Type">Obligatoire <see cref="T:Microsoft.Office.Interop.Word.WdInformation" />. Type d'information.</param>
        <summary>Renvoie des informations sur la sélection ou la plage spécifiée.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InlineShapes">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.InlineShapes InlineShapes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Word.InlineShapes InlineShapes" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.Range.InlineShapes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property InlineShapes As InlineShapes" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Word::InlineShapes ^ InlineShapes { Microsoft::Office::Interop::Word::InlineShapes ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(319)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(319)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.InlineShapes</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Renvoie une <see cref="T:Microsoft.Office.Interop.Word.InlineShapes" /> collection qui représente tous les <see cref="T:Microsoft.Office.Interop.Word.InlineShape" /> objets d’un document, d’une plage ou d’une sélection.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InRange">
      <MemberSignature Language="C#" Value="public bool InRange (Microsoft.Office.Interop.Word.Range Range);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool InRange([in]class Microsoft.Office.Interop.Word.Range Range) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.Range.InRange(Microsoft.Office.Interop.Word.Range)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool InRange(Microsoft::Office::Interop::Word::Range ^ Range);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(126)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Range" Type="Microsoft.Office.Interop.Word.Range" />
      </Parameters>
      <Docs>
        <param name="Range">Objet <b>Range</b> obligatoire. Plage à laquelle vous souhaitez comparer <paramref name="expression" />.</param>
        <summary>Détermine si la plage à laquelle la méthode est appliquée se trouve dans la plage spécifiée.</summary>
        <returns>To be added.</returns>
        <remarks><para>Cette méthode renvoie la <b>valeur true</b> si la plage à laquelle la méthode est appliquée se trouve dans la plage spécifiée <paramref name="Range" /> par l’argument et la <b>valeur false</b> dans le cas contraire.</para>
          <para>Cette méthode détermine si la plage ou la sélection renvoyée par expression est contenue <paramref name="Range" /> dans l’objet spécifié en comparant l’emplacement du caractère de début et celui du caractère de fin, ainsi que le type de l’article.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="InsertAfter">
      <MemberSignature Language="C#" Value="public void InsertAfter (string Text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void InsertAfter([in]string Text) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.Range.InsertAfter(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub InsertAfter (Text As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void InsertAfter(System::String ^ Text);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(104)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="Text">Argument de type <b>String</b> obligatoire. Texte à insérer.</param>
        <summary>Insère le texte spécifié à la fin d'une plage ou d'une sélection.</summary>
        <remarks><para>Une fois cette méthode appliquée, la plage s'étend afin de contenir le nouveau texte.</para>
          <para>Si vous appliquez cette méthode à une plage qui fait référence à un paragraphe entier, le texte est inséré après la marque de fin de paragraphe (le texte s'affichera au début du paragraphe suivant). Pour insérer du texte à la fin d’un paragraphe, déterminez le point de fin et soustraire 1 de cet emplacement (la marque de paragraphe est un caractère).</para>
          <para>Cependant, si la plage se termine par une marque de paragraphe qui se trouve également être la fin du document, Microsoft Word insère le texte avant la marque de paragraphe finale au lieu de créer un nouveau paragraphe à la fin du document.</para>
          <para>De même, si la plage est un signet, Word insère le texte indiqué mais n'étend pas la plage ou le signet afin d'inclure le nouveau texte.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="InsertAlignmentTab">
      <MemberSignature Language="C#" Value="public void InsertAlignmentTab (int Alignment, int RelativeTo = 0);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void InsertAlignmentTab([in]int32 Alignment, [in]int32 RelativeTo) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.Range.InsertAlignmentTab(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub InsertAlignmentTab (Alignment As Integer, Optional RelativeTo As Integer = 0)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(500)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Alignment" Type="System.Int32" />
        <Parameter Name="RelativeTo" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="Alignment"><b>Integer</b> obligatoire indique le type d’alignement (gauche, centré ou droite) pour le taquet de tabulation. Il peut s’agir de <see cref="T:Microsoft.Office.Interop.Word.WdAlignmentTabAlignment" /> l’une des constantes.</param>
        <param name="RelativeTo"><b>Integer</b> obligatoire indique si le taquet de tabulation est relatif aux marges ou aux retraits de paragraphe. Il peut s’agir de <see cref="T:Microsoft.Office.Interop.Word.WdAlignmentTabRelative" /> l’une des constantes.</param>
        <summary>Insère une tabulation absolue toujours positionnée au même endroit par rapport aux marges ou aux retraits.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InsertAutoText">
      <MemberSignature Language="C#" Value="public void InsertAutoText ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void InsertAutoText() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.Range.InsertAutoText" />
      <MemberSignature Language="VB.NET" Value="Public Sub InsertAutoText ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void InsertAutoText();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(183)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Essaie de faire correspondre le texte de la plage spécifiée ou celui autour de cette plage avec le nom d'une insertion automatique existante.</summary>
        <remarks><para>Si une correspondance est trouvée, <b>InsertAutoText,</b> insère l’insertion automatique pour remplacer ce texte. Si aucune correspondance n’est trouvée, une erreur se produit.</para>
          <para>Vous pouvez utiliser la <see cref="M:Microsoft.Office.Interop.Word.AutoTextEntry.Insert(Microsoft.Office.Interop.Word.Range,System.Object@)" /> méthode avec un <see cref="T:Microsoft.Office.Interop.Word.AutoTextEntry" /> objet pour insérer une insertion automatique spécifique.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="InsertBefore">
      <MemberSignature Language="C#" Value="public void InsertBefore (string Text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void InsertBefore([in]string Text) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.Range.InsertBefore(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub InsertBefore (Text As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void InsertBefore(System::String ^ Text);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(102)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="Text">Argument de type <b>String</b> obligatoire. Texte à insérer.</param>
        <summary>Insère le texte spécifié avant la sélection définie.</summary>
        <remarks><para>Une fois le texte inséré, la plage est étendue pour inclure le nouveau texte. Si la plage est un signet, le signet est également étendu pour inclure le nouveau texte.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="InsertBreak">
      <MemberSignature Language="C#" Value="public void InsertBreak (ref object Type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void InsertBreak([in]object&amp; Type) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.Range.InsertBreak(System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub InsertBreak (Optional ByRef Type As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(122)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Type" Type="System.Object&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="Type"><b>Objet</b>facultatif. Type de saut à insérer. Il peut s’agir de <see cref="T:Microsoft.Office.Interop.Word.WdBreakType" /> l’une des constantes.</param>
        <summary>Insère un saut de page, de colonne ou de section.</summary>
        <remarks><para>Lorsque vous insérez un saut de page ou de colonne, la plage est remplacée par le saut. Si vous ne souhaitez pas remplacer la plage, utilisez la <see cref="M:Microsoft.Office.Interop.Word.Range.Collapse(System.Object@)" /> méthode avant d’utiliser la méthode <b>InsertBreak</b> . Lorsque vous insérez un saut de section, le saut est inséré immédiatement avant <see cref="T:Microsoft.Office.Interop.Word.Range" /> l’objet.</para>
          <para>Certaines des constantes <b>WdBreakType</b> peuvent ne pas être disponibles, en fonction de la prise en charge de langue (anglais (États-Unis), par exemple) que vous avez sélectionnée ou installée.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="InsertCaption">
      <MemberSignature Language="C#" Value="public void InsertCaption (ref object Label, ref object Title, ref object TitleAutoText, ref object Position, ref object ExcludeLabel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void InsertCaption([in]object&amp; Label, [in]object&amp; Title, [in]object&amp; TitleAutoText, [in]object&amp; Position, [in]object&amp; ExcludeLabel) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.Range.InsertCaption(System.Object@,System.Object@,System.Object@,System.Object@,System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub InsertCaption (ByRef Label As Object, Optional ByRef Title As Object, Optional ByRef TitleAutoText As Object, Optional ByRef Position As Object, Optional ByRef ExcludeLabel As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(417)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Label" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="Title" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="TitleAutoText" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="Position" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="ExcludeLabel" Type="System.Object&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="Label"><b>Objet</b>required. L'étiquette de légende à insérer. Il peut s’agir de <see cref="T:Microsoft.Office.Interop.Word.WdCaptionLabelID" /> l’une des constantes.</param>
        <param name="Title"><b>Objet</b>facultatif. Chaîne à insérer immédiatement après l’étiquette dans la légende (ignoré si <paramref name="TitleAutoText" /> est spécifié).</param>
        <param name="TitleAutoText"><b>Objet</b>facultatif. L’insertion automatique dont vous souhaitez insérer le contenu immédiatement après l’étiquette dans la légende (remplace le texte spécifié par <paramref name="Title" />).</param>
        <param name="Position"><b>Objet</b>facultatif. Indique si la légende est insérée au-dessus ou <see cref="T:Microsoft.Office.Interop.Word.Range" /> en dessous de l’objet. Il peut s’agir de <see cref="T:Microsoft.Office.Interop.Word.WdCaptionPosition" /> l’une des constantes.</param>
        <param name="ExcludeLabel"><b>Objet</b>facultatif. <b>True</b> n’inclut pas l’étiquette de texte, comme défini dans <paramref name="Label" /> le paramètre. <b>False</b> inclut l'étiquette spécifiée.</param>
        <summary>Insère une légende immédiatement avant ou après la plage spécifiée.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InsertCaptionXP">
      <MemberSignature Language="C#" Value="public void InsertCaptionXP (ref object Label, ref object Title, ref object TitleAutoText, ref object Position);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void InsertCaptionXP([in]object&amp; Label, [in]object&amp; Title, [in]object&amp; TitleAutoText, [in]object&amp; Position) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.Range.InsertCaptionXP(System.Object@,System.Object@,System.Object@,System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub InsertCaptionXP (ByRef Label As Object, Optional ByRef Title As Object, Optional ByRef TitleAutoText As Object, Optional ByRef Position As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(166)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Label" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="Title" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="TitleAutoText" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="Position" Type="System.Object&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="Label">To be added.</param>
        <param name="Title">To be added.</param>
        <param name="TitleAutoText">To be added.</param>
        <param name="Position">To be added.</param>
        <summary>Réservé à une utilisation interne.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InsertCrossReference">
      <MemberSignature Language="C#" Value="public void InsertCrossReference (ref object ReferenceType, Microsoft.Office.Interop.Word.WdReferenceKind ReferenceKind, ref object ReferenceItem, ref object InsertAsHyperlink, ref object IncludePosition, ref object SeparateNumbers, ref object SeparatorString);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void InsertCrossReference([in]object&amp; ReferenceType, [in]valuetype Microsoft.Office.Interop.Word.WdReferenceKind ReferenceKind, [in]object&amp; ReferenceItem, [in]object&amp; InsertAsHyperlink, [in]object&amp; IncludePosition, [in]object&amp; SeparateNumbers, [in]object&amp; SeparatorString) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.Range.InsertCrossReference(System.Object@,Microsoft.Office.Interop.Word.WdReferenceKind,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub InsertCrossReference (ByRef ReferenceType As Object, ReferenceKind As WdReferenceKind, ByRef ReferenceItem As Object, Optional ByRef InsertAsHyperlink As Object, Optional ByRef IncludePosition As Object, Optional ByRef SeparateNumbers As Object, Optional ByRef SeparatorString As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(418)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ReferenceType" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="ReferenceKind" Type="Microsoft.Office.Interop.Word.WdReferenceKind" />
        <Parameter Name="ReferenceItem" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="InsertAsHyperlink" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="IncludePosition" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="SeparateNumbers" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="SeparatorString" Type="System.Object&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="ReferenceType"><b>Objet</b>required. Le type d'élément pour lequel un renvoi doit être inséré. Peut être Any <see cref="T:Microsoft.Office.Interop.Word.WdReferenceType" /> ou <see cref="T:Microsoft.Office.Interop.Word.WdCaptionLabelID" /> constant ou une étiquette de légende définie par l’utilisateur.</param>
        <param name="ReferenceKind">Obligatoire <see cref="T:Microsoft.Office.Interop.Word.WdReferenceKind" />. Informations à inclure dans le renvoi.</param>
        <param name="ReferenceItem"><b>Objet</b>required. Si <paramref name="ReferenceType" /> est <b>valeur wdRefTypeBookmark</b>, cet argument spécifie un nom de signet. Pour toutes les <paramref name="ReferenceType" /> autres valeurs, cet argument spécifie le numéro ou le nom de l’élément dans la zone <b>type de référence</b> de la boîte de dialogue <b>renvoi</b> . Utilisez la <see cref="M:Microsoft.Office.Interop.Word._Document.GetCrossReferenceItems(System.Object@)" /> méthode pour renvoyer la liste des noms d’éléments qui peuvent être utilisés avec cet argument.</param>
        <param name="InsertAsHyperlink"><b>Objet</b>facultatif. <b>True</b> pour insérer le renvoi sous la forme d'un lien hypertexte vers l'élément référencé.</param>
        <param name="IncludePosition"><b>Objet</b>facultatif. <b>La valeur true</b> à l'insertion ait lieu « au-dessus » ou « au-dessous », selon l'emplacement de l'élément de référence par rapport au renvoi.</param>
        <param name="SeparateNumbers"><b>Objet</b>facultatif. <b>True</b> pour utiliser un séparateur et pour séparer les nombres du texte associé. (À utiliser uniquement si <paramref name="ReferenceType" /> le paramètre est défini sur <b>wdRefTypeNumberedItem</b> et <paramref name="ReferenceKind" /> que le paramètre est défini sur <b>wdNumberFullContext</b>.)</param>
        <param name="SeparatorString"><b>Objet</b>facultatif. Spécifie la chaîne à utiliser comme séparateur si le paramètre <b>nombresséparés prend</b> est défini sur <b>true</b>.</param>
        <summary>Insère un renvoi correspondant à un titre, un signet, une note de bas de page, une note de fin, ou à un élément disposant d'une étiquette de légende (comme une équation, une figure ou un tableau).</summary>
        <remarks><para>Si vous spécifiez <b>wdPageNumber comme</b> pour la valeur <paramref name="ReferenceKind" />de, vous devrez peut-être repaginer le document afin d’afficher les informations de référence croisée correctes.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="InsertCrossReference_2002">
      <MemberSignature Language="C#" Value="public void InsertCrossReference_2002 (ref object ReferenceType, Microsoft.Office.Interop.Word.WdReferenceKind ReferenceKind, ref object ReferenceItem, ref object InsertAsHyperlink, ref object IncludePosition);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void InsertCrossReference_2002([in]object&amp; ReferenceType, [in]valuetype Microsoft.Office.Interop.Word.WdReferenceKind ReferenceKind, [in]object&amp; ReferenceItem, [in]object&amp; InsertAsHyperlink, [in]object&amp; IncludePosition) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.Range.InsertCrossReference_2002(System.Object@,Microsoft.Office.Interop.Word.WdReferenceKind,System.Object@,System.Object@,System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub InsertCrossReference_2002 (ByRef ReferenceType As Object, ReferenceKind As WdReferenceKind, ByRef ReferenceItem As Object, Optional ByRef InsertAsHyperlink As Object, Optional ByRef IncludePosition As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(165)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ReferenceType" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="ReferenceKind" Type="Microsoft.Office.Interop.Word.WdReferenceKind" />
        <Parameter Name="ReferenceItem" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="InsertAsHyperlink" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="IncludePosition" Type="System.Object&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="ReferenceType">To be added.</param>
        <param name="ReferenceKind">To be added.</param>
        <param name="ReferenceItem">To be added.</param>
        <param name="InsertAsHyperlink">To be added.</param>
        <param name="IncludePosition">To be added.</param>
        <summary>Réservé à une utilisation interne.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InsertDatabase">
      <MemberSignature Language="C#" Value="public void InsertDatabase (ref object Format, ref object Style, ref object LinkToSource, ref object Connection, ref object SQLStatement, ref object SQLStatement1, ref object PasswordDocument, ref object PasswordTemplate, ref object WritePasswordDocument, ref object WritePasswordTemplate, ref object DataSource, ref object From, ref object To, ref object IncludeFields);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void InsertDatabase([in]object&amp; Format, [in]object&amp; Style, [in]object&amp; LinkToSource, [in]object&amp; Connection, [in]object&amp; SQLStatement, [in]object&amp; SQLStatement1, [in]object&amp; PasswordDocument, [in]object&amp; PasswordTemplate, [in]object&amp; WritePasswordDocument, [in]object&amp; WritePasswordTemplate, [in]object&amp; DataSource, [in]object&amp; From, [in]object&amp; To, [in]object&amp; IncludeFields) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.Range.InsertDatabase(System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub InsertDatabase (Optional ByRef Format As Object, Optional ByRef Style As Object, Optional ByRef LinkToSource As Object, Optional ByRef Connection As Object, Optional ByRef SQLStatement As Object, Optional ByRef SQLStatement1 As Object, Optional ByRef PasswordDocument As Object, Optional ByRef PasswordTemplate As Object, Optional ByRef WritePasswordDocument As Object, Optional ByRef WritePasswordTemplate As Object, Optional ByRef DataSource As Object, Optional ByRef From As Object, Optional ByRef To As Object, Optional ByRef IncludeFields As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(194)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Format" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="Style" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="LinkToSource" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="Connection" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="SQLStatement" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="SQLStatement1" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="PasswordDocument" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="PasswordTemplate" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="WritePasswordDocument" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="WritePasswordTemplate" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="DataSource" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="From" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="To" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="IncludeFields" Type="System.Object&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="Format"><b>Objet</b>facultatif. Mise en forme répertoriée dans la zone Format de la boîte de dialogue Mise en forme automatique de tableau (menu Tableau). Peut être une des <see cref="T:Microsoft.Office.Interop.Word.WdTableFormat" /> constantes. Une bordure est appliquée aux cellules de la table par défaut.</param>
        <param name="Style"><b>Objet</b>facultatif. Attributs de la mise en forme automatique spécifiée <paramref name="Format" /> par qui sont appliqués au tableau. Utilisez la somme de n’importe quelle combinaison des valeurs suivantes: ValueMeaning0 (Zero) None1Borders2Shading4Font8Color16Auto Fit32Heading Rows64Last Row128First Column256Last Column</param>
        <param name="LinkToSource"><b>Objet</b>facultatif. <b>True</b> pour établir un lien entre le nouveau tableau et la source de données.</param>
        <param name="Connection"><b>Objet</b>facultatif. Plage dans laquelle exécuter la requête spécifiée par <paramref name="SQLStatement" />. La manière dont vous pouvez spécifier la plage dépend du mode d'extraction des données. Par exemple: lorsque vous récupérez des données via ODBC (Open Database Connectivity), vous spécifiez une chaîne de connexion. Lors de l’extraction de données à partir de Microsoft Excel à l’aide de l’échange dynamique de données (DDE), vous spécifiez une plage nommée ou une «feuille de calcul entière». <b>Sécurité</b>  L’échange dynamique de données (DDE) est une technologie plus ancienne qui n’est pas sécurisée. Dans la mesure du possible, utilisez une alternative plus sécurisée à DDE. Lorsque vous récupérez des données à partir de Microsoft Access, vous spécifiez le mot «table» ou «requête» suivi du nom d’une table ou d’une requête.</param>
        <param name="SQLStatement">Argument de type <b>String</b> facultatif. Chaîne de requête facultative qui extrait un sous-ensemble des données d'une source principale en vue de les insérer dans le document.</param>
        <param name="SQLStatement1">Argument de type <b>String</b> facultatif. Si la chaîne de requête est plus long que 255 <paramref name="SQLStatement" /> caractères, désigne la première partie de la chaîne et <paramref name="SQLStatement1" /> indique la deuxième partie.</param>
        <param name="PasswordDocument"><b>Objet</b>facultatif. Mot de passe éventuel requis pour ouvrir la source de données. (Voir les remarques ci-dessous.)</param>
        <param name="PasswordTemplate"><b>Objet</b>facultatif. Si la source de données est un document Word, cet argument est le mot de passe éventuel requis pour ouvrir le modèle associé. (Voir les remarques ci-dessous.)</param>
        <param name="WritePasswordDocument"><b>Objet</b>facultatif. Mot de passe requis pour enregistrer les modifications apportées au document. (Voir les remarques ci-dessous.)</param>
        <param name="WritePasswordTemplate"><b>Objet</b>facultatif. Mot de passe requis pour enregistrer les modifications apportées au modèle. (Voir les remarques ci-dessous.)</param>
        <param name="DataSource"><b>Objet</b>facultatif. Chemin d'accès et nom de la source de données.</param>
        <param name="From"><b>Objet</b>facultatif. Numéro du premier enregistrement de données de la plage à insérer.</param>
        <param name="To"><b>Objet</b>facultatif. Numéro du dernier enregistrement de données de la plage à insérer.</param>
        <param name="IncludeFields"><b>Objet</b>facultatif. <b>True</b> pour inclure les noms de champ de la source de données dans la première ligne du nouveau tableau.</param>
        <summary>Extrait des données à partir d'une source de données (par exemple, un autre document Microsoft Word, une feuille de calcul Microsoft Excel ou une base de données Microsoft Access) et insère les données sous forme de tableau à la place de la plage spécifiée.</summary>
        <remarks><para>Évitez d'utiliser des mots de passe codés en dur dans vos applications. Si un mot de passe est requis dans une procédure, demandez-le à l'utilisateur, stockez-le dans une variable et servez-vous de la variable dans votre code.</para>
          <para>Évitez d’utiliser le compte d’ouverture de session de l’administrateur système (<b>sa</b>) intégré. À la place, demandez aux administrateurs système de devenir membres du rôle serveur fixe sysadmin et d’utiliser leur propre compte pour se connecter. Utilisez le <b>sa</b> uniquement lorsqu’il n’est pas possible de se connecter autrement. Pour éviter l’accès non autorisé via le compte d’ouverture de session du sa, affectez à ce compte un mot de passe unique et fort.</para>
          <para>Dans la mesure du possible, utilisez l’authentification Windows (également appelée connexion approuvée), qui utilise un compte d’utilisateur Windows pour vous connecter à SQL Server. Lorsqu’un utilisateur se connecte via un compte d’utilisateur Windows, SQL Server se sert d’informations qui se trouvent dans le système d’exploitation Windows pour valider le nom du compte et le mot de passe. Pour pouvoir utiliser l’authentification Windows, un administrateur serveur doit configurer SQL Server pour utiliser ce mode d’authentification. Si l’authentification Windows n’est pas disponible, évitez d’enregistrer les informations de connexion. Il est plus sûr pour les utilisateurs d’entrer ces informations lors de chaque connexion.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="InsertDateTime">
      <MemberSignature Language="C#" Value="public void InsertDateTime (ref object DateTimeFormat, ref object InsertAsField, ref object InsertAsFullWidth, ref object DateLanguage, ref object CalendarType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void InsertDateTime([in]object&amp; DateTimeFormat, [in]object&amp; InsertAsField, [in]object&amp; InsertAsFullWidth, [in]object&amp; DateLanguage, [in]object&amp; CalendarType) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.Range.InsertDateTime(System.Object@,System.Object@,System.Object@,System.Object@,System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub InsertDateTime (Optional ByRef DateTimeFormat As Object, Optional ByRef InsertAsField As Object, Optional ByRef InsertAsFullWidth As Object, Optional ByRef DateLanguage As Object, Optional ByRef CalendarType As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(444)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="DateTimeFormat" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="InsertAsField" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="InsertAsFullWidth" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="DateLanguage" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="CalendarType" Type="System.Object&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="DateTimeFormat"><b>Objet</b>facultatif. Format à utiliser pour afficher la date et/ou l'heure. Si vous ne spécifiez pas cet argument, Microsoft Word utilise le style date au format abrégé à partir du Panneau de configuration de Windows (icône Paramètres régionaux).</param>
        <param name="InsertAsField"><b>Objet</b>facultatif. <b>True</b> pour insérer les informations spécifiées en tant que champ TIME. La valeur par défaut est <b>True</b>.</param>
        <param name="InsertAsFullWidth"><b>Objet</b>facultatif. <b>True</b> pour insérer les informations spécifiées en tant que codés sur deux chiffres. Il se peut que cet argument ne soit pas disponible, selon la prise en charge de langue (anglais (États-Unis) par exemple) que vous avez sélectionnée ou installée.</param>
        <param name="DateLanguage"><b>Objet</b>facultatif. Définit la langue dans laquelle afficher la date ou l'heure. Il peut s’agir de <see cref="T:Microsoft.Office.Interop.Word.WdDateLanguage" /> l’une des constantes suivantes: <b>wdDateLanguageBidi</b> ou <b>wdDateLanguageLatin</b>. Il se peut que cet argument ne soit pas disponible, selon la prise en charge de langue (anglais (États-Unis) par exemple) que vous avez sélectionnée ou installée.</param>
        <param name="CalendarType"><b>Objet</b>facultatif. Définit le type de calendrier à utiliser lors de l'affichage de la date ou l'heure. Il peut s’agir de <see cref="T:Microsoft.Office.Interop.Word.WdCalendarTypeBi" /> l’une des constantes suivantes: <b>wdCalendarTypeBidi</b> ou <b>wdCalendarTypeGregorian</b>. Il se peut que cet argument ne soit pas disponible, selon la prise en charge de langue (anglais (États-Unis) par exemple) que vous avez sélectionnée ou installée.</param>
        <summary>Insère la date et/ou l'heure courante sous forme de texte ou de champ TIME.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InsertDateTimeOld">
      <MemberSignature Language="C#" Value="public void InsertDateTimeOld (ref object DateTimeFormat, ref object InsertAsField, ref object InsertAsFullWidth);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void InsertDateTimeOld([in]object&amp; DateTimeFormat, [in]object&amp; InsertAsField, [in]object&amp; InsertAsFullWidth) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.Range.InsertDateTimeOld(System.Object@,System.Object@,System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub InsertDateTimeOld (Optional ByRef DateTimeFormat As Object, Optional ByRef InsertAsField As Object, Optional ByRef InsertAsFullWidth As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(163)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="DateTimeFormat" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="InsertAsField" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="InsertAsFullWidth" Type="System.Object&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="DateTimeFormat">To be added.</param>
        <param name="InsertAsField">To be added.</param>
        <param name="InsertAsFullWidth">To be added.</param>
        <summary>Réservé à une utilisation interne.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InsertFile">
      <MemberSignature Language="C#" Value="public void InsertFile (string FileName, ref object Range, ref object ConfirmConversions, ref object Link, ref object Attachment);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void InsertFile([in]string FileName, [in]object&amp; Range, [in]object&amp; ConfirmConversions, [in]object&amp; Link, [in]object&amp; Attachment) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.Range.InsertFile(System.String,System.Object@,System.Object@,System.Object@,System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub InsertFile (FileName As String, Optional ByRef Range As Object, Optional ByRef ConfirmConversions As Object, Optional ByRef Link As Object, Optional ByRef Attachment As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(123)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileName" Type="System.String" />
        <Parameter Name="Range" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="ConfirmConversions" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="Link" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="Attachment" Type="System.Object&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="FileName">Argument de type <b>String</b> obligatoire. Chemin d'accès et nom du fichier à insérer. Si vous ne spécifiez pas de chemin d’accès, Microsoft Word part du principe que le fichier se trouve dans le dossier actif.</param>
        <param name="Range"><b>Objet</b>facultatif. Si le fichier spécifié est un document Word, ce paramètre fait référence à un signet. S'il s'agit d'un autre type de fichier (par exemple, une feuille de calcul Microsoft Excel), ce paramètre désigne une plage nommée ou une plage de cellules (par exemple, R1C1:R3C4).</param>
        <param name="ConfirmConversions"><b>Objet</b>facultatif. <b>True</b> pour que Word invite l'utilisateur à confirmer la conversion lors de l'insertion de fichiers dans des formats autres que le format Document Word.</param>
        <param name="Link"><b>Objet</b>facultatif. <b>True</b> pour insérer le fichier en utilisant un champ INCLUDETEXT.</param>
        <param name="Attachment"><b>Objet</b>facultatif. <b>True</b> pour insérer le fichier comme pièce jointe à un message électronique.</param>
        <summary>Insère tout ou partie du fichier spécifié.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InsertParagraph">
      <MemberSignature Language="C#" Value="public void InsertParagraph ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void InsertParagraph() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.Range.InsertParagraph" />
      <MemberSignature Language="VB.NET" Value="Public Sub InsertParagraph ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void InsertParagraph();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(160)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Remplace la plage spécifiée par un nouveau paragraphe.</summary>
        <remarks><para>Une fois cette méthode appliquée, la plage représente le nouveau paragraphe.</para>
          <para>Si vous ne souhaitez pas remplacer la plage, utilisez la <see cref="M:Microsoft.Office.Interop.Word.Range.Collapse(System.Object@)" /> méthode avant d’utiliser cette méthode. La méthode <b>InsertParagraphAfter</b> insère un nouveau paragraphe après un <see cref="T:Microsoft.Office.Interop.Word.Range" /> objet.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="InsertParagraphAfter">
      <MemberSignature Language="C#" Value="public void InsertParagraphAfter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void InsertParagraphAfter() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.Range.InsertParagraphAfter" />
      <MemberSignature Language="VB.NET" Value="Public Sub InsertParagraphAfter ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void InsertParagraphAfter();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(161)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Insère une marque de paragraphe après une plage.</summary>
        <remarks><para>Une fois cette méthode appliquée, la plage s'étend afin de contenir le nouveau paragraphe.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="InsertParagraphBefore">
      <MemberSignature Language="C#" Value="public void InsertParagraphBefore ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void InsertParagraphBefore() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.Range.InsertParagraphBefore" />
      <MemberSignature Language="VB.NET" Value="Public Sub InsertParagraphBefore ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void InsertParagraphBefore();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(212)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Insère un nouveau paragraphe avant la plage spécifiée.</summary>
        <remarks><para>Une fois cette méthode appliquée, la plage s'étend afin de contenir le nouveau paragraphe.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="InsertSymbol">
      <MemberSignature Language="C#" Value="public void InsertSymbol (int CharacterNumber, ref object Font, ref object Unicode, ref object Bias);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void InsertSymbol([in]int32 CharacterNumber, [in]object&amp; Font, [in]object&amp; Unicode, [in]object&amp; Bias) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.Range.InsertSymbol(System.Int32,System.Object@,System.Object@,System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub InsertSymbol (CharacterNumber As Integer, Optional ByRef Font As Object, Optional ByRef Unicode As Object, Optional ByRef Bias As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(164)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="CharacterNumber" Type="System.Int32" />
        <Parameter Name="Font" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="Unicode" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="Bias" Type="System.Object&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="CharacterNumber">Argument de type <b>Integer</b> obligatoire. Le numéro de caractère du symbole spécifié. Cette valeur doit toujours être égale à la somme de 31 et du chiffre qui correspond à la position du symbole dans la table de caractères (en comptant de gauche à droite). Par exemple, pour spécifier un caractère Delta à la position 37 dans la table des symboles de la police Symbol, <paramref name="CharacterNumber" /> définissez sur 68.</param>
        <param name="Font"><b>Objet</b>facultatif. Nom de la police qui contient le symbole.</param>
        <param name="Unicode"><b>Objet</b>facultatif. <b>True</b> pour insérer le caractère Unicode spécifié par <paramref name="CharacterNumber" />; <b>False</b> pour insérer le caractère ANSI spécifié <paramref name="CharacterNumber" />par. La valeur par défaut est False.</param>
        <param name="Bias"><b>Objet</b>facultatif. Définit le biais de police pour les symboles. Cet argument est utile pour définir le biais de police approprié pour les caractères d'Asie orientale. Il peut s’agir de <see cref="T:Microsoft.Office.Interop.Word.WdFontBias" /> l’une des constantes suivantes: <b>wdFontBiasDefault</b>, <b>wdFontBiasDontCare</b>ou <b>wdFontBiasFareast</b>. Il se peut que cet argument ne soit pas disponible, selon la prise en charge de langue (anglais (États-Unis) par exemple) que vous avez sélectionnée ou installée.</param>
        <summary>Insère un symbole à la place de la plage spécifiée.</summary>
        <remarks><para>Si vous ne souhaitez pas remplacer la sélection de plage, utilisez <see cref="M:Microsoft.Office.Interop.Word.Range.Collapse(System.Object@)" /> la méthode avant d’utiliser cette méthode.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="InsertXML">
      <MemberSignature Language="C#" Value="public void InsertXML (string XML, ref object Transform);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void InsertXML([in]string XML, [in]object&amp; Transform) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.Range.InsertXML(System.String,System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub InsertXML (XML As String, Optional ByRef Transform As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(416)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="XML" Type="System.String" />
        <Parameter Name="Transform" Type="System.Object&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="XML">Argument de type <b>String</b> obligatoire. Texte XML à insérer.</param>
        <param name="Transform"><b>Objet</b>facultatif. Transformation à appliquer au texte XML inséré.</param>
        <summary>Insère le texte XML spécifié dans la plage spécifiée ou la sélection.</summary>
        <remarks><para>Si la plage spécifiée ou la sélection contient du texte, la méthode <b>InsertXML</b> remplace le texte existant.</para>
          <para>Utilisez la méthode <b>InsertXML</b> pour insérer du texte marqué avec du code XML arbitraire ou Microsoft Word XML. Le code XML doit être bien formé. S’il utilise du code XML Word, il doit également être valide en fonction du schéma XML Word. Pour plus d’informations sur le schéma XML Word, reportez-vous au kit de développement de contenu XML Word, que vous pouvez trouver sur le site Web Microsoft Developer Network (MSDN).</para>
          <para>Si le texte XML spécifié ne peut pas être inséré dans la plage ou la sélection spécifiée, un message d’erreur s’affiche.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="InStory">
      <MemberSignature Language="C#" Value="public bool InStory (Microsoft.Office.Interop.Word.Range Range);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool InStory([in]class Microsoft.Office.Interop.Word.Range Range) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.Range.InStory(Microsoft.Office.Interop.Word.Range)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool InStory(Microsoft::Office::Interop::Word::Range ^ Range);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(125)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Range" Type="Microsoft.Office.Interop.Word.Range" />
      </Parameters>
      <Docs>
        <param name="Range">Objet <see cref="T:Microsoft.Office.Interop.Word.Range" /> required. Objet <b>Range</b> dont l’article est comparé à l’article qui contient <paramref name="expression" />.</param>
        <summary>Détermine si la sélection ou la plage à laquelle cette méthode est appliquée se trouve dans le même article que la plage spécifiée <paramref name="Range" /> par l’argument.</summary>
        <returns>To be added.</returns>
        <remarks><para>Cette méthode renvoie la <b>valeur true</b> si la sélection ou la plage à laquelle cette méthode est appliquée se trouve dans le même article que la <paramref name="Range" /> plage spécifiée par l’argument, et <b>false</b> dans le cas contraire.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEndOfRowMark">
      <MemberSignature Language="C#" Value="public bool IsEndOfRowMark { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsEndOfRowMark" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.Range.IsEndOfRowMark" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsEndOfRowMark As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsEndOfRowMark { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(307)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(307)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Détermine si la plage spécifiée est réduite et se trouve à la marque de fin de ligne dans un tableau.</summary>
        <value>To be added.</value>
        <remarks><para>Cette propriété renvoie la <b>valeur true</b> si la plage spécifiée est réduite et se trouve à la marque de fin de ligne dans un tableau, et <b>false</b> dans le cas contraire.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEqual">
      <MemberSignature Language="C#" Value="public bool IsEqual (Microsoft.Office.Interop.Word.Range Range);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsEqual([in]class Microsoft.Office.Interop.Word.Range Range) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.Range.IsEqual(Microsoft.Office.Interop.Word.Range)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsEqual(Microsoft::Office::Interop::Word::Range ^ Range);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(171)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Range" Type="Microsoft.Office.Interop.Word.Range" />
      </Parameters>
      <Docs>
        <param name="Range">Objet <see cref="T:Microsoft.Office.Interop.Word.Range" /> required. Objet <b>Range</b> qui est comparé à <paramref name="expression" />.</param>
        <summary>Détermine si la plage à laquelle s’applique cette méthode est identique à la plage spécifiée par l' <paramref name="Range" /> argument.</summary>
        <returns>To be added.</returns>
        <remarks><para>Cette propriété renvoie la <b>valeur true</b> si la sélection ou la plage à laquelle s’applique cette méthode est identique à la plage <paramref name="Range" /> spécifiée par l’argument, et <b>false</b> dans le cas contraire.</para>
          <para>Cette méthode compare les positions des caractères de début et de fin, ainsi que le type d’article. Si ces trois éléments sont identiques pour les deux objets, les objets sont égaux.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Italic">
      <MemberSignature Language="C#" Value="public int Italic { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Italic" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.Range.Italic" />
      <MemberSignature Language="VB.NET" Value="Public Property Italic As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Italic { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(131)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(131)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(131)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Détermine si la plage est en italique.</summary>
        <value>To be added.</value>
        <remarks><para>Cette propriété renvoie la <b>valeur true</b> si la plage est en italique et <b>false</b> dans le cas contraire.</para>
          <para>Cette propriété renvoie la valeur <b>True</b>, <b>False</b> ou <b>wdUndefined</b> (un mélange de <b>True</b> et <b>False</b>).</para>
          <para>La valeur de cette propriété peut être <b>true</b>, false <b></b>ou <b>wdToggle</b>.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="ItalicBi">
      <MemberSignature Language="C#" Value="public int ItalicBi { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ItalicBi" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.Range.ItalicBi" />
      <MemberSignature Language="VB.NET" Value="Public Property ItalicBi As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ItalicBi { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(401)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(401)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(401)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Détermine si la plage est en italique.</summary>
        <value>To be added.</value>
        <remarks><para>Cette propriété renvoie la <b>valeur true</b> si la plage est en italique et <b>false</b> dans le cas contraire.</para>
          <para>Cette propriété renvoie <b>la valeur True</b>, <b>False</b> ou <b>wdUndefined</b> (pour un mélange de texte italique et non italique).</para>
          <para>La valeur de cette propriété peut être <b>true</b>, false <b></b>ou <b>wdToggle</b>.</para>
          <para>[!REMARQUE] La propriété <b>ItalicBi</b> s'applique au texte dans les langues de droite à gauche.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Kana">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.WdKana Kana { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Word.WdKana Kana" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.Range.Kana" />
      <MemberSignature Language="VB.NET" Value="Public Property Kana As WdKana" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Word::WdKana Kana { Microsoft::Office::Interop::Word::WdKana get(); void set(Microsoft::Office::Interop::Word::WdKana value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(327)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(327)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(327)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.WdKana</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Renvoie ou définit une valeur précisant si la plage de texte en langue japonaise spécifiée est écrite en hiragana ou en katakana.</summary>
        <value>To be added.</value>
        <remarks><para>Cette propriété renvoie la valeur <b>wdUndefined</b> si la plage contient un mélange des graphies hiragana et katakana, ou du texte non japonais. Si vous affectez la valeur <b>wdUndefined</b> à la propriété <b>Kana</b>, une erreur se produit.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="LanguageDetected">
      <MemberSignature Language="C#" Value="public bool LanguageDetected { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool LanguageDetected" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.Range.LanguageDetected" />
      <MemberSignature Language="VB.NET" Value="Public Property LanguageDetected As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool LanguageDetected { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(263)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(263)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(263)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Cette propriété renvoie ou définit une valeur qui indique si Microsoft Word a détecté la langue du texte spécifié.</summary>
        <value>To be added.</value>
        <remarks><para>Vérifiez la <see cref="P:Microsoft.Office.Interop.Word.Range.LanguageID" /> propriété pour les résultats des détections précédentes de la langue.</para>
          <para>La propriété <b>LanguageDetected</b> est définie sur <b>true</b> lorsque la <see cref="M:Microsoft.Office.Interop.Word.Range.DetectLanguage" /> méthode est appelée. Pour réévaluer la langue du texte spécifié, vous devez tout d'abord définir la propriété <b>LanguageDetected</b> sur <b>False</b>.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="LanguageID">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.WdLanguageID LanguageID { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Word.WdLanguageID LanguageID" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.Range.LanguageID" />
      <MemberSignature Language="VB.NET" Value="Public Property LanguageID As WdLanguageID" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Word::WdLanguageID LanguageID { Microsoft::Office::Interop::Word::WdLanguageID get(); void set(Microsoft::Office::Interop::Word::WdLanguageID value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(153)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(153)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(153)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.WdLanguageID</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Renvoie ou définit la langue de l'objet spécifié.</summary>
        <value>To be added.</value>
        <remarks><para>Il se peut <see cref="T:Microsoft.Office.Interop.Word.WdLanguageID" /> que certaines de ces constantes ne soient pas disponibles, en fonction de la prise en charge linguistique (anglais (États-Unis), par exemple) que vous avez sélectionnée ou installée.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="LanguageIDFarEast">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.WdLanguageID LanguageIDFarEast { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Word.WdLanguageID LanguageIDFarEast" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.Range.LanguageIDFarEast" />
      <MemberSignature Language="VB.NET" Value="Public Property LanguageIDFarEast As WdLanguageID" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Word::WdLanguageID LanguageIDFarEast { Microsoft::Office::Interop::Word::WdLanguageID get(); void set(Microsoft::Office::Interop::Word::WdLanguageID value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(321)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(321)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(321)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.WdLanguageID</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Renvoie ou définit une langue d'Asie orientale pour l'objet spécifié.</summary>
        <value>To be added.</value>
        <remarks><para>Cette méthode est recommandée pour renvoyer ou définir la langue d'un texte à caractères d'Asie orientale utilisée dans un document créé dans une version en langue d'Asie orientale de Microsoft Word.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="LanguageIDOther">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.WdLanguageID LanguageIDOther { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Word.WdLanguageID LanguageIDOther" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.Range.LanguageIDOther" />
      <MemberSignature Language="VB.NET" Value="Public Property LanguageIDOther As WdLanguageID" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Word::WdLanguageID LanguageIDOther { Microsoft::Office::Interop::Word::WdLanguageID get(); void set(Microsoft::Office::Interop::Word::WdLanguageID value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(322)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(322)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(322)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.WdLanguageID</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Renvoie ou définit la langue de l'objet spécifié.</summary>
        <value>To be added.</value>
        <remarks><para>Cette méthode est recommandée pour renvoyer ou définir la langue d'un texte à caractères latins utilisée dans un document créé dans une version de Microsoft Word en langue se lisant de droite à gauche.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="ListFormat">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.ListFormat ListFormat { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Word.ListFormat ListFormat" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.Range.ListFormat" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ListFormat As ListFormat" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Word::ListFormat ^ ListFormat { Microsoft::Office::Interop::Word::ListFormat ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(68)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(68)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.ListFormat</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Renvoie un <see cref="T:Microsoft.Office.Interop.Word.ListFormat" /> Object qui représente toutes les caractéristiques de mise en forme de liste d’une plage.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ListParagraphs">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.ListParagraphs ListParagraphs { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Word.ListParagraphs ListParagraphs" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.Range.ListParagraphs" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ListParagraphs As ListParagraphs" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Word::ListParagraphs ^ ListParagraphs { Microsoft::Office::Interop::Word::ListParagraphs ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(157)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(157)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.ListParagraphs</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Renvoie une <see cref="T:Microsoft.Office.Interop.Word.ListParagraphs" /> collection qui représente tous les paragraphes numérotés contenus dans la plage.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ListStyle">
      <MemberSignature Language="C#" Value="public object ListStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object ListStyle" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.Range.ListStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ListStyle As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ ListStyle { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(422)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(422)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Renvoie un <b>Object</b> qui représente le style utilisé pour mettre en forme une liste à puces ou une liste numérotée. En lecture seule.</summary>
        <value><b>Object</b></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Locks">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.CoAuthLocks Locks { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Word.CoAuthLocks Locks" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.Range.Locks" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Locks As CoAuthLocks" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Word::CoAuthLocks ^ Locks { Microsoft::Office::Interop::Word::CoAuthLocks ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(504)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(504)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.CoAuthLocks</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient un <see cref="T:Microsoft.Office.Interop.Word.CoAuthLocks" /> objet de collection qui représente tous les verrous de la plage.</summary>
        <value>Objet <see cref="T:Microsoft.Office.Interop.Word.CoAuthLocks" /> collection qui représente tous les verrous de la plage.</value>
        <remarks><para>En lecture seule. Utilisez cette propriété pour renvoyer la <see cref="T:Microsoft.Office.Interop.Word.CoAuthLocks" /> collection.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupNameProperties">
      <MemberSignature Language="C#" Value="public void LookupNameProperties ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void LookupNameProperties() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.Range.LookupNameProperties" />
      <MemberSignature Language="VB.NET" Value="Public Sub LookupNameProperties ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void LookupNameProperties();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(177)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Recherche un nom dans le carnet d'adresses global et affiche, dans la boîte de dialogue Propriétés, les informations relatives au nom spécifié.</summary>
        <remarks><para>Si cette méthode trouve plusieurs correspondances, elle affiche la boîte de dialogue Vérification des noms.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="ModifyEnclosure">
      <MemberSignature Language="C#" Value="public void ModifyEnclosure (ref object Style, ref object Symbol, ref object EnclosedText);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ModifyEnclosure([in]object&amp; Style, [in]object&amp; Symbol, [in]object&amp; EnclosedText) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.Range.ModifyEnclosure(System.Object@,System.Object@,System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ModifyEnclosure (ByRef Style As Object, Optional ByRef Symbol As Object, Optional ByRef EnclosedText As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(223)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Style" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="Symbol" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="EnclosedText" Type="System.Object&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="Style"><b>Objet</b>required. Le style d'encadrement. Peut être n' <see cref="T:Microsoft.Office.Interop.Word.WdEncloseStyle" /> importe quelle constante.</param>
        <param name="Symbol"><b>Objet</b>facultatif. Le symbole dans lequel encadrer la plage spécifiée. Peut être n' <see cref="T:Microsoft.Office.Interop.Word.WdEnclosureType" /> importe quelle constante.</param>
        <param name="EnclosedText"><b>Objet</b>facultatif. Caractères à entourer. Si vous spécifiez cet argument, Microsoft Word remplace la plage spécifiée par les caractères entourés. Si vous ne spécifiez pas cet argument, Microsoft Word entoure tout le texte contenu dans la plage indiquée.</param>
        <summary>Ajoute, modifie et supprime un symbole qui entoure des caractères spécifiés.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Move">
      <MemberSignature Language="C#" Value="public int Move (ref object Unit, ref object Count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Move([in]object&amp; Unit, [in]object&amp; Count) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.Range.Move(System.Object@,System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Function Move (Optional ByRef Unit As Object, Optional ByRef Count As Object) As Integer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(109)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Unit" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="Count" Type="System.Object&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="Unit"><b>Objet</b>facultatif. Unité utilisée pour le déplacement de la plage ou de la sélection réduite. Il peut s’agir de l' <see cref="T:Microsoft.Office.Interop.Word.WdUnits" /> une des constantes suivantes: <b>wdCharacter</b>, <b>wdWord</b>, <b>wdSentence</b>, <b>wdParagraph</b>, <b>wdSection</b>, <b>wdStory</b>, <b>wdCell</b>, <b>wdColumn</b>, <b>wdRow</b>ou <b>wdTable</b>. Si <paramref name="expression" /> renvoie un <see cref="T:Microsoft.Office.Interop.Word.Selection" /> objet, vous pouvez également utiliser <b>wdLine</b>. La valeur par défaut est <b>wdCharacter</b>.</param>
        <param name="Count"><b>Objet</b>facultatif. Le nombre d'unités selon lequel la plage spécifiée ou la sélection doit être déplacée. Si <paramref name="Count" /> est un nombre positif, l’objet est réduit à sa position de fin et déplacée vers l’arrière dans le document, selon le nombre d’unités spécifié. Si <paramref name="Count" /> est un nombre négatif, l’objet est réduit à sa position de début et déplacé vers l’avant selon le nombre d’unités spécifié. La valeur par défaut est 1. Vous pouvez également contrôler la direction de la réduction à <see cref="M:Microsoft.Office.Interop.Word.Range.Collapse(System.Object@)" /> l’aide de la méthode avant d’utiliser la méthode <b>Move</b> . Si la plage se trouve au milieu d'une unité ou si elle n'est pas réduite, un déplacement vers le début ou la fin de l'unité est compté comme un déplacement d'une unité entière.</param>
        <summary>Réduit la plage ou la sélection spécifiée à sa position de début ou de fin, puis déplace l’objet réduit du nombre d’unités spécifié.</summary>
        <returns>To be added.</returns>
        <remarks><para>Cette méthode renvoie une valeur de <b>type Integer</b> qui indique le nombre d’unités de déplacement de l’objet, ou elle renvoie la valeur 0 (zéro) si le déplacement a échoué.</para>
          <para>Les positions de début et de fin d'une plage ou d'une sélection réduite sont les mêmes.</para>
          <para>L’application de la méthode <b>Move</b> à une plage ne réorganise pas le texte du document mais redéfinit cette plage pour qu’elle fasse référence à un nouvel emplacement du document.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="MoveEnd">
      <MemberSignature Language="C#" Value="public int MoveEnd (ref object Unit, ref object Count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 MoveEnd([in]object&amp; Unit, [in]object&amp; Count) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.Range.MoveEnd(System.Object@,System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Function MoveEnd (Optional ByRef Unit As Object, Optional ByRef Count As Object) As Integer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(111)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Unit" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="Count" Type="System.Object&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="Unit">Facultatif <see cref="T:Microsoft.Office.Interop.Word.WdUnits" />. Unité en fonction de laquelle déplacer la position du caractère de fin.</param>
        <param name="Count"><b>Objet</b>facultatif. Nombre d'unités à déplacer. Si ce nombre est positif, le caractère de fin est déplacé vers l'avant dans le document. En revanche, s'il est négatif, le caractère de fin est déplacé vers l'arrière. Si l'emplacement de fin dépasse l'emplacement de début, la plage est réduite, et les deux emplacements sont déplacés ensemble. La valeur par défaut est 1.</param>
        <summary>Déplace la position du caractère de fin d'une plage.</summary>
        <returns>To be added.</returns>
        <remarks><para>Cette méthode renvoie un entier qui indique le nombre d'unités correspondant à la distance de déplacement de la plage ou de la sélection ou elle renvoie la valeur 0 (zéro) si la procédure de déplacement a échoué.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="MoveEndUntil">
      <MemberSignature Language="C#" Value="public int MoveEndUntil (ref object Cset, ref object Count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 MoveEndUntil([in]object&amp; Cset, [in]object&amp; Count) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.Range.MoveEndUntil(System.Object@,System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Function MoveEndUntil (ByRef Cset As Object, Optional ByRef Count As Object) As Integer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(117)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Cset" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="Count" Type="System.Object&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="Cset"><b>Objet</b>required. Un ou plusieurs caractères. Cet argument respecte le casse.</param>
        <param name="Count"><b>Objet</b>facultatif. Nombre maximal de caractères par lequel la plage ou la sélection spécifiée doit être déplacée. Peut être un nombre ou le <b>wdForward</b> ou <b>wdBackward</b> constant. Si <paramref name="Count" /> est un nombre positif, la plage ou la sélection est déplacée vers l’avant dans le document. S’il s’agit d’un nombre négatif, la plage ou la sélection est déplacée vers l’arrière. La valeur par défaut est <b>wdForward</b>.</param>
        <summary>Déplace la position de fin de la plage ou de la sélection spécifiée jusqu’à ce que l’un des caractères spécifiés soit trouvé dans le document.</summary>
        <returns>To be added.</returns>
        <remarks><para>S'il s'agit d'un déplacement en avant du document, la plage est développée.</para>
          <para>Cette méthode renvoie le nombre de caractères par lequel la position de fin de la plage spécifiée a été déplacée, sous la forme d’une valeur <b>entière</b> . Si <paramref name="Count" /> est supérieur à 0 (zéro), cette méthode renvoie le nombre de caractères de déplacement plus 1. Si <paramref name="Count" /> la valeur est inférieure à 0 (zéro), cette méthode renvoie le nombre de caractères de déplacement moins 1. Si aucun <paramref name="Cset" /> caractère n’est trouvé, la plage ou la sélection n’est pas modifiée et la méthode renvoie la valeur 0 (zéro). Si la position de fin est déplacée vers un point qui précède la position de début d'origine, la position de début est définie à la nouvelle position de fin.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="MoveEndWhile">
      <MemberSignature Language="C#" Value="public int MoveEndWhile (ref object Cset, ref object Count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 MoveEndWhile([in]object&amp; Cset, [in]object&amp; Count) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.Range.MoveEndWhile(System.Object@,System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Function MoveEndWhile (ByRef Cset As Object, Optional ByRef Count As Object) As Integer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(114)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Cset" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="Count" Type="System.Object&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="Cset"><b>Objet</b>required. Un ou plusieurs caractères. Cet argument respecte le casse.</param>
        <param name="Count"><b>Objet</b>facultatif. Nombre maximal de caractères par lequel la plage ou la sélection doit être déplacée. Peut être un nombre ou le <b>wdForward</b> ou <b>wdBackward</b> constant. Si <paramref name="Count" /> est un nombre positif, la plage ou la sélection est déplacée vers l’avant dans le document. S’il s’agit d’un nombre négatif, la plage ou la sélection est déplacée vers l’arrière. La valeur par défaut est <b>wdForward</b>.</param>
        <summary>Déplace la position du caractère de fin d'une plage tant que l'un des caractères spécifiés est trouvé dans le document.</summary>
        <returns>To be added.</returns>
        <remarks><para>Tant que n’importe <paramref name="Cset" /> quel caractère de est trouvé, la position de fin de la plage ou de la sélection spécifiée est déplacée. Cette méthode renvoie le nombre de caractères de déplacée de la position de fin de la plage ou de la sélection sous forme de valeur <b>entière</b> . Si aucun <paramref name="Cset" /> caractère n’est trouvé, la plage ou la sélection n’est pas modifiée et la méthode renvoie la valeur 0 (zéro). Si la position de fin est déplacée vers un point qui précède la position de début d'origine, la position de début est définie à la nouvelle position de fin.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="MoveStart">
      <MemberSignature Language="C#" Value="public int MoveStart (ref object Unit, ref object Count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 MoveStart([in]object&amp; Unit, [in]object&amp; Count) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.Range.MoveStart(System.Object@,System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Function MoveStart (Optional ByRef Unit As Object, Optional ByRef Count As Object) As Integer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(110)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Unit" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="Count" Type="System.Object&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="Unit">Facultatif <see cref="T:Microsoft.Office.Interop.Word.WdUnits" />. Unité en fonction de laquelle la position de début de la plage ou de la sélection spécifiée doit être déplacée.</param>
        <param name="Count"><b>Objet</b>facultatif. Nombre maximal d’unités de déplacement de la plage ou de la sélection spécifiée. Si <paramref name="Count" /> est un nombre positif, la position de début de la plage ou de la sélection est déplacée vers l’avant dans le document. S’il s’agit d’un nombre négatif, la position de début est déplacée vers l’arrière. Si la position de début est déplacée vers l’avant au-delà de la position de fin, la plage ou la sélection est réduite et les positions de début et de fin sont déplacées ensemble. La valeur par défaut est 1.</param>
        <summary>Déplace la position de début de la plage spécifiée.</summary>
        <returns>To be added.</returns>
        <remarks><para>Cette méthode renvoie un entier qui indique le nombre d’unités de déplacement de la position de début ou de la plage ou de la sélection, ou elle renvoie la valeur 0 (zéro) si le déplacement a échoué.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="MoveStartUntil">
      <MemberSignature Language="C#" Value="public int MoveStartUntil (ref object Cset, ref object Count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 MoveStartUntil([in]object&amp; Cset, [in]object&amp; Count) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.Range.MoveStartUntil(System.Object@,System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Function MoveStartUntil (ByRef Cset As Object, Optional ByRef Count As Object) As Integer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(116)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Cset" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="Count" Type="System.Object&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="Cset"><b>Objet</b>required. Un ou plusieurs caractères. Cet argument respecte le casse.</param>
        <param name="Count"><b>Objet</b>facultatif. Nombre maximal de caractères par lequel la plage ou la sélection spécifiée doit être déplacée. Peut être un nombre ou le <b>wdForward</b> ou <b>wdBackward</b> constant. Si <paramref name="Count" /> est un nombre positif, la plage ou la sélection est déplacée vers l’avant dans le document. S’il s’agit d’un nombre négatif, la plage ou la sélection est déplacée vers l’arrière. La valeur par défaut est <b>wdForward</b>.</param>
        <summary>Déplace la position de début de la plage ou de la sélection spécifiée jusqu’à ce que l’un des caractères indiqués soit trouvé dans le document.</summary>
        <returns>To be added.</returns>
        <remarks><para>S'il s'agit d'un déplacement vers l'arrière dans le document, la plage est développée.</para>
          <para>Cette méthode renvoie le nombre de caractères de déplacée de la position de début de la plage ou de la sélection spécifiée, sous la forme d’une valeur <b>entière</b> . Si <paramref name="Count" /> est supérieur à 0 (zéro), cette méthode renvoie le nombre de caractères de déplacement plus 1. Si <paramref name="Count" /> la valeur est inférieure à 0 (zéro), cette méthode renvoie le nombre de caractères de déplacement moins 1. Si aucun <paramref name="Cset" /> caractère n’est trouvé, la plage ou la sélection spécifiée n’est pas modifiée et la méthode renvoie la valeur 0 (zéro). Si la position de début est déplacée vers l’avant au-delà de la position de fin, la plage ou la sélection est réduite et les positions de début et de fin sont déplacées ensemble.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="MoveStartWhile">
      <MemberSignature Language="C#" Value="public int MoveStartWhile (ref object Cset, ref object Count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 MoveStartWhile([in]object&amp; Cset, [in]object&amp; Count) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.Range.MoveStartWhile(System.Object@,System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Function MoveStartWhile (ByRef Cset As Object, Optional ByRef Count As Object) As Integer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(113)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Cset" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="Count" Type="System.Object&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="Cset"><b>Objet</b>required. Un ou plusieurs caractères. Cet argument respecte le casse.</param>
        <param name="Count"><b>Objet</b>facultatif. Nombre maximal de caractères par lequel la plage ou la sélection spécifiée doit être déplacée. Peut être un nombre ou le <b>wdForward</b> ou <b>wdBackward</b> constant. Si <paramref name="Count" /> est un nombre positif, la plage ou la sélection est déplacée vers l’avant dans le document. S’il s’agit d’un nombre négatif, la plage ou la sélection est déplacée vers l’arrière. La valeur par défaut est <b>wdForward</b>.</param>
        <summary>Déplace la position de début de la plage spécifiée tant que l'un des caractères spécifiés est trouvé dans le document.</summary>
        <returns>To be added.</returns>
        <remarks><para>Tant que n’importe <paramref name="Cset" /> quel caractère de est trouvé, la position de début de la plage ou de la sélection est déplacée. Cette méthode renvoie le nombre de caractères de déplacée de la position de début de la plage ou de la sélection sous forme de valeur <b>entière</b> . Si aucun <paramref name="Cset" /> caractère n’est trouvé, la plage ou la sélection n’est pas modifiée et la méthode renvoie la valeur 0 (zéro). Si la position de début est déplacée vers l'avant à une position au-delà de la position de fin d'origine, la position de fin est définie pour la nouvelle position de début.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="MoveUntil">
      <MemberSignature Language="C#" Value="public int MoveUntil (ref object Cset, ref object Count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 MoveUntil([in]object&amp; Cset, [in]object&amp; Count) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.Range.MoveUntil(System.Object@,System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Function MoveUntil (ByRef Cset As Object, Optional ByRef Count As Object) As Integer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(115)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Cset" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="Count" Type="System.Object&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="Cset"><b>Objet</b>required. Un ou plusieurs caractères. Si un caractère de <paramref name="Cset" /> la collection est trouvé <paramref name="Count" /> avant l’expiration de la valeur, la plage spécifiée ou la sélection est placée en tant que point d’insertion immédiatement avant ce caractère. Cet argument respecte le casse.</param>
        <param name="Count"><b>Objet</b>facultatif. Nombre maximal de caractères par lequel la plage ou la sélection spécifiée doit être déplacée. Peut être un nombre ou le <b>wdForward</b> ou <b>wdBackward</b> constant. Si <paramref name="Count" /> est un nombre positif, la plage ou la sélection est déplacée vers l’avant dans le document, à partir de la position de fin. S’il s’agit d’un nombre négatif, la plage ou la sélection est déplacée vers l’arrière, à partir de la position de début. La valeur par défaut est <b>wdForward</b>.</param>
        <summary>Déplace la plage spécifiée jusqu'à ce que l'un des caractères indiqués soit trouvé dans le document.</summary>
        <returns>To be added.</returns>
        <remarks><para>Cette méthode renvoie le nombre de caractères de déplacement de la plage ou de la sélection spécifiée, sous la forme d’une valeur <b>entière</b> . Si <paramref name="Count" /> est supérieur à 0 (zéro), cette méthode renvoie le nombre de caractères de déplacement plus 1. Si <paramref name="Count" /> la valeur est inférieure à 0 (zéro), cette méthode renvoie le nombre de caractères de déplacement moins 1. Si aucun <paramref name="Cset" /> caractère n’est trouvé, la plage ou la sélection n’est pas modifiée et la méthode renvoie la valeur 0 (zéro).</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="MoveWhile">
      <MemberSignature Language="C#" Value="public int MoveWhile (ref object Cset, ref object Count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 MoveWhile([in]object&amp; Cset, [in]object&amp; Count) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.Range.MoveWhile(System.Object@,System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Function MoveWhile (ByRef Cset As Object, Optional ByRef Count As Object) As Integer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(112)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Cset" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="Count" Type="System.Object&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="Cset"><b>Objet</b>required. Un ou plusieurs caractères. Cet argument respecte le casse.</param>
        <param name="Count"><b>Objet</b>facultatif. Nombre maximal de caractères par lequel la plage ou la sélection spécifiée doit être déplacée. Peut être un nombre ou le <b>wdForward</b> ou <b>wdBackward</b> constant. Si <paramref name="Count" /> est un nombre positif, la plage ou la sélection spécifiée est déplacée vers l’avant dans le document, à partir de la position de fin. S’il s’agit d’un nombre négatif, la plage ou la sélection est déplacée vers l’arrière, à partir de la position de début. La valeur par défaut est <b>wdForward</b>.</param>
        <summary>Déplace la plage spécifiée tant que l'un des caractères indiqués est trouvé dans le document.</summary>
        <returns>To be added.</returns>
        <remarks><para>Tant que n’importe <paramref name="Cset" /> quel caractère de est trouvé, la plage spécifiée est déplacée. L’objet <see cref="T:Microsoft.Office.Interop.Word.Range" /> résultant est placé en tant que point d’insertion <paramref name="Cset" /> après les caractères trouvés. Cette méthode renvoie le nombre de caractères de déplacement de la plage ou de la sélection spécifiée, sous la forme d’une valeur <b>entière</b> . Si aucun <paramref name="Cset" /> caractère n’est trouvé, la plage n’est pas modifiée et la méthode renvoie la valeur 0 (zéro).</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Next">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.Range Next (ref object Unit, ref object Count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Word.Range Next([in]object&amp; Unit, [in]object&amp; Count) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.Range.Next(System.Object@,System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Function Next (Optional ByRef Unit As Object, Optional ByRef Count As Object) As Range" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(105)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.Range</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Unit" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="Count" Type="System.Object&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="Unit"><b>Objet</b>facultatif. Type d'unités servant au calcul du déplacement. Peut être n' <see cref="T:Microsoft.Office.Interop.Word.WdUnits" /> importe quelle constante.</param>
        <param name="Count"><b>Objet</b>facultatif. Nombre d'unités qui représente la distance de déplacement vers l'avant. La valeur par défaut est 1 (un).</param>
        <summary>Renvoie un <see cref="T:Microsoft.Office.Interop.Word.Range" /> Object qui représente l’unité spécifiée par rapport à la plage spécifiée.</summary>
        <returns>To be added.</returns>
        <remarks><para>Si la plage se trouve juste avant le <paramref name="Unit" />spécifié, la plage est déplacée vers l’unité suivante.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="NextStoryRange">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.Range NextStoryRange { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Word.Range NextStoryRange" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.Range.NextStoryRange" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property NextStoryRange As Range" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Word::Range ^ NextStoryRange { Microsoft::Office::Interop::Word::Range ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(320)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(320)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.Range</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Renvoie un <see cref="T:Microsoft.Office.Interop.Word.Range" /> objet qui fait référence à l’article suivant, comme indiqué dans le tableau suivant.</summary>
        <value>To be added.</value>
        <remarks><para>Le tableau suivant montre ce qui est renvoyé par la propriété <b>NextStoryRange</b> :</para>
          <list type="table">
            <item>
              <description>
                <b>wdMainTextStory</b>, <b>wdFootnotesStory</b>, <b>wdEndnotesStory</b> et <b>wdCommentsStory</b></description>
              <description>Renvoie toujours <b>Nothing</b>.</description>
            </item>
            <item>
              <description>
                <b>wdTextFrameStory</b>
              </description>
              <description>Article de l’ensemble suivant de zones de texte liées.</description>
            </item>
            <item>
              <description>
                <b>wdEvenPagesHeaderStory</b>, <b>wdPrimaryHeaderStory</b>, <b>wdEvenPagesFooterStory</b>, <b>wdPrimaryFooterStory fait</b>, <b>wdFirstPageHeaderStory</b>, <b>wdFirstPageFooterStory</b></description>
              <description>Article de la section suivante du même type.</description>
            </item>
          </list>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="NextSubdocument">
      <MemberSignature Language="C#" Value="public void NextSubdocument ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void NextSubdocument() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.Range.NextSubdocument" />
      <MemberSignature Language="VB.NET" Value="Public Sub NextSubdocument ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void NextSubdocument();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(219)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Déplace la plage vers le sous-document suivant.</summary>
        <remarks><para>S'il n'existe aucun autre sous-document, une erreur se produit.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="NoProofing">
      <MemberSignature Language="C#" Value="public int NoProofing { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 NoProofing" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.Range.NoProofing" />
      <MemberSignature Language="VB.NET" Value="Public Property NoProofing As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int NoProofing { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(323)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(323)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(323)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Détermine si le vérificateur d’orthographe et de grammaire ignore le texte spécifié.</summary>
        <value>To be added.</value>
        <remarks><para>Cette propriété renvoie la <b>valeur true</b> si le vérificateur d’orthographe et de grammaire ignore le texte <b></b> spécifié, et false dans le cas contraire. Elle renvoie <b>wdUndefined</b> si la <b></b> propriété NoProofing est définie sur <b>true</b> uniquement pour une partie du texte spécifié.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="OMaths">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.OMaths OMaths { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Word.OMaths OMaths" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.Range.OMaths" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property OMaths As OMaths" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Word::OMaths ^ OMaths { Microsoft::Office::Interop::Word::OMaths ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(346)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(346)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.OMaths</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Renvoie une <see cref="T:Microsoft.Office.Interop.Word.OMaths" /> collection qui représente les <see cref="T:Microsoft.Office.Interop.Word.OMath" /> objets de la plage spécifiée. En lecture seule.</summary>
        <value><see cref="T:Microsoft.Office.Interop.Word.OMaths" /></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Orientation">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.WdTextOrientation Orientation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Word.WdTextOrientation Orientation" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.Range.Orientation" />
      <MemberSignature Language="VB.NET" Value="Public Property Orientation As WdTextOrientation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Word::WdTextOrientation Orientation { Microsoft::Office::Interop::Word::WdTextOrientation get(); void set(Microsoft::Office::Interop::Word::WdTextOrientation value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(317)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(317)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(317)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.WdTextOrientation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Cette propriété renvoie ou définit l'orientation du texte dans une plage lorsque la fonctionnalité Orientation du texte est activée.</summary>
        <value>To be added.</value>
        <remarks><para>Il se peut que certaines des constantes énumérées ci-dessus ne soient pas disponibles, selon la prise en charge de langue (anglais (États-Unis), par exemple) que vous avez sélectionnée ou installée.</para>
          <para>Vous pouvez définir l'orientation d'un cadre de texte ou d'une plage ou une sélection qui se trouve à l'intérieur d'un cadre de texte. Pour plus d’informations sur la différence entre un cadre de texte et une zone de <see cref="T:Microsoft.Office.Interop.Word.TextFrame" /> texte, reportez-vous à l’objet.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="PageSetup">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.PageSetup PageSetup { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Word.PageSetup PageSetup" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.Range.PageSetup" />
      <MemberSignature Language="VB.NET" Value="Public Property PageSetup As PageSetup" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Word::PageSetup ^ PageSetup { Microsoft::Office::Interop::Word::PageSetup ^ get(); void set(Microsoft::Office::Interop::Word::PageSetup ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1101)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1101)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1101)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.PageSetup</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Renvoie un <see cref="T:Microsoft.Office.Interop.Word.PageSetup" /> objet associé à la plage spécifiée.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ParagraphFormat">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.ParagraphFormat ParagraphFormat { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Word.ParagraphFormat ParagraphFormat" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.Range.ParagraphFormat" />
      <MemberSignature Language="VB.NET" Value="Public Property ParagraphFormat As ParagraphFormat" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Word::ParagraphFormat ^ ParagraphFormat { Microsoft::Office::Interop::Word::ParagraphFormat ^ get(); void set(Microsoft::Office::Interop::Word::ParagraphFormat ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1102)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1102)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1102)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.ParagraphFormat</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Cette propriété renvoie ou <see cref="T:Microsoft.Office.Interop.Word.ParagraphFormat" /> définit un objet qui représente les paramètres de paragraphe de la plage spécifiée.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Paragraphs">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.Paragraphs Paragraphs { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Word.Paragraphs Paragraphs" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.Range.Paragraphs" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Paragraphs As Paragraphs" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Word::Paragraphs ^ Paragraphs { Microsoft::Office::Interop::Word::Paragraphs ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(59)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(59)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.Paragraphs</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Renvoie une <see cref="T:Microsoft.Office.Interop.Word.Paragraphs" /> collection qui représente tous les paragraphes contenus dans la plage spécifiée.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ParagraphStyle">
      <MemberSignature Language="C#" Value="public object ParagraphStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object ParagraphStyle" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.Range.ParagraphStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ParagraphStyle As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ ParagraphStyle { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(421)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(421)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Renvoie un <b>Object</b> qui représente le style utilisé pour mettre en forme un paragraphe. En lecture seule.</summary>
        <value><b>Object</b></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public object Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Parent" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.Range.Parent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parent As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Parent { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1002)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1002)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Cette propriété renvoie un objet qui représente l'objet parent de l'objet spécifié.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ParentContentControl">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.ContentControl ParentContentControl { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Word.ContentControl ParentContentControl" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.Range.ParentContentControl" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ParentContentControl As ContentControl" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Word::ContentControl ^ ParentContentControl { Microsoft::Office::Interop::Word::ContentControl ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(501)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(501)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.ContentControl</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Renvoie un <see cref="T:Microsoft.Office.Interop.Word.ContentControl" /> Object qui représente le contrôle de contenu parent pour la plage spécifiée. En lecture seule.</summary>
        <value><see cref="T:Microsoft.Office.Interop.Word.ContentControl" /></value>
        <remarks><para>Cette propriété renvoie la <b>valeur null</b> s’il n’existe aucun contrôle de contenu parent pour la plage spécifiée.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Paste">
      <MemberSignature Language="C#" Value="public void Paste ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Paste() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.Range.Paste" />
      <MemberSignature Language="VB.NET" Value="Public Sub Paste ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Paste();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(121)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Insère le contenu du Presse-papiers dans la plage spécifiée.</summary>
        <remarks><para>Si vous ne souhaitez pas remplacer le contenu de la plage, utilisez la <see cref="M:Microsoft.Office.Interop.Word.Range.Collapse(System.Object@)" /> méthode avant d’utiliser cette méthode.</para>
          <para>La plage se développe pour inclure le contenu du presse-papiers. Lorsque cette méthode est utilisée avec un <see cref="T:Microsoft.Office.Interop.Word.Selection" /> objet, la sélection ne se développe pas pour inclure le contenu du presse-papiers. au lieu de cela, la sélection est placée après le contenu du presse-papiers collé.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="PasteAndFormat">
      <MemberSignature Language="C#" Value="public void PasteAndFormat (Microsoft.Office.Interop.Word.WdRecoveryType Type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PasteAndFormat([in]valuetype Microsoft.Office.Interop.Word.WdRecoveryType Type) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.Range.PasteAndFormat(Microsoft.Office.Interop.Word.WdRecoveryType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub PasteAndFormat (Type As WdRecoveryType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void PasteAndFormat(Microsoft::Office::Interop::Word::WdRecoveryType Type);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(412)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Type" Type="Microsoft.Office.Interop.Word.WdRecoveryType" />
      </Parameters>
      <Docs>
        <param name="Type">Obligatoire <see cref="T:Microsoft.Office.Interop.Word.WdRecoveryType" />. Type de mise en forme à appliquer lors du collage des cellules de tableau sélectionnées.</param>
        <summary>Colle des cellules de tableau sélectionnées et les met en forme conformément aux indications.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PasteAppendTable">
      <MemberSignature Language="C#" Value="public void PasteAppendTable ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PasteAppendTable() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.Range.PasteAppendTable" />
      <MemberSignature Language="VB.NET" Value="Public Sub PasteAppendTable ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void PasteAppendTable();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(414)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Fusionne des cellules collées dans un tableau existant en insérant les lignes collées entre les lignes sélectionnées.</summary>
        <remarks><para>Aucune cellule n'est remplacée.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="PasteAsNestedTable">
      <MemberSignature Language="C#" Value="public void PasteAsNestedTable ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PasteAsNestedTable() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.Range.PasteAsNestedTable" />
      <MemberSignature Language="VB.NET" Value="Public Sub PasteAsNestedTable ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void PasteAsNestedTable();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(222)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Colle une cellule ou un groupe de cellules sous forme de tableau imbriqué dans la plage sélectionnée.</summary>
        <remarks><para>Vous pouvez utiliser la <b>méthode PasteAsNestedTable</b> que si le Presse-papiers contient une cellule ou groupe de cellules et de la plage sélectionnée est une cellule ou un groupe de cellules dans le document actif.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="PasteExcelTable">
      <MemberSignature Language="C#" Value="public void PasteExcelTable (bool LinkedToExcel, bool WordFormatting, bool RTF);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PasteExcelTable([in]bool LinkedToExcel, [in]bool WordFormatting, [in]bool RTF) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.Range.PasteExcelTable(System.Boolean,System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub PasteExcelTable (LinkedToExcel As Boolean, WordFormatting As Boolean, RTF As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void PasteExcelTable(bool LinkedToExcel, bool WordFormatting, bool RTF);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(413)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="LinkedToExcel" Type="System.Boolean" />
        <Parameter Name="WordFormatting" Type="System.Boolean" />
        <Parameter Name="RTF" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="LinkedToExcel"><b>Boolean</b> obligatoire. <b>True</b> pour lier le tableau collé au fichier Excel d'origine, afin de répercuter dans Microsoft Word les modifications apportées au fichier Excel.</param>
        <param name="WordFormatting"><b>Boolean</b> obligatoire. <b>True</b> pour mettre en forme la table à l'aide de la mise en forme du document Word. <b>False</b> pour mettre en forme la table en fonction du fichier Excel d'origine.</param>
        <param name="RTF"><b>Boolean</b> obligatoire. <b>La valeur True</b> colle le tableau Excel au Format RTF (RICH Text Format). <b>False</b> colle le tableau Excel au format HTML.</param>
        <summary>Colle et met en forme un tableau Microsoft Excel.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PasteSpecial">
      <MemberSignature Language="C#" Value="public void PasteSpecial (ref object IconIndex, ref object Link, ref object Placement, ref object DisplayAsIcon, ref object DataType, ref object IconFileName, ref object IconLabel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PasteSpecial([in]object&amp; IconIndex, [in]object&amp; Link, [in]object&amp; Placement, [in]object&amp; DisplayAsIcon, [in]object&amp; DataType, [in]object&amp; IconFileName, [in]object&amp; IconLabel) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.Range.PasteSpecial(System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub PasteSpecial (Optional ByRef IconIndex As Object, Optional ByRef Link As Object, Optional ByRef Placement As Object, Optional ByRef DisplayAsIcon As Object, Optional ByRef DataType As Object, Optional ByRef IconFileName As Object, Optional ByRef IconLabel As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(176)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="IconIndex" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="Link" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="Placement" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="DisplayAsIcon" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="DataType" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="IconFileName" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="IconLabel" Type="System.Object&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="IconIndex"><b>Objet</b>facultatif. Si <paramref name="DisplayAsIcon" /> la <b>valeur est true</b>, cet argument est un nombre qui correspond à l’icône que vous souhaitez utiliser dans le fichier de <paramref name="IconFilename" />programme spécifié par. Les icônes s’affichent dans la boîte de dialogue changer d’icône (menu Insertion, commande objet, onglet créer un nouvel onglet): 0 (zéro) correspond à la première icône, 1 correspond à la deuxième icône, et ainsi de suite. Si cet argument est omis, la première icône (par défaut) est utilisée.</param>
        <param name="Link"><b>Objet</b>facultatif. <b>True</b> pour créer un lien vers le fichier source du contenu du Presse-papiers. La valeur par défaut est <b>False</b>.</param>
        <param name="Placement"><b>Objet</b>facultatif. Peut être l’une des constantes suivantes <see cref="T:Microsoft.Office.Interop.Word.WdOLEPlacement" /> : <b>wdFloatOverText</b> ou <b>wdInLine</b>. La valeur par défaut est <b>wdInLine</b>.</param>
        <param name="DisplayAsIcon"><b>Objet</b>facultatif. <b>Objet</b>facultatif. <b>True</b> pour afficher le lien en tant qu'icône. La valeur par défaut est <b>False</b>.</param>
        <param name="DataType"><b>Objet</b>facultatif. Un format pour le contenu du Presse-papiers lorsqu'il est inséré dans le document. <see cref="T:Microsoft.Office.Interop.Word.WdPasteDataType" />.</param>
        <param name="IconFileName"><b>Objet</b>facultatif. Si <paramref name="DisplayAsIcon" /> la <b>valeur est true</b>, cet argument représente le chemin d’accès et le nom du fichier dans lequel l’icône à afficher est stockée.</param>
        <param name="IconLabel"><b>Objet</b>facultatif. Si <paramref name="DisplayAsIcon" /> la <b>valeur est true</b>, cet argument représente le texte qui apparaît sous l’icône.</param>
        <summary>Insère le contenu du Presse-papiers.</summary>
        <remarks><para>Contrairement à la <see cref="M:Microsoft.Office.Interop.Word.Range.Paste" /> méthode, avec la méthode <b>PasteSpecial</b> , vous pouvez contrôler le format des informations collées et (éventuellement) établir un lien vers le fichier source (par exemple, une feuille de calcul Microsoft Excel).</para>
          <para>Si vous ne souhaitez pas remplacer le contenu de la plage spécifiée, utilisez la <see cref="M:Microsoft.Office.Interop.Word.Range.Collapse(System.Object@)" /> méthode avant d’utiliser cette méthode. Lorsque vous utilisez cette méthode, la plage ne se développe pas pour inclure le contenu du presse-papiers.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="PhoneticGuide">
      <MemberSignature Language="C#" Value="public void PhoneticGuide (string Text, Microsoft.Office.Interop.Word.WdPhoneticGuideAlignmentType Alignment = (Microsoft.Office.Interop.Word.WdPhoneticGuideAlignmentType) -1, int Raise = 0, int FontSize = 0, string FontName = &quot;&quot;);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PhoneticGuide([in]string Text, [in]valuetype Microsoft.Office.Interop.Word.WdPhoneticGuideAlignmentType Alignment, [in]int32 Raise, [in]int32 FontSize, [in]string FontName) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.Range.PhoneticGuide(System.String,Microsoft.Office.Interop.Word.WdPhoneticGuideAlignmentType,System.Int32,System.Int32,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub PhoneticGuide (Text As String, Optional Alignment As WdPhoneticGuideAlignmentType = (Microsoft.Office.Interop.Word.WdPhoneticGuideAlignmentType) -1, Optional Raise As Integer = 0, Optional FontSize As Integer = 0, Optional FontName As String = &quot;&quot;)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(224)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Text" Type="System.String" />
        <Parameter Name="Alignment" Type="Microsoft.Office.Interop.Word.WdPhoneticGuideAlignmentType" />
        <Parameter Name="Raise" Type="System.Int32" />
        <Parameter Name="FontSize" Type="System.Int32" />
        <Parameter Name="FontName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="Text">Argument de type <b>String</b> obligatoire. Texte phonétique à ajouter.</param>
        <param name="Alignment">Facultatif <see cref="T:Microsoft.Office.Interop.Word.WdPhoneticGuideAlignmentType" />. Alignement du texte phonétique ajouté.</param>
        <param name="Raise"><b>Entier</b>facultatif. Distance, exprimée en points, entre le début du texte dans la plage spécifiée et le début du texte phonétique. Si vous ne spécifiez pas cet argument, Microsoft Word place automatiquement le texte phonétique à une distance optimale de la plage définie.</param>
        <param name="FontSize"><b>Entier</b>facultatif. Taille de police à appliquer au texte phonétique. Si vous ne spécifiez pas cet argument, Word utilise une taille de police de 50 pour cent inférieure à celle employée dans le texte de la plage définie.</param>
        <param name="FontName">Argument de type <b>String</b> facultatif. Nom de la police à utiliser pour le texte phonétique. Si vous ne spécifiez pas cet argument, Word utilise la même police que pour le texte de la plage définie.</param>
        <summary>Ajoute des guides phonétiques à la plage spécifiée.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Previous">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.Range Previous (ref object Unit, ref object Count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Word.Range Previous([in]object&amp; Unit, [in]object&amp; Count) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.Range.Previous(System.Object@,System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Function Previous (Optional ByRef Unit As Object, Optional ByRef Count As Object) As Range" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(106)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.Range</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Unit" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="Count" Type="System.Object&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="Unit"><b>Objet</b>facultatif. <see cref="T:Microsoft.Office.Interop.Word.WdUnits" /></param>
        <param name="Count"><b>Objet</b>facultatif. Nombre d'unités qui représente la distance de déplacement. La valeur par défaut est 1 (un).</param>
        <summary>Renvoie un <see cref="T:Microsoft.Office.Interop.Word.Range" /> objet par rapport à la sélection ou à la plage spécifiée.</summary>
        <returns>To be added.</returns>
        <remarks><para>Si la plage se trouve juste après le <paramref name="Unit" />champ spécifié, la plage est déplacée vers l’unité précédente.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviousBookmarkID">
      <MemberSignature Language="C#" Value="public int PreviousBookmarkID { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 PreviousBookmarkID" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.Range.PreviousBookmarkID" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PreviousBookmarkID As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int PreviousBookmarkID { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(309)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(309)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Renvoie le numéro du dernier signet qui commence avant ou au même endroit que la plage spécifiée.</summary>
        <value>To be added.</value>
        <remarks><para>La propriété <b>PreviousBookmarkID,</b> renvoie 0 (zéro) s’il n’y a aucun signet correspondant.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviousSubdocument">
      <MemberSignature Language="C#" Value="public void PreviousSubdocument ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PreviousSubdocument() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.Range.PreviousSubdocument" />
      <MemberSignature Language="VB.NET" Value="Public Sub PreviousSubdocument ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void PreviousSubdocument();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(220)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Déplace la plage ou la sélection vers le sous-document précédent. S'il n'existe aucun autre sous-document, une erreur se produit.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadabilityStatistics">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.ReadabilityStatistics ReadabilityStatistics { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Word.ReadabilityStatistics ReadabilityStatistics" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.Range.ReadabilityStatistics" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ReadabilityStatistics As ReadabilityStatistics" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Word::ReadabilityStatistics ^ ReadabilityStatistics { Microsoft::Office::Interop::Word::ReadabilityStatistics ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(314)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(314)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.ReadabilityStatistics</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Renvoie une <see cref="T:Microsoft.Office.Interop.Word.ReadabilityStatistics" /> collection qui représente les statistiques de lisibilité de la plage spécifiée.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Relocate">
      <MemberSignature Language="C#" Value="public void Relocate (int Direction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Relocate([in]int32 Direction) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.Range.Relocate(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Relocate (Direction As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Relocate(int Direction);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(179)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Direction" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="Direction">Obligatoire <see cref="T:Microsoft.Office.Interop.Word.WdRelocate" />. Sens du déplacement.</param>
        <summary>En mode d'affichage Plan, déplace les paragraphes compris dans la plage spécifiée et les insère après le paragraphe visible suivant ou avant le paragraphe visible précédent.</summary>
        <remarks><para>Le corps du texte se déplace avec un en-tête uniquement si le corps de texte est réduit en mode plan ou s’il fait partie de la plage.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Revisions">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.Revisions Revisions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Word.Revisions Revisions" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.Range.Revisions" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Revisions As Revisions" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Word::Revisions ^ Revisions { Microsoft::Office::Interop::Word::Revisions ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(150)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(150)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.Revisions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Renvoie une <see cref="T:Microsoft.Office.Interop.Word.Revisions" /> collection qui représente les marques de révision dans la plage.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Rows">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.Rows Rows { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Word.Rows Rows" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.Range.Rows" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Rows As Rows" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Word::Rows ^ Rows { Microsoft::Office::Interop::Word::Rows ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(303)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(303)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.Rows</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Renvoie une <see cref="T:Microsoft.Office.Interop.Word.Rows" /> collection qui représente toutes les lignes de tableau d’une plage.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Scripts">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.Scripts Scripts { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Core.Scripts Scripts" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.Range.Scripts" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Scripts As Scripts" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::Scripts ^ Scripts { Microsoft::Office::Core::Scripts ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(325)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(325)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.Scripts</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Renvoie une <see cref="T:Microsoft.Office.Core.Scripts" /> collection qui représente la collection de scripts HTML dans l’objet spécifié.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Sections">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.Sections Sections { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Word.Sections Sections" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.Range.Sections" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Sections As Sections" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Word::Sections ^ Sections { Microsoft::Office::Interop::Word::Sections ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(58)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(58)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.Sections</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Renvoie une <see cref="T:Microsoft.Office.Interop.Word.Sections" /> collection qui représente les sections de la plage spécifiée.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Select">
      <MemberSignature Language="C#" Value="public void Select ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Select() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.Range.Select" />
      <MemberSignature Language="VB.NET" Value="Public Sub Select ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Select();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(65535)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Sélectionne l'objet spécifié.</summary>
        <remarks><para>Après avoir utilisé cette méthode, utilisez <see cref="P:Microsoft.Office.Interop.Word._Application.Selection" /> la propriété pour travailler avec les éléments sélectionnés.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Sentences">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.Sentences Sentences { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Word.Sentences Sentences" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.Range.Sentences" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Sentences As Sentences" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Word::Sentences ^ Sentences { Microsoft::Office::Interop::Word::Sentences ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(52)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(52)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.Sentences</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Renvoie une <see cref="T:Microsoft.Office.Interop.Word.Sentences" /> collection qui représente toutes les phrases de la plage.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetListLevel">
      <MemberSignature Language="C#" Value="public void SetListLevel (short Level);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetListLevel([in]int16 Level) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.Range.SetListLevel(System.Int16)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetListLevel (Level As Short)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetListLevel(short Level);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(427)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Level" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="Level"><b>Short</b> argument obligatoire nombre qui indique le nouveau niveau de liste.</param>
        <summary>Définit le niveau de liste pour un ou plusieurs éléments d'une liste numérotée.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetRange">
      <MemberSignature Language="C#" Value="public void SetRange (int Start, int End);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetRange([in]int32 Start, [in]int32 End) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.Range.SetRange(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetRange (Start As Integer, End As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetRange(int Start, int End);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(100)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Start" Type="System.Int32" />
        <Parameter Name="End" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="Start">Argument de type <b>Integer</b> obligatoire. Position du caractère de début de la plage ou de la sélection.</param>
        <param name="End">Argument de type <b>Integer</b> obligatoire. Position du caractère de fin de la plage ou de la sélection.</param>
        <summary>Définit les positions des caractères de début et de fin de la plage.</summary>
        <remarks><para>Les valeurs correspondant aux emplacements des caractères commencent au début de l'article, la première valeur étant égale à 0 (zéro). Tous les caractères sont comptés, y compris les caractères non imprimables. Les caractères masqués sont comptés même s'ils ne sont pas affichés.</para>
          <para>La <b></b> méthode SetRange redéfinit les positions de début et de fin d' <see cref="T:Microsoft.Office.Interop.Word.Range" /> un objet existant. Cette méthode diffère de la <see cref="M:Microsoft.Office.Interop.Word._Document.Range(System.Object@,System.Object@)" /> méthode utilisée pour créer une plage, en fonction de la position de début et de fin.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Shading">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.Shading Shading { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Word.Shading Shading" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.Range.Shading" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Shading As Shading" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Word::Shading ^ Shading { Microsoft::Office::Interop::Word::Shading ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(61)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(61)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.Shading</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Renvoie un <see cref="T:Microsoft.Office.Interop.Word.Shading" /> Object qui fait référence à la mise en forme de la trame de fond pour l’objet spécifié.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShapeRange">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.ShapeRange ShapeRange { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Word.ShapeRange ShapeRange" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.Range.ShapeRange" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ShapeRange As ShapeRange" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Word::ShapeRange ^ ShapeRange { Microsoft::Office::Interop::Word::ShapeRange ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(311)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(311)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.ShapeRange</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Renvoie une <see cref="T:Microsoft.Office.Interop.Word.ShapeRange" /> collection qui représente tous les <see cref="T:Microsoft.Office.Interop.Word.Shape" /> objets de la plage spécifiée.</summary>
        <value>To be added.</value>
        <remarks><para>La plage de la forme peut contenir des dessins, des formes, des images, des objets OLE, des contrôles ActiveX, des objets texte et des légendes.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowAll">
      <MemberSignature Language="C#" Value="public bool ShowAll { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowAll" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.Range.ShowAll" />
      <MemberSignature Language="VB.NET" Value="Public Property ShowAll As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShowAll { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(408)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(408)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(408)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Détermine si tous les caractères non imprimables (tels que le texte masqué, les marques de tabulation, les marques d’espace et les marques de paragraphe) sont affichés.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SmartTags">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.SmartTags SmartTags { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Word.SmartTags SmartTags" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.Range.SmartTags" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SmartTags As SmartTags" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Word::SmartTags ^ SmartTags { Microsoft::Office::Interop::Word::SmartTags ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(407)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(407)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.SmartTags</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Renvoie un <see cref="T:Microsoft.Office.Interop.Word.SmartTags" /> objet qui représente une balise active dans une plage.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Sort">
      <MemberSignature Language="C#" Value="public void Sort (ref object ExcludeHeader, ref object FieldNumber, ref object SortFieldType, ref object SortOrder, ref object FieldNumber2, ref object SortFieldType2, ref object SortOrder2, ref object FieldNumber3, ref object SortFieldType3, ref object SortOrder3, ref object SortColumn, ref object Separator, ref object CaseSensitive, ref object BidiSort, ref object IgnoreThe, ref object IgnoreKashida, ref object IgnoreDiacritics, ref object IgnoreHe, ref object LanguageID);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Sort([in]object&amp; ExcludeHeader, [in]object&amp; FieldNumber, [in]object&amp; SortFieldType, [in]object&amp; SortOrder, [in]object&amp; FieldNumber2, [in]object&amp; SortFieldType2, [in]object&amp; SortOrder2, [in]object&amp; FieldNumber3, [in]object&amp; SortFieldType3, [in]object&amp; SortOrder3, [in]object&amp; SortColumn, [in]object&amp; Separator, [in]object&amp; CaseSensitive, [in]object&amp; BidiSort, [in]object&amp; IgnoreThe, [in]object&amp; IgnoreKashida, [in]object&amp; IgnoreDiacritics, [in]object&amp; IgnoreHe, [in]object&amp; LanguageID) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.Range.Sort(System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Sort (Optional ByRef ExcludeHeader As Object, Optional ByRef FieldNumber As Object, Optional ByRef SortFieldType As Object, Optional ByRef SortOrder As Object, Optional ByRef FieldNumber2 As Object, Optional ByRef SortFieldType2 As Object, Optional ByRef SortOrder2 As Object, Optional ByRef FieldNumber3 As Object, Optional ByRef SortFieldType3 As Object, Optional ByRef SortOrder3 As Object, Optional ByRef SortColumn As Object, Optional ByRef Separator As Object, Optional ByRef CaseSensitive As Object, Optional ByRef BidiSort As Object, Optional ByRef IgnoreThe As Object, Optional ByRef IgnoreKashida As Object, Optional ByRef IgnoreDiacritics As Object, Optional ByRef IgnoreHe As Object, Optional ByRef LanguageID As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(484)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ExcludeHeader" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="FieldNumber" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="SortFieldType" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="SortOrder" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="FieldNumber2" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="SortFieldType2" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="SortOrder2" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="FieldNumber3" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="SortFieldType3" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="SortOrder3" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="SortColumn" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="Separator" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="CaseSensitive" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="BidiSort" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="IgnoreThe" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="IgnoreKashida" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="IgnoreDiacritics" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="IgnoreHe" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="LanguageID" Type="System.Object&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="ExcludeHeader"><b>Objet</b>facultatif. <b>True</b> pour exclure le premier en-tête de ligne ou de paragraphe à partir de l'opération de tri. La valeur par défaut est <b>False</b>.</param>
        <param name="FieldNumber"><b>Objet</b>facultatif. Champs de tri. Microsoft Word trie par <paramref name="FieldNumber" />, puis par <paramref name="FieldNumber2" />, puis par <paramref name="FieldNumber3" />.</param>
        <param name="SortFieldType"><b>Objet</b>facultatif. Les types de tri respectifs <paramref name="FieldNumber" />pour <paramref name="FieldNumber2" />, et <paramref name="FieldNumber3" />. Il peut s’agir de <see cref="T:Microsoft.Office.Interop.Word.WdSortFieldType" /> l’une des constantes.</param>
        <param name="SortOrder"><b>Objet</b>facultatif. L’ordre de tri à utiliser lors <paramref name="FieldNumber" />du <paramref name="FieldNumber2" />tri, <paramref name="FieldNumber3" />et. Il peut s’agir de <see cref="T:Microsoft.Office.Interop.Word.WdSortOrder" /> l’une des constantes.</param>
        <param name="FieldNumber2"><b>Objet</b>facultatif. Champs de tri. Microsoft Word trie par <paramref name="FieldNumber" />, puis par <paramref name="FieldNumber2" />, puis par<paramref name="FieldNumber3" /></param>
        <param name="SortFieldType2"><b>Objet</b>facultatif. Les types de tri respectifs <paramref name="FieldNumber" />pour <paramref name="FieldNumber2" />, et <paramref name="FieldNumber3" />. Peut être une des <see cref="T:Microsoft.Office.Interop.Word.WdSortFieldType" /> constantes</param>
        <param name="SortOrder2"><b>Objet</b>facultatif. L’ordre de tri à utiliser lors <paramref name="FieldNumber" />du <paramref name="FieldNumber2" />tri, <paramref name="FieldNumber3" />et. Il peut s’agir de <see cref="T:Microsoft.Office.Interop.Word.WdSortOrder" /> l’une des constantes.</param>
        <param name="FieldNumber3"><b>Objet</b>facultatif. Champs de tri. Microsoft Word trie par <paramref name="FieldNumber" />, puis par <paramref name="FieldNumber2" />, puis par<paramref name="FieldNumber3" /></param>
        <param name="SortFieldType3"><b>Objet</b>facultatif. Les types de tri respectifs <paramref name="FieldNumber" />pour <paramref name="FieldNumber2" />, et <paramref name="FieldNumber3" />. Peut être une des <see cref="T:Microsoft.Office.Interop.Word.WdSortFieldType" /> constantes</param>
        <param name="SortOrder3"><b>Objet</b>facultatif. L’ordre de tri à utiliser lors <paramref name="FieldNumber" />du <paramref name="FieldNumber2" />tri, <paramref name="FieldNumber3" />et. Il peut s’agir de <see cref="T:Microsoft.Office.Interop.Word.WdSortOrder" /> l’une des constantes.</param>
        <param name="SortColumn"><b>Objet</b>facultatif. <b>True</b> pour trier uniquement la colonne spécifiée par l' <see cref="T:Microsoft.Office.Interop.Word.Range" /> objet.</param>
        <param name="Separator"><b>Objet</b>facultatif. Type du séparateur de champs. Il peut s’agir de <see cref="T:Microsoft.Office.Interop.Word.WdSortSeparator" /> l’une des constantes.</param>
        <param name="CaseSensitive"><b>Objet</b>facultatif. <b>True</b> pour trier en respectant la casse. La valeur par défaut est <b>False</b>.</param>
        <param name="BidiSort"><b>Objet</b>facultatif. <b>True</b> pour trier selon les règles de langue de droite à gauche. Il se peut que cet argument ne soit pas disponible, selon la prise en charge de langue (anglais (États-Unis) par exemple) que vous avez sélectionnée ou installée.</param>
        <param name="IgnoreThe"><b>Objet</b>facultatif. <b>True</b> pour ignorer le caractère <paramref name="alef lam" /> arabe lors du tri de texte de la langue de droite à gauche. Il se peut que cet argument ne soit pas disponible, selon la prise en charge de langue (anglais (États-Unis) par exemple) que vous avez sélectionnée ou installée.</param>
        <param name="IgnoreKashida"><b>Objet</b>facultatif. <b>True</b> pour ignorer les signes kachidé lors du tri d'un texte de la langue de droite à gauche. Il se peut que cet argument ne soit pas disponible, selon la prise en charge de langue (anglais (États-Unis) par exemple) que vous avez sélectionnée ou installée.</param>
        <param name="IgnoreDiacritics"><b>Objet</b>facultatif. <b>True</b> pour ignorer les caractères de contrôle bidirectionnels lors du tri d'un texte de la langue de droite à gauche. Il se peut que cet argument ne soit pas disponible, selon la prise en charge de langue (anglais (États-Unis) par exemple) que vous avez sélectionnée ou installée.</param>
        <param name="IgnoreHe"><b>Objet</b>facultatif. <b>True</b> pour ignorer le caractère <paramref name="he" /> hébreu lors du tri de texte de langue de droite à gauche. Il se peut que cet argument ne soit pas disponible, selon la prise en charge de langue (anglais (États-Unis) par exemple) que vous avez sélectionnée ou installée.</param>
        <param name="LanguageID"><b>Objet</b>facultatif. <paramref name="LanguageIDOptional" /><b>Objet</b>. Spécifie la langue de tri. Il peut s’agir de <see cref="T:Microsoft.Office.Interop.Word.WdLanguageID" /> <b> </b>l’une des constantes.</param>
        <summary>Trie les paragraphes de la plage spécifiée.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SortAscending">
      <MemberSignature Language="C#" Value="public void SortAscending ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SortAscending() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.Range.SortAscending" />
      <MemberSignature Language="VB.NET" Value="Public Sub SortAscending ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SortAscending();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(169)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Trie des paragraphes ou des lignes de tableau par ordre alphanumérique croissant.</summary>
        <remarks><para>Le premier paragraphe ou la première ligne de tableau est considéré comme enregistrement d'en-tête et n'est pas inclus dans le tri. Utilisez la <see cref="M:Microsoft.Office.Interop.Word.Range.Sort(System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@)" /> méthode pour inclure l’enregistrement d’en-tête dans un tri.</para>
          <para>Cette méthode offre une forme simplifiée de tri destinée aux sources de données de fusion et publipostage qui contiennent des colonnes de données. Pour la plupart des tâches de tri, utilisez la méthode <b>Sort</b>.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="SortByHeadings">
      <MemberSignature Language="C#" Value="public void SortByHeadings (ref object SortFieldType, ref object SortOrder, ref object CaseSensitive, ref object BidiSort, ref object IgnoreThe, ref object IgnoreKashida, ref object IgnoreDiacritics, ref object IgnoreHe, ref object LanguageID);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SortByHeadings([in]object&amp; SortFieldType, [in]object&amp; SortOrder, [in]object&amp; CaseSensitive, [in]object&amp; BidiSort, [in]object&amp; IgnoreThe, [in]object&amp; IgnoreKashida, [in]object&amp; IgnoreDiacritics, [in]object&amp; IgnoreHe, [in]object&amp; LanguageID) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.Range.SortByHeadings(System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SortByHeadings (Optional ByRef SortFieldType As Object, Optional ByRef SortOrder As Object, Optional ByRef CaseSensitive As Object, Optional ByRef BidiSort As Object, Optional ByRef IgnoreThe As Object, Optional ByRef IgnoreKashida As Object, Optional ByRef IgnoreDiacritics As Object, Optional ByRef IgnoreHe As Object, Optional ByRef LanguageID As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(508)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="SortFieldType" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="SortOrder" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="CaseSensitive" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="BidiSort" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="IgnoreThe" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="IgnoreKashida" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="IgnoreDiacritics" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="IgnoreHe" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="LanguageID" Type="System.Object&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="SortFieldType">Type de champ de tri à utiliser. Il peut s’agir de <see cref="T:Microsoft.Office.Interop.Word.WdSortFieldType" /> l’une des constantes. <b>La valeur par défaut est.</b> En fonction de la prise en charge linguistique (anglais (États-Unis), par exemple) que vous avez sélectionnée ou installée, certaines de ces constantes ne sont peut-être pas disponibles.</param>
        <param name="SortOrder">Ordre de tri à utiliser. Il peut s’agir de <see cref="T:Microsoft.Office.Interop.Word.WdSortOrder" /> l’une des constantes.</param>
        <param name="CaseSensitive"><b>True</b> pour trier en respectant la casse. La valeur par défaut est <b>False</b>.</param>
        <param name="BidiSort"><b>True</b> pour trier selon les règles de langue de droite à gauche. En fonction de la prise en charge linguistique (anglais (États-Unis), par exemple) que vous avez sélectionnée ou installée, ce paramètre n’est peut-être pas disponible.</param>
        <param name="IgnoreThe"><b>True</b> pour ignorer le caractère arabe alef lam lors du tri de texte de la langue de droite à gauche. En fonction de la prise en charge linguistique (anglais (États-Unis), par exemple) que vous avez sélectionnée ou installée, ce paramètre n’est peut-être pas disponible.</param>
        <param name="IgnoreKashida"><b>True</b> pour ignorer les signes kachidé lors du tri d'un texte de la langue de droite à gauche. En fonction de la prise en charge linguistique (anglais (États-Unis), par exemple) que vous avez sélectionnée ou installée, ce paramètre n’est peut-être pas disponible.</param>
        <param name="IgnoreDiacritics"><b>True</b> pour ignorer les caractères de contrôle bidirectionnels lors du tri d'un texte de la langue de droite à gauche. En fonction de la prise en charge linguistique (anglais (États-Unis), par exemple) que vous avez sélectionnée ou installée, ce paramètre n’est peut-être pas disponible.</param>
        <param name="IgnoreHe"><b>True</b> pour ignorer l'hébreu caractère il lors du tri de texte de la langue de droite à gauche. En fonction de la prise en charge linguistique (anglais (États-Unis), par exemple) que vous avez sélectionnée ou installée, ce paramètre n’est peut-être pas disponible.</param>
        <param name="LanguageID">Spécifie la langue de tri. Il peut s’agir de <see cref="T:Microsoft.Office.Interop.Word.WdLanguageID" /> l’une des constantes.</param>
        <summary>Trie les en-têtes de la plage spécifiée.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SortDescending">
      <MemberSignature Language="C#" Value="public void SortDescending ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SortDescending() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.Range.SortDescending" />
      <MemberSignature Language="VB.NET" Value="Public Sub SortDescending ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SortDescending();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(170)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Trie des paragraphes ou des lignes de tableau par ordre alphanumérique décroissant.</summary>
        <remarks><para>Le premier paragraphe ou la première ligne de tableau est considéré comme enregistrement d'en-tête et n'est pas inclus dans le tri. Utilisez la <see cref="M:Microsoft.Office.Interop.Word.Range.Sort(System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@)" /> méthode pour inclure l’enregistrement d’en-tête dans un tri.</para>
          <para>Cette méthode offre une forme simplifiée de tri destinée aux sources de données de fusion et publipostage qui contiennent des colonnes de données. Pour la plupart des tâches de tri, utilisez la méthode <b>Sort</b>.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="SortOld">
      <MemberSignature Language="C#" Value="public void SortOld (ref object ExcludeHeader, ref object FieldNumber, ref object SortFieldType, ref object SortOrder, ref object FieldNumber2, ref object SortFieldType2, ref object SortOrder2, ref object FieldNumber3, ref object SortFieldType3, ref object SortOrder3, ref object SortColumn, ref object Separator, ref object CaseSensitive, ref object LanguageID);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SortOld([in]object&amp; ExcludeHeader, [in]object&amp; FieldNumber, [in]object&amp; SortFieldType, [in]object&amp; SortOrder, [in]object&amp; FieldNumber2, [in]object&amp; SortFieldType2, [in]object&amp; SortOrder2, [in]object&amp; FieldNumber3, [in]object&amp; SortFieldType3, [in]object&amp; SortOrder3, [in]object&amp; SortColumn, [in]object&amp; Separator, [in]object&amp; CaseSensitive, [in]object&amp; LanguageID) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.Range.SortOld(System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SortOld (Optional ByRef ExcludeHeader As Object, Optional ByRef FieldNumber As Object, Optional ByRef SortFieldType As Object, Optional ByRef SortOrder As Object, Optional ByRef FieldNumber2 As Object, Optional ByRef SortFieldType2 As Object, Optional ByRef SortOrder2 As Object, Optional ByRef FieldNumber3 As Object, Optional ByRef SortFieldType3 As Object, Optional ByRef SortOrder3 As Object, Optional ByRef SortColumn As Object, Optional ByRef Separator As Object, Optional ByRef CaseSensitive As Object, Optional ByRef LanguageID As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(168)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ExcludeHeader" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="FieldNumber" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="SortFieldType" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="SortOrder" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="FieldNumber2" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="SortFieldType2" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="SortOrder2" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="FieldNumber3" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="SortFieldType3" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="SortOrder3" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="SortColumn" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="Separator" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="CaseSensitive" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="LanguageID" Type="System.Object&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="ExcludeHeader">To be added.</param>
        <param name="FieldNumber">To be added.</param>
        <param name="SortFieldType">To be added.</param>
        <param name="SortOrder">To be added.</param>
        <param name="FieldNumber2">To be added.</param>
        <param name="SortFieldType2">To be added.</param>
        <param name="SortOrder2">To be added.</param>
        <param name="FieldNumber3">To be added.</param>
        <param name="SortFieldType3">To be added.</param>
        <param name="SortOrder3">To be added.</param>
        <param name="SortColumn">To be added.</param>
        <param name="Separator">To be added.</param>
        <param name="CaseSensitive">To be added.</param>
        <param name="LanguageID">To be added.</param>
        <summary>Réservé à une utilisation interne.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SpellingChecked">
      <MemberSignature Language="C#" Value="public bool SpellingChecked { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SpellingChecked" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.Range.SpellingChecked" />
      <MemberSignature Language="VB.NET" Value="Public Property SpellingChecked As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool SpellingChecked { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(261)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(261)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(261)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Détermine si l’orthographe a été vérifiée dans la plage spécifiée.</summary>
        <value>To be added.</value>
        <remarks><para>Cette propriété renvoie la <b>valeur true</b> si l’orthographe a été vérifiée dans la plage spécifiée ou le document et la <b>valeur false</b> si la totalité ou une partie de la plage ou du document n’a pas été vérifiée.</para>
          <para>Pour vérifier de nouveau l'orthographe dans une plage ou un document, définissez la propriété <b>SpellingChecked</b> sur <b>False</b>.</para>
          <para>Pour voir si la plage ou le document contient des fautes d’orthographe <see cref="P:Microsoft.Office.Interop.Word.Range.SpellingErrors" /> , utilisez la propriété.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="SpellingErrors">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.ProofreadingErrors SpellingErrors { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Word.ProofreadingErrors SpellingErrors" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.Range.SpellingErrors" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SpellingErrors As ProofreadingErrors" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Word::ProofreadingErrors ^ SpellingErrors { Microsoft::Office::Interop::Word::ProofreadingErrors ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(316)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(316)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.ProofreadingErrors</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Renvoie une <see cref="T:Microsoft.Office.Interop.Word.ProofreadingErrors" /> collection qui représente les mots identifiés comme fautes d’orthographe dans la plage spécifiée.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Start">
      <MemberSignature Language="C#" Value="public int Start { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Start" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.Range.Start" />
      <MemberSignature Language="VB.NET" Value="Public Property Start As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Start { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(3)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(3)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(3)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Cette propriété renvoie ou définit la position du caractère de début d'une plage.</summary>
        <value>To be added.</value>
        <remarks><para>Si cette propriété est définie sur une valeur supérieure à celle de la <see cref="P:Microsoft.Office.Interop.Word.Range.End" /> propriété, la propriété <b>end</b> est définie sur la même valeur que celle de la propriété <b>Start</b> .</para>
          <para>
            <see cref="T:Microsoft.Office.Interop.Word.Selection" /><see cref="T:Microsoft.Office.Interop.Word.Range" />les objets, <see cref="T:Microsoft.Office.Interop.Word.Bookmark" /> et sont dotés de positions de caractères de début et de fin. La position de départ fait référence à la position du caractère le plus proche au début de l'histoire.</para>
          <para>Cette propriété renvoie la position du caractère de début par rapport au début de l'article. L'article principal (<b>wdMainTextStory</b>) commence par la position 0 (zéro) du caractère. Vous pouvez modifier la taille d'une sélection, d'une plage ou d'un signet en configurant cette propriété.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="StartOf">
      <MemberSignature Language="C#" Value="public int StartOf (ref object Unit, ref object Extend);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 StartOf([in]object&amp; Unit, [in]object&amp; Extend) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.Range.StartOf(System.Object@,System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Function StartOf (Optional ByRef Unit As Object, Optional ByRef Extend As Object) As Integer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(107)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Unit" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="Extend" Type="System.Object&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="Unit">Facultatif <see cref="T:Microsoft.Office.Interop.Word.WdUnits" />. L'unité à laquelle la position de début de la plage spécifiée ou la sélection doit être déplacée.</param>
        <param name="Extend">Facultatif <see cref="T:Microsoft.Office.Interop.Word.WdMovementType" />.</param>
        <summary>Déplace ou étend la position de début de la plage spécifiée ou la sélection au début de l'unité de texte spécifiée le plus proche.</summary>
        <returns>To be added.</returns>
        <remarks><para>Cette méthode renvoie un <b>entier</b> qui indique le nombre de caractères par lequel la plage ou la sélection a été déplacée ou étendue. La méthode renvoie un nombre négatif si le déplacement s'effectue vers l'arrière dans le document.</para>
          <para>Cette méthode ne déplace, ni n'étend la plage ou la sélection indiquée si le début d'une de ces dernières se trouve déjà au début de l'unité spécifiée.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="StoryLength">
      <MemberSignature Language="C#" Value="public int StoryLength { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 StoryLength" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.Range.StoryLength" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property StoryLength As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int StoryLength { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(152)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(152)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Renvoie le nombre de caractères dans l'article qui contient la plage spécifiée.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StoryType">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.WdStoryType StoryType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Word.WdStoryType StoryType" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.Range.StoryType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property StoryType As WdStoryType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Word::WdStoryType StoryType { Microsoft::Office::Interop::Word::WdStoryType get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(7)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(7)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.WdStoryType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Renvoie le type d’article pour la plage spécifiée.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Style">
      <MemberSignature Language="C#" Value="public object Style { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Style" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.Range.Style" />
      <MemberSignature Language="VB.NET" Value="Public Property Style As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Style { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(151)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(151)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(151)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Cette propriété renvoie ou définit le style de l'objet spécifié.</summary>
        <value>To be added.</value>
        <remarks><para>Pour définir cette propriété, spécifiez le nom local du style, un entier, une <see cref="T:Microsoft.Office.Interop.Word.WdBuiltinStyle" /> constante ou un objet qui représente le style.</para>
          <para>Si la plage concernée comporte plusieurs styles, seul le style du premier caractère ou du premier paragraphe est renvoyé.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Subdocuments">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.Subdocuments Subdocuments { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Word.Subdocuments Subdocuments" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.Range.Subdocuments" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Subdocuments As Subdocuments" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Word::Subdocuments ^ Subdocuments { Microsoft::Office::Interop::Word::Subdocuments ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(159)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(159)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.Subdocuments</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Renvoie une <see cref="T:Microsoft.Office.Interop.Word.Subdocuments" /> collection qui représente tous les sous-documents de la plage spécifiée.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SubscribeTo">
      <MemberSignature Language="C#" Value="public void SubscribeTo (string Edition, ref object Format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SubscribeTo([in]string Edition, [in]object&amp; Format) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.Range.SubscribeTo(System.String,System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SubscribeTo (Edition As String, Optional ByRef Format As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(181)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Edition" Type="System.String" />
        <Parameter Name="Format" Type="System.Object&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="Edition">Ce paramètre est destiné à Macintosh uniquement et ne doit pas être utilisé.</param>
        <param name="Format">Ce paramètre est destiné à Macintosh uniquement et ne doit pas être utilisé.</param>
        <summary>Réservé à un usage interne. Ce membre est pour Macintosh uniquement et ne doit pas être utilisé.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SynonymInfo">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.SynonymInfo SynonymInfo { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Word.SynonymInfo SynonymInfo" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.Range.SynonymInfo" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SynonymInfo As SynonymInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Word::SynonymInfo ^ SynonymInfo { Microsoft::Office::Interop::Word::SynonymInfo ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(155)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(155)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.SynonymInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Renvoie un <see cref="T:Microsoft.Office.Interop.Word.SynonymInfo" /> objet qui contient des informations du dictionnaire des synonymes sur les synonymes, les antonymes ou les mots et les expressions apparentés pour la phrase ou le mot spécifié.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Tables">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.Tables Tables { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Word.Tables Tables" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.Range.Tables" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Tables As Tables" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Word::Tables ^ Tables { Microsoft::Office::Interop::Word::Tables ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(50)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(50)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.Tables</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Renvoie une <see cref="T:Microsoft.Office.Interop.Word.Tables" /> collection qui représente toutes les tables de la plage spécifiée.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TableStyle">
      <MemberSignature Language="C#" Value="public object TableStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object TableStyle" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.Range.TableStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TableStyle As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ TableStyle { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(423)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(423)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Renvoie un <b>Object</b> qui représente le style utilisé pour mettre en forme un tableau. En lecture seule.</summary>
        <value><b>Object</b></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TCSCConverter">
      <MemberSignature Language="C#" Value="public void TCSCConverter (Microsoft.Office.Interop.Word.WdTCSCConverterDirection WdTCSCConverterDirection = Microsoft.Office.Interop.Word.WdTCSCConverterDirection.wdTCSCConverterDirectionAuto, bool CommonTerms = false, bool UseVariants = false);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void TCSCConverter([in]valuetype Microsoft.Office.Interop.Word.WdTCSCConverterDirection WdTCSCConverterDirection, [in]bool CommonTerms, [in]bool UseVariants) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.Range.TCSCConverter(Microsoft.Office.Interop.Word.WdTCSCConverterDirection,System.Boolean,System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(499)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="WdTCSCConverterDirection" Type="Microsoft.Office.Interop.Word.WdTCSCConverterDirection" />
        <Parameter Name="CommonTerms" Type="System.Boolean" />
        <Parameter Name="UseVariants" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="WdTCSCConverterDirection">Facultatif <see cref="T:Microsoft.Office.Interop.Word.WdTCSCConverterDirection" />.</param>
        <param name="CommonTerms">Facultatif <b>Boolean</b>. La <b>valeur true</b> si Microsoft Word convertit les expressions communes intactes au lieu de les convertir caractère par caractère.</param>
        <param name="UseVariants">Facultatif <b>Boolean</b>. <b>La valeur true</b> si Word utilise les variantes des caractères de Taïwan, Hong Kong (r.a.s.) et Macao (r.a.s.). Peut uniquement être utilisé lors de la conversion du chinois simplifié en chinois traditionnel.</param>
        <summary>Convertit la plage spécifiée du chinois traditionnel en chinois simplifié et inversement.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Text">
      <MemberSignature Language="C#" Value="public string this { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Text" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.Range.Text" />
      <MemberSignature Language="VB.NET" Value="Default Public Property Text As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ default { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Cette propriété renvoie ou définit le texte de la plage spécifiée.</summary>
        <value>To be added.</value>
        <remarks><para>La propriété <b>Text</b> renvoie le texte brut sans mise en forme de la sélection ou la plage. Lorsque vous définissez cette propriété, le texte de la plage ou la sélection est remplacé.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="TextRetrievalMode">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.TextRetrievalMode TextRetrievalMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Word.TextRetrievalMode TextRetrievalMode" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.Range.TextRetrievalMode" />
      <MemberSignature Language="VB.NET" Value="Public Property TextRetrievalMode As TextRetrievalMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Word::TextRetrievalMode ^ TextRetrievalMode { Microsoft::Office::Interop::Word::TextRetrievalMode ^ get(); void set(Microsoft::Office::Interop::Word::TextRetrievalMode ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(62)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(62)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(62)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.TextRetrievalMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Renvoie un <see cref="T:Microsoft.Office.Interop.Word.TextRetrievalMode" /> objet qui contrôle la manière dont le texte est extrait de la plage spécifiée.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TextVisibleOnScreen">
      <MemberSignature Language="C#" Value="public int TextVisibleOnScreen { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 TextVisibleOnScreen" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.Range.TextVisibleOnScreen" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TextVisibleOnScreen As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int TextVisibleOnScreen { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(507)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(507)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Renvoie un <b>entier</b> (<b>int</b> en C#) qui indique si le texte de la plage spécifiée est visible à l’écran. En lecture seule.</summary>
        <value>To be added.</value>
        <remarks><para>La propriété <b>TextVisibleOnScreen</b> renvoie 1 si tout le texte de la plage est visible; elle renvoie la valeur 0 si aucun texte de la plage n’est visible; elle renvoie-1 si le texte de la plage est visible et que d’autres ne le sont pas. Le texte qui n’est pas visible peut être, par exemple, du texte qui se trouve dans un en-tête réduit.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="TopLevelTables">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.Tables TopLevelTables { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Word.Tables TopLevelTables" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.Range.TopLevelTables" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TopLevelTables As Tables" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Word::Tables ^ TopLevelTables { Microsoft::Office::Interop::Word::Tables ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(324)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(324)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.Tables</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Renvoie une <see cref="T:Microsoft.Office.Interop.Word.Tables" /> collection qui représente les tableaux dont le niveau d’imbrication est le plus à l’extérieur de la plage actuelle.</summary>
        <value>To be added.</value>
        <remarks><para>Cette méthode renvoie une collection contenant uniquement les tableaux dont le niveau d’imbrication est le plus à l’extérieur dans le contexte de la plage ou de la sélection actuelle. Ces tableaux peuvent toutefois ne pas se trouver au niveau le plus à l'extérieur par rapport à l'ensemble des tableaux imbriqués.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="TwoLinesInOne">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.WdTwoLinesInOneType TwoLinesInOne { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Word.WdTwoLinesInOneType TwoLinesInOne" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.Range.TwoLinesInOne" />
      <MemberSignature Language="VB.NET" Value="Public Property TwoLinesInOne As WdTwoLinesInOneType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Word::WdTwoLinesInOneType TwoLinesInOne { Microsoft::Office::Interop::Word::WdTwoLinesInOneType get(); void set(Microsoft::Office::Interop::Word::WdTwoLinesInOneType value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(266)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(266)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(266)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.WdTwoLinesInOneType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Cette propriété renvoie ou définit si Microsoft Word définit deux lignes de texte dans un et spécifie les caractères qui entourent le texte, le cas échéant.</summary>
        <value>To be added.</value>
        <remarks><para>Si la propriété <b>TwoLinesInOne</b> <b>wdTwoLinesInOneNoBrackets</b> définit deux lignes de texte en une seule sans le texte dans n'importe quel caractère. Si la propriété <b>TwoLinesInOne</b> <b>wdTwoLinesInOneNone</b> restaure une ligne de texte combiné en deux lignes distinctes.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Underline">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.WdUnderline Underline { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Word.WdUnderline Underline" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.Range.Underline" />
      <MemberSignature Language="VB.NET" Value="Public Property Underline As WdUnderline" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Word::WdUnderline Underline { Microsoft::Office::Interop::Word::WdUnderline get(); void set(Microsoft::Office::Interop::Word::WdUnderline value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(139)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(139)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(139)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.WdUnderline</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Cette propriété renvoie ou définit le type de soulignement appliqué à la plage.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Updates">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.CoAuthUpdates Updates { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Word.CoAuthUpdates Updates" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.Range.Updates" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Updates As CoAuthUpdates" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Word::CoAuthUpdates ^ Updates { Microsoft::Office::Interop::Word::CoAuthUpdates ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(505)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(505)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.CoAuthUpdates</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient un <see cref="T:Microsoft.Office.Interop.Word.CoAuthUpdates" /> objet de collection qui représente toutes les mises à jour disponibles dans la plage.</summary>
        <value>Objet <see cref="T:Microsoft.Office.Interop.Word.CoAuthUpdates" /> de collection qui représente toutes les mises à jour disponibles dans la plage.</value>
        <remarks><para>En lecture seule. Utilisez cette propriété pour renvoyer la <see cref="T:Microsoft.Office.Interop.Word.CoAuthUpdates" /> collection.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="WholeStory">
      <MemberSignature Language="C#" Value="public void WholeStory ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WholeStory() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.Range.WholeStory" />
      <MemberSignature Language="VB.NET" Value="Public Sub WholeStory ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WholeStory();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(128)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Développe une plage afin qu'elle contienne l'intégralité de l'article principal.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WordOpenXML">
      <MemberSignature Language="C#" Value="public string WordOpenXML { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string WordOpenXML" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.Range.WordOpenXML" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property WordOpenXML As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ WordOpenXML { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(426)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(426)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Renvoie une <b>valeur de type String</b> qui représente les données XML contenues dans la plage au format Open XML de Microsoft Office Word. En lecture seule.</summary>
        <value><b>String</b></value>
        <remarks><para>Cette propriété renvoie uniquement les données XML du document nécessaires pour représenter la plage spécifiée.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Words">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.Words Words { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Word.Words Words" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.Range.Words" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Words As Words" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Word::Words ^ Words { Microsoft::Office::Interop::Word::Words ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(51)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(51)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.Words</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Renvoie une <see cref="T:Microsoft.Office.Interop.Word.Words" /> collection qui représente tous les mots dans une plage.</summary>
        <value>To be added.</value>
        <remarks><para>Les marques de ponctuation et de paragraphe dans un document sont incluses dans la collection <b>Words</b>.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="XML">
      <MemberSignature Language="C#" Value="public string XML[bool DataOnly = false] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string XML(bool)" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.Range.XML(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property XML(Optional DataOnly As Boolean = false) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ XML[bool] { System::String ^ get(bool DataOnly); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(344)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(344)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="DataOnly" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="DataOnly">Facultatif <b>Boolean</b>. <b>La valeur True</b> renvoie le texte du XML sans le balisage XML de Word. Le paramètre par défaut est <b>False</b>.</param>
        <summary>Renvoie une <b>chaîne</b> qui représente le texte XML dans l'objet spécifié.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="XMLNodes">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.XMLNodes XMLNodes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Word.XMLNodes XMLNodes" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.Range.XMLNodes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property XMLNodes As XMLNodes" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Word::XMLNodes ^ XMLNodes { Microsoft::Office::Interop::Word::XMLNodes ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(340)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(340)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.XMLNodes</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Cet objet, ce membre ou cette énumération est déconseillé et n’est pas destiné à être utilisé dans votre code.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="XMLParentNode">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.XMLNode XMLParentNode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Word.XMLNode XMLParentNode" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.Range.XMLParentNode" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property XMLParentNode As XMLNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Word::XMLNode ^ XMLParentNode { Microsoft::Office::Interop::Word::XMLNode ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(341)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(341)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.XMLNode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Cet objet, ce membre ou cette énumération est déconseillé et n’est pas destiné à être utilisé dans votre code.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>