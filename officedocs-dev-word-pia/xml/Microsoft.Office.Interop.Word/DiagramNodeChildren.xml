<Type Name="DiagramNodeChildren" FullName="Microsoft.Office.Interop.Word.DiagramNodeChildren">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="4320acfa18b50f692a11a011ff3c369f44d39933" />
    <Meta Name="ms.sourcegitcommit" Value="9a6162e1f2c2145e95970c1fdb1ddcac1366d42f" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="07/19/2018" />
    <Meta Name="ms.locfileid" Value="20667567" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface DiagramNodeChildren : System.Collections.IEnumerable" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract DiagramNodeChildren implements class System.Collections.IEnumerable" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Office.Interop.Word.DiagramNodeChildren" />
  <TypeSignature Language="VB.NET" Value="Public Interface DiagramNodeChildren&#xA;Implements IEnumerable" />
  <TypeSignature Language="C++ CLI" Value="public interface class DiagramNodeChildren : System::Collections::IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
    <AssemblyVersion>15.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("000209EA-0000-0000-C000-000000000046")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.TypeLibType(4304)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="b56f0-101">Collection d’objets <b>DiagramNode</b> représentant les nœuds enfants dans un diagramme.</span>
      <span class="sxs-lookup">
        <span data-stu-id="b56f0-101">A collection of <b>DiagramNode</b> objects that represents the child nodes in a diagram.</span>
      </span>
    </summary>
    <remarks>
      <span data-ttu-id="b56f0-102">
        <para>Utiliser le <see cref="P:Microsoft.Office.Interop.Word.DiagramNode.Children" /> propriété permet de renvoyer les nœuds dans une collection <b>DiagramNodeChildren</b> . Utiliser le <see cref="P:Microsoft.Office.Interop.Word.DiagramNodeChildren.FirstChild" /> propriété pour accéder au premier nœud enfant dans un diagramme.</para>
        <para />
      </span>
      <span class="sxs-lookup">
        <span data-stu-id="b56f0-102">
          <para>Use the <see cref="P:Microsoft.Office.Interop.Word.DiagramNode.Children" /> property to return the nodes in a <b>DiagramNodeChildren</b> collection. Use the <see cref="P:Microsoft.Office.Interop.Word.DiagramNodeChildren.FirstChild" /> property to access the first child node in a diagram.</para>
          <para />
        </span>
      </span>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="AddNode">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.DiagramNode AddNode (ref object Index = -1, Microsoft.Office.Core.MsoDiagramNodeType NodeType = Microsoft.Office.Core.MsoDiagramNodeType.msoDiagramNode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Word.DiagramNode AddNode([in]object&amp; Index, [in]valuetype Microsoft.Office.Core.MsoDiagramNodeType NodeType) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.DiagramNodeChildren.AddNode(System.Object@,Microsoft.Office.Core.MsoDiagramNodeType)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddNode (Optional ByRef Index As Object = -1, Optional NodeType As MsoDiagramNodeType = Microsoft.Office.Core.MsoDiagramNodeType.msoDiagramNode) As DiagramNode" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(10)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.DiagramNode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="NodeType" Type="Microsoft.Office.Core.MsoDiagramNodeType" />
      </Parameters>
      <Docs>
        <param name="Index">
          <span data-ttu-id="b56f0-103">Facultatif <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b56f0-103">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="b56f0-104">L’emplacement d’index où ajouter le nouveau nœud de diagramme : 0 = avant tous les nœuds, -1 = après tous les nœuds et n’importe quelle autre <paramref name="Index" /> nombre ajoutera après ce nœud dans la collection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b56f0-104">The index location of where to add the new diagram node: 0 adds before all nodes, -1 adds after all nodes, and any other <paramref name="Index" /> number will add after that node in the collection.</span>
          </span>
        </param>
        <param name="NodeType">
          <span data-ttu-id="b56f0-105">Facultatif <see cref="T:Microsoft.Office.Core.MsoDiagramNodeType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b56f0-105">Optional <see cref="T:Microsoft.Office.Core.MsoDiagramNodeType" />.</span>
          </span>
          <span data-ttu-id="b56f0-106">Spécifie le type de nœud.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b56f0-106">Specifies the node type.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b56f0-107">Ajoute un <see cref="T:Microsoft.Office.Interop.Word.DiagramNode" /> objet à une collection de nœuds de diagramme enfants.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b56f0-107">Adds a <see cref="T:Microsoft.Office.Interop.Word.DiagramNode" /> object to a collection of child diagram nodes.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Application">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.Application Application { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Word.Application Application" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.DiagramNodeChildren.Application" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Application As Application" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Word::Application ^ Application { Microsoft::Office::Interop::Word::Application ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1000)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1000)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.Application</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b56f0-108">Renvoie un <see cref="T:Microsoft.Office.Interop.Word.Application" /> object qui représente l’application Microsoft Word.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b56f0-108">Returns a <see cref="T:Microsoft.Office.Interop.Word.Application" /> object that represents the Microsoft Word application.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.DiagramNodeChildren.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(101)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(101)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b56f0-109">Renvoie le nombre d’éléments dans la collection spécifiée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b56f0-109">Returns the number of items in the specified collection.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Creator">
      <MemberSignature Language="C#" Value="public int Creator { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Creator" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.DiagramNodeChildren.Creator" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Creator As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Creator { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1001)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1001)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b56f0-110">Renvoie un entier 32 bits qui indique l'application dans laquelle l'objet spécifié a été créé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b56f0-110">Returns a 32-bit integer that indicates the application in which the specified object was created.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="b56f0-111">
            <para>Par exemple, si l’objet a été créé dans Microsoft Word, cette propriété renvoie le nombre hexadécimal 4D535744, qui représente la chaîne « MSWD ». Cette valeur peut également être représentée par la constante <b>wdCreatorCode</b>.</para>
            <para>Le <b>créateur</b> de la propriété est principalement conçue pour être utilisée sur Macintosh, où chaque application possède un code de créateur de quatre caractères. Par exemple, Microsoft Word a le code créateur MSWD. Pour plus d’informations sur cette propriété, consultez la référence du langage aide incluse avec Microsoft Office Édition Macintosh.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="b56f0-111">
              <para>For example, if the object was created in Microsoft Word, this property returns the hexadecimal number 4D535744, which represents the string "MSWD." This value can also be represented by the constant <b>wdCreatorCode</b>.</para>
              <para>The <b>Creator</b> property was primarily designed to be used on the Macintosh, where each application has a four-character creator code. For example, Microsoft Word has the creator code MSWD. For additional information about this property, consult the language reference Help included with Microsoft Office Macintosh Edition.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FirstChild">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.DiagramNode FirstChild { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Word.DiagramNode FirstChild" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.DiagramNodeChildren.FirstChild" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FirstChild As DiagramNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Word::DiagramNode ^ FirstChild { Microsoft::Office::Interop::Word::DiagramNode ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(103)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(103)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.DiagramNode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b56f0-112">Renvoie un <see cref="T:Microsoft.Office.Interop.Word.DiagramNode" /> object qui représente le premier nœud enfant d’un nœud parent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b56f0-112">Returns a <see cref="T:Microsoft.Office.Interop.Word.DiagramNode" /> object that represents the first child node of a parent node.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="b56f0-113">
            <para>Utiliser le <see cref="P:Microsoft.Office.Interop.Word.DiagramNodeChildren.LastChild" /> propriété pour accéder au dernier nœud enfant. Utiliser le <see cref="P:Microsoft.Office.Interop.Word.DiagramNode.Root" /> propriété pour accéder au nœud parent dans un diagramme.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="b56f0-113">
              <para>Use the <see cref="P:Microsoft.Office.Interop.Word.DiagramNodeChildren.LastChild" /> property to access the last child node. Use the <see cref="P:Microsoft.Office.Interop.Word.DiagramNode.Root" /> property to access the parent node in a diagram.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IEnumerator GetEnumerator() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.DiagramNodeChildren.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::IEnumerator ^ GetEnumerator();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(-4)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.DiagramNode this[ref object Index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Word.DiagramNode Item(object)" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.DiagramNodeChildren.Item(System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property Item(ByRef Index As Object) As DiagramNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Word::DiagramNode ^ default[System::Object ^ %] { Microsoft::Office::Interop::Word::DiagramNode ^ get(System::Object ^ % Index); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.DiagramNode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="Index">
          <span data-ttu-id="b56f0-114">
            <b>Objet</b> indiquant la position ordinale ou une chaîne représentant le nom de l’objet spécifique.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b56f0-114">An <b>Object</b> indicating the ordinal position or a string representing the name of the individual object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b56f0-115">Renvoie un objet spécifique appartenant à une collection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b56f0-115">Returns an individual object in a collection.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LastChild">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.DiagramNode LastChild { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Word.DiagramNode LastChild" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.DiagramNodeChildren.LastChild" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LastChild As DiagramNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Word::DiagramNode ^ LastChild { Microsoft::Office::Interop::Word::DiagramNode ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(104)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(104)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.DiagramNode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b56f0-116">Renvoie un <see cref="T:Microsoft.Office.Interop.Word.DiagramNode" /> object qui représente le dernier nœud enfant d’un nœud parent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b56f0-116">Returns a <see cref="T:Microsoft.Office.Interop.Word.DiagramNode" /> object that represents the last child node of a parent node.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="b56f0-117">
            <para>Utiliser le <see cref="P:Microsoft.Office.Interop.Word.DiagramNodeChildren.FirstChild" /> propriété pour accéder au premier nœud enfant dans un diagramme. Utiliser le <see cref="P:Microsoft.Office.Interop.Word.DiagramNode.Root" /> propriété pour accéder au nœud parent dans un diagramme.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="b56f0-117">
              <para>Use the <see cref="P:Microsoft.Office.Interop.Word.DiagramNodeChildren.FirstChild" /> property to access the first child node in a diagram. Use the <see cref="P:Microsoft.Office.Interop.Word.DiagramNode.Root" /> property to access the parent node in a diagram.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public object Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Parent" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.DiagramNodeChildren.Parent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parent As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Parent { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(100)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(100)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b56f0-118">Cette propriété renvoie un objet qui représente l'objet parent de l'objet spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b56f0-118">Returns an object that represents the parent object of the specified object.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectAll">
      <MemberSignature Language="C#" Value="public void SelectAll ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SelectAll() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.DiagramNodeChildren.SelectAll" />
      <MemberSignature Language="VB.NET" Value="Public Sub SelectAll ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SelectAll();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(11)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="b56f0-119">Sélectionne toutes les formes dans l’article principal, dans une zone de dessin ou dans les en-têtes et pieds de page d’un document.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b56f0-119">Selects all the shapes in the main story, in a canvas, or in headers and footers of a document.</span>
          </span>
        </summary>
        <remarks>
          <span data-ttu-id="b56f0-120">
            <para>Cette méthode ne sélectionne pas <see cref="T:Microsoft.Office.Interop.Word.InlineShape" /> objets.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="b56f0-120">
              <para>This method doesn't select <see cref="T:Microsoft.Office.Interop.Word.InlineShape" /> objects.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>