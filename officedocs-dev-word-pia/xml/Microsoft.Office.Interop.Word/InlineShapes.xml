<Type Name="InlineShapes" FullName="Microsoft.Office.Interop.Word.InlineShapes">
  <Metadata><Meta Name="ms.openlocfilehash" Value="aa8c3664525fcb2c6215fd6210c3121b6230479d" /><Meta Name="ms.sourcegitcommit" Value="655244c9d9a99d41d118f4fa57b5d74d46c410d7" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="fr-FR" /><Meta Name="ms.lasthandoff" Value="06/03/2020" /><Meta Name="ms.locfileid" Value="43923940" /></Metadata><TypeSignature Language="C#" Value="public interface InlineShapes : System.Collections.IEnumerable" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract InlineShapes implements class System.Collections.IEnumerable" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Office.Interop.Word.InlineShapes" />
  <TypeSignature Language="VB.NET" Value="Public Interface InlineShapes&#xA;Implements IEnumerable" />
  <TypeSignature Language="C++ CLI" Value="public interface class InlineShapes : System::Collections::IEnumerable" />
  <TypeSignature Language="F#" Value="type InlineShapes = interface&#xA;    interface IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
    <AssemblyVersion>15.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("000209A9-0000-0000-C000-000000000046")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.TypeLibType(4288)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="0c2e6-101">Collection d' <see cref="T:Microsoft.Office.Interop.Word.InlineShape" /> objets qui représente toutes les formes insérées d’un document, d’une plage ou d’une sélection.</span><span class="sxs-lookup"><span data-stu-id="0c2e6-101">A collection of <see cref="T:Microsoft.Office.Interop.Word.InlineShape" /> objects that represent all the inline shapes in a document, range, or selection.</span></span></summary>
    <remarks><para><span data-ttu-id="0c2e6-102">Utilisez la propriété <b>InlineShapes</b> d’un <see cref="T:Microsoft.Office.Interop.Word._Document" /> <see cref="T:Microsoft.Office.Interop.Word.Range" /> objet, ou <see cref="T:Microsoft.Office.Interop.Word.Selection" /> pour renvoyer une <see cref="T:Microsoft.Office.Interop.Word.InlineShapes" /> collection.</span><span class="sxs-lookup"><span data-stu-id="0c2e6-102">Use the <b>InlineShapes</b> property of a <see cref="T:Microsoft.Office.Interop.Word._Document" />, <see cref="T:Microsoft.Office.Interop.Word.Range" />, or <see cref="T:Microsoft.Office.Interop.Word.Selection" /> object to return an <see cref="T:Microsoft.Office.Interop.Word.InlineShapes" /> collection.</span></span></para>
      <para><span data-ttu-id="0c2e6-103">Utilisez la <see cref="M:Microsoft.Office.Interop.Word.InlineShapes.New(Microsoft.Office.Interop.Word.Range)" /> méthode pour créer une nouvelle image en tant que forme insérée.</span><span class="sxs-lookup"><span data-stu-id="0c2e6-103">Use the <see cref="M:Microsoft.Office.Interop.Word.InlineShapes.New(Microsoft.Office.Interop.Word.Range)" /> method to create a new picture as an inline shape.</span></span> <span data-ttu-id="0c2e6-104">Vous pouvez utiliser les <see cref="M:Microsoft.Office.Interop.Word.InlineShapes.AddPicture(System.String,System.Object@,System.Object@,System.Object@)" /> <see cref="M:Microsoft.Office.Interop.Word.InlineShapes.AddOLEObject(System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@)" /> méthodes et pour ajouter des images ou des objets OLE et les lier à un fichier source.</span><span class="sxs-lookup"><span data-stu-id="0c2e6-104">You can use the <see cref="M:Microsoft.Office.Interop.Word.InlineShapes.AddPicture(System.String,System.Object@,System.Object@,System.Object@)" /> and <see cref="M:Microsoft.Office.Interop.Word.InlineShapes.AddOLEObject(System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@)" /> methods to add pictures or OLE objects and link them to a source file.</span></span> <span data-ttu-id="0c2e6-105">Utilisez la <see cref="M:Microsoft.Office.Interop.Word.InlineShapes.AddOLEControl(System.Object@,System.Object@)" /> méthode pour ajouter un contrôle ActiveX.</span><span class="sxs-lookup"><span data-stu-id="0c2e6-105">Use the <see cref="M:Microsoft.Office.Interop.Word.InlineShapes.AddOLEControl(System.Object@,System.Object@)" /> method to add an ActiveX control.</span></span></para>
      <para><span data-ttu-id="0c2e6-106">
        <see cref="T:Microsoft.Office.Interop.Word.Shape" />les objets sont ancrés à une plage de texte mais sont flottants et peuvent être placés n’importe où sur la page.</span><span class="sxs-lookup"><span data-stu-id="0c2e6-106">
        <see cref="T:Microsoft.Office.Interop.Word.Shape" /> objects are anchored to a range of text but are free-floating and can be positioned anywhere on the page.</span></span> <span data-ttu-id="0c2e6-107">Vous pouvez utiliser la <see cref="M:Microsoft.Office.Interop.Word.Shape.ConvertToInlineShape" /> méthode et la <see cref="M:Microsoft.Office.Interop.Word.InlineShape.ConvertToShape" /> méthode pour convertir des formes d’un type à l’autre.</span><span class="sxs-lookup"><span data-stu-id="0c2e6-107">You can use the <see cref="M:Microsoft.Office.Interop.Word.Shape.ConvertToInlineShape" /> method and the <see cref="M:Microsoft.Office.Interop.Word.InlineShape.ConvertToShape" /> method to convert shapes from one type to the other.</span></span> <span data-ttu-id="0c2e6-108">Seuls les objets OLE, les images et les contrôles ActiveX peuvent être convertis en formes insérées.</span><span class="sxs-lookup"><span data-stu-id="0c2e6-108">You can convert only pictures, OLE objects, and ActiveX controls to inline shapes.</span></span></para>
      <para><span data-ttu-id="0c2e6-109">La <see cref="P:Microsoft.Office.Interop.Word.InlineShapes.Count" /> propriété de cette collection dans un document renvoie le nombre d’éléments dans l’article principal uniquement.</span><span class="sxs-lookup"><span data-stu-id="0c2e6-109">The <see cref="P:Microsoft.Office.Interop.Word.InlineShapes.Count" /> property for this collection in a document returns the number of items in the main story only.</span></span> <span data-ttu-id="0c2e6-110">Pour compter les éléments d’autres articles, utilisez la collection avec l' <see cref="T:Microsoft.Office.Interop.Word.Range" /> objet.</span><span class="sxs-lookup"><span data-stu-id="0c2e6-110">To count items in other stories use the collection with the <see cref="T:Microsoft.Office.Interop.Word.Range" /> object.</span></span></para>
      <para><span data-ttu-id="0c2e6-111">Lorsque vous ouvrez un document créé dans une version antérieure de Microsoft Word, les images sont converties en formes insérées.</span><span class="sxs-lookup"><span data-stu-id="0c2e6-111">When you open a document created in an earlier version of Microsoft Word, pictures are converted to inline shapes.</span></span></para>
      <para> </para></remarks>
  </Docs>
  <Members>
    <Member MemberName="AddChart">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.InlineShape AddChart (Microsoft.Office.Core.XlChartType Type = (Microsoft.Office.Core.XlChartType) -1, ref object Range);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Word.InlineShape AddChart([in]valuetype Microsoft.Office.Core.XlChartType Type, [in]object&amp; Range) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.InlineShapes.AddChart(Microsoft.Office.Core.XlChartType,System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddChart (Optional Type As XlChartType = (Microsoft.Office.Core.XlChartType) -1, Optional ByRef Range As Object) As InlineShape" />
      <MemberSignature Language="F#" Value="abstract member AddChart : Microsoft.Office.Core.XlChartType * obj -&gt; Microsoft.Office.Interop.Word.InlineShape" Usage="inlineShapes.AddChart (Type, Range)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(107)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.InlineShape</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Type" Type="Microsoft.Office.Core.XlChartType" />
        <Parameter Name="Range" Type="System.Object" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="Type">To be added.</param>
        <param name="Range">To be added.</param>
        <summary><span data-ttu-id="0c2e6-112">Cet objet, ce membre ou cette énumération est déconseillé et n’est pas destiné à être utilisé dans votre code.</span><span class="sxs-lookup"><span data-stu-id="0c2e6-112">This object, member, or enumeration is deprecated and is not intended to be used in your code.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddChart2">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.InlineShape AddChart2 (int Style = -1, Microsoft.Office.Core.XlChartType Type = (Microsoft.Office.Core.XlChartType) -1, ref object Range, ref object NewLayout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Word.InlineShape AddChart2([in]int32 Style, [in]valuetype Microsoft.Office.Core.XlChartType Type, [in]object&amp; Range, [in]object&amp; NewLayout) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.InlineShapes.AddChart2(System.Int32,Microsoft.Office.Core.XlChartType,System.Object@,System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddChart2 (Optional Style As Integer = -1, Optional Type As XlChartType = (Microsoft.Office.Core.XlChartType) -1, Optional ByRef Range As Object, Optional ByRef NewLayout As Object) As InlineShape" />
      <MemberSignature Language="F#" Value="abstract member AddChart2 : int * Microsoft.Office.Core.XlChartType * obj * obj -&gt; Microsoft.Office.Interop.Word.InlineShape" Usage="inlineShapes.AddChart2 (Style, Type, Range, NewLayout)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(110)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.InlineShape</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Style" Type="System.Int32" />
        <Parameter Name="Type" Type="Microsoft.Office.Core.XlChartType" />
        <Parameter Name="Range" Type="System.Object" RefType="ref" />
        <Parameter Name="NewLayout" Type="System.Object" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="Style"><span data-ttu-id="0c2e6-113">Style du graphique.</span><span class="sxs-lookup"><span data-stu-id="0c2e6-113">The chart style.</span></span></param>
        <param name="Type"><span data-ttu-id="0c2e6-114">Type du graphique</span><span class="sxs-lookup"><span data-stu-id="0c2e6-114">The type of chart.</span></span></param>
        <param name="Range"><span data-ttu-id="0c2e6-115">Plage dans laquelle le graphique est placé dans le texte.</span><span class="sxs-lookup"><span data-stu-id="0c2e6-115">The range where the chart will be placed in the text.</span></span> <span data-ttu-id="0c2e6-116">Le graphique remplace la plage, sauf si la plage est réduite.</span><span class="sxs-lookup"><span data-stu-id="0c2e6-116">The chart replaces the range, unless the range is collapsed.</span></span> <span data-ttu-id="0c2e6-117">Si vous ne spécifiez pas cet argument, le graphique est placé automatiquement.</span><span class="sxs-lookup"><span data-stu-id="0c2e6-117">If this argument is omitted, the chart is placed automatically.</span></span></param>
        <param name="NewLayout"><span data-ttu-id="0c2e6-118">Si <paramref name="NewLayout" /> la valeur est true, le graphique est inséré en utilisant les nouvelles règles de mise en forme dynamique (le titre est activé et légende est activé uniquement s’il y a plusieurs séries).</span><span class="sxs-lookup"><span data-stu-id="0c2e6-118">If <paramref name="NewLayout" /> is true, the chart is inserted by using the new dynamic formatting rules (Title is on, and Legend is on only if there are multiple series).</span></span></param>
        <summary><span data-ttu-id="0c2e6-119">Ajoute un graphique au document.</span><span class="sxs-lookup"><span data-stu-id="0c2e6-119">Adds a chart to the document.</span></span> <span data-ttu-id="0c2e6-120">Renvoie un <see cref="T:Microsoft.Office.Interop.Word.InlineShape" /> Object qui représente le graphique et l’ajoute à la collection spécifiée.</span><span class="sxs-lookup"><span data-stu-id="0c2e6-120">Returns an <see cref="T:Microsoft.Office.Interop.Word.InlineShape" /> object that represents the chart and adds it to the specified collection.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddHorizontalLine">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.InlineShape AddHorizontalLine (string FileName, ref object Range);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Word.InlineShape AddHorizontalLine([in]string FileName, [in]object&amp; Range) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.InlineShapes.AddHorizontalLine(System.String,System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddHorizontalLine (FileName As String, Optional ByRef Range As Object) As InlineShape" />
      <MemberSignature Language="F#" Value="abstract member AddHorizontalLine : string * obj -&gt; Microsoft.Office.Interop.Word.InlineShape" Usage="inlineShapes.AddHorizontalLine (FileName, Range)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(104)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.InlineShape</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileName" Type="System.String" />
        <Parameter Name="Range" Type="System.Object" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="FileName"><span data-ttu-id="0c2e6-121">Argument de type <b>String</b> obligatoire.</span><span class="sxs-lookup"><span data-stu-id="0c2e6-121">Required <b>String</b>.</span></span> <span data-ttu-id="0c2e6-122">Nom de fichier de l'image à utiliser pour la ligne horizontale.</span><span class="sxs-lookup"><span data-stu-id="0c2e6-122">The file name of the image you want to use for the horizontal line.</span></span></param>
        <param name="Range"><span data-ttu-id="0c2e6-123"><b>Objet</b>facultatif.</span><span class="sxs-lookup"><span data-stu-id="0c2e6-123">Optional <b>Object</b>.</span></span> <span data-ttu-id="0c2e6-124">Plage au-dessus de laquelle Microsoft Word place la ligne horizontale.</span><span class="sxs-lookup"><span data-stu-id="0c2e6-124">The range above which Microsoft Word places the horizontal line.</span></span> <span data-ttu-id="0c2e6-125">Si vous ne spécifiez pas cet argument, Word place la ligne horizontale au-dessus de la sélection active.</span><span class="sxs-lookup"><span data-stu-id="0c2e6-125">If this argument is omitted, Word places the horizontal line above the current selection.</span></span></param>
        <summary><span data-ttu-id="0c2e6-126">Ajoute une ligne horizontale créée à partir d'un fichier image au document actif.</span><span class="sxs-lookup"><span data-stu-id="0c2e6-126">Adds a horizontal line based on an image file to the current document.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="0c2e6-127">Pour ajouter une ligne horizontale qui n’est pas basée sur un fichier image existant, utilisez la <see cref="M:Microsoft.Office.Interop.Word.InlineShapes.AddHorizontalLineStandard(System.Object@)" /> méthode.</span><span class="sxs-lookup"><span data-stu-id="0c2e6-127">To add a horizontal line that isn't based on an existing image file, use the <see cref="M:Microsoft.Office.Interop.Word.InlineShapes.AddHorizontalLineStandard(System.Object@)" /> method.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="AddHorizontalLineStandard">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.InlineShape AddHorizontalLineStandard (ref object Range);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Word.InlineShape AddHorizontalLineStandard([in]object&amp; Range) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.InlineShapes.AddHorizontalLineStandard(System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddHorizontalLineStandard (Optional ByRef Range As Object) As InlineShape" />
      <MemberSignature Language="F#" Value="abstract member AddHorizontalLineStandard : obj -&gt; Microsoft.Office.Interop.Word.InlineShape" Usage="inlineShapes.AddHorizontalLineStandard Range" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(105)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.InlineShape</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Range" Type="System.Object" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="Range"><span data-ttu-id="0c2e6-128"><b>Objet</b>facultatif.</span><span class="sxs-lookup"><span data-stu-id="0c2e6-128">Optional <b>Object</b>.</span></span> <span data-ttu-id="0c2e6-129">Plage au-dessus de laquelle Microsoft Word place la ligne horizontale.</span><span class="sxs-lookup"><span data-stu-id="0c2e6-129">The range above which Microsoft Word places the horizontal line.</span></span> <span data-ttu-id="0c2e6-130">Si vous ne spécifiez pas cet argument, Word place la ligne horizontale au-dessus de la sélection active.</span><span class="sxs-lookup"><span data-stu-id="0c2e6-130">If this argument is omitted, Word places the horizontal line above the current selection.</span></span></param>
        <summary><span data-ttu-id="0c2e6-131">Ajoute une ligne horizontale au document actif.</span><span class="sxs-lookup"><span data-stu-id="0c2e6-131">Adds a horizontal line to the current document.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="0c2e6-132">Pour ajouter une ligne horizontale basée sur un fichier image existant, utilisez la <see cref="M:Microsoft.Office.Interop.Word.InlineShapes.AddHorizontalLine(System.String,System.Object@)" /> méthode.</span><span class="sxs-lookup"><span data-stu-id="0c2e6-132">To add a horizontal line based on an existing image file, use the <see cref="M:Microsoft.Office.Interop.Word.InlineShapes.AddHorizontalLine(System.String,System.Object@)" /> method.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="AddOLEControl">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.InlineShape AddOLEControl (ref object ClassType, ref object Range);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Word.InlineShape AddOLEControl([in]object&amp; ClassType, [in]object&amp; Range) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.InlineShapes.AddOLEControl(System.Object@,System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddOLEControl (Optional ByRef ClassType As Object, Optional ByRef Range As Object) As InlineShape" />
      <MemberSignature Language="F#" Value="abstract member AddOLEControl : obj * obj -&gt; Microsoft.Office.Interop.Word.InlineShape" Usage="inlineShapes.AddOLEControl (ClassType, Range)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(102)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.InlineShape</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ClassType" Type="System.Object" RefType="ref" />
        <Parameter Name="Range" Type="System.Object" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="ClassType"><span data-ttu-id="0c2e6-133"><b>Objet</b>facultatif.</span><span class="sxs-lookup"><span data-stu-id="0c2e6-133">Optional <b>Object</b>.</span></span> <span data-ttu-id="0c2e6-134">Identificateur programmatique du contrôle ActiveX à créer.</span><span class="sxs-lookup"><span data-stu-id="0c2e6-134">The programmatic identifier for the ActiveX control to be created.</span></span></param>
        <param name="Range"><span data-ttu-id="0c2e6-135"><b>Objet</b>facultatif.</span><span class="sxs-lookup"><span data-stu-id="0c2e6-135">Optional <b>Object</b>.</span></span> <span data-ttu-id="0c2e6-136">Plage dans laquelle sera placé le contrôle ActiveX dans le texte.</span><span class="sxs-lookup"><span data-stu-id="0c2e6-136">The range where the ActiveX control will be placed in the text.</span></span> <span data-ttu-id="0c2e6-137">Le contrôle ActiveX remplace cette plage, si cette dernière n'est pas réduite.</span><span class="sxs-lookup"><span data-stu-id="0c2e6-137">The ActiveX control replaces the range, if the range isn't collapsed.</span></span> <span data-ttu-id="0c2e6-138">Si vous ne spécifiez pas cet argument, le contrôle ActiveX est placé automatiquement.</span><span class="sxs-lookup"><span data-stu-id="0c2e6-138">If this argument is omitted, the Active X control is placed automatically.</span></span></param>
        <summary><span data-ttu-id="0c2e6-139">Crée un contrôle ActiveX (anciennement contrôle OLE).</span><span class="sxs-lookup"><span data-stu-id="0c2e6-139">Creates an ActiveX control (formerly known as an OLE control).</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="0c2e6-140">Cette méthode renvoie l' <see cref="T:Microsoft.Office.Interop.Word.InlineShape" /> objet qui représente le nouveau contrôle ActiveX.</span><span class="sxs-lookup"><span data-stu-id="0c2e6-140">This method returns the <see cref="T:Microsoft.Office.Interop.Word.InlineShape" /> object that represents the new ActiveX control.</span></span></para>
          <para><span data-ttu-id="0c2e6-141">Les contrôles ActiveX sont représentés sous la forme <see cref="T:Microsoft.Office.Interop.Excel.Shape" /> d’objets ou d’objets <b>InlineShape</b> dans Microsoft Word.</span><span class="sxs-lookup"><span data-stu-id="0c2e6-141">ActiveX controls are represented as either <see cref="T:Microsoft.Office.Interop.Excel.Shape" /> objects or <b>InlineShape</b> objects in Microsoft Word.</span></span> <span data-ttu-id="0c2e6-142">Pour modifier les propriétés d’un contrôle ActiveX, utilisez la <see cref="P:Microsoft.Office.Interop.Excel.OLEFormat.Object" /> propriété de l' <see cref="T:Microsoft.Office.Interop.Excel.OLEFormat" /> objet de la forme spécifiée ou de la forme insérée.</span><span class="sxs-lookup"><span data-stu-id="0c2e6-142">To modify the properties for an ActiveX control, use the <see cref="P:Microsoft.Office.Interop.Excel.OLEFormat.Object" /> property of the <see cref="T:Microsoft.Office.Interop.Excel.OLEFormat" /> object for the specified shape or inline shape.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="AddOLEObject">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.InlineShape AddOLEObject (ref object ClassType, ref object FileName, ref object LinkToFile, ref object DisplayAsIcon, ref object IconFileName, ref object IconIndex, ref object IconLabel, ref object Range);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Word.InlineShape AddOLEObject([in]object&amp; ClassType, [in]object&amp; FileName, [in]object&amp; LinkToFile, [in]object&amp; DisplayAsIcon, [in]object&amp; IconFileName, [in]object&amp; IconIndex, [in]object&amp; IconLabel, [in]object&amp; Range) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.InlineShapes.AddOLEObject(System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddOLEObject (Optional ByRef ClassType As Object, Optional ByRef FileName As Object, Optional ByRef LinkToFile As Object, Optional ByRef DisplayAsIcon As Object, Optional ByRef IconFileName As Object, Optional ByRef IconIndex As Object, Optional ByRef IconLabel As Object, Optional ByRef Range As Object) As InlineShape" />
      <MemberSignature Language="F#" Value="abstract member AddOLEObject : obj * obj * obj * obj * obj * obj * obj * obj -&gt; Microsoft.Office.Interop.Word.InlineShape" Usage="inlineShapes.AddOLEObject (ClassType, FileName, LinkToFile, DisplayAsIcon, IconFileName, IconIndex, IconLabel, Range)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(24)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.InlineShape</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ClassType" Type="System.Object" RefType="ref" />
        <Parameter Name="FileName" Type="System.Object" RefType="ref" />
        <Parameter Name="LinkToFile" Type="System.Object" RefType="ref" />
        <Parameter Name="DisplayAsIcon" Type="System.Object" RefType="ref" />
        <Parameter Name="IconFileName" Type="System.Object" RefType="ref" />
        <Parameter Name="IconIndex" Type="System.Object" RefType="ref" />
        <Parameter Name="IconLabel" Type="System.Object" RefType="ref" />
        <Parameter Name="Range" Type="System.Object" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="ClassType"><span data-ttu-id="0c2e6-143"><b>Objet</b>facultatif.</span><span class="sxs-lookup"><span data-stu-id="0c2e6-143">Optional <b>Object</b>.</span></span> <span data-ttu-id="0c2e6-144">Nom de l'application utilisée pour activer l'objet OLE spécifié.</span><span class="sxs-lookup"><span data-stu-id="0c2e6-144">The name of the application used to activate the specified OLE object.</span></span></param>
        <param name="FileName"><span data-ttu-id="0c2e6-145"><b>Objet</b>facultatif.</span><span class="sxs-lookup"><span data-stu-id="0c2e6-145">Optional <b>Object</b>.</span></span> <span data-ttu-id="0c2e6-146">Fichier à partir duquel créer l'objet.</span><span class="sxs-lookup"><span data-stu-id="0c2e6-146">The file from which the object is to be created.</span></span> <span data-ttu-id="0c2e6-147">Si vous ne spécifiez pas cet argument, c'est le dossier actif qui est utilisé.</span><span class="sxs-lookup"><span data-stu-id="0c2e6-147">If this argument is omitted, the current folder is used.</span></span> <span data-ttu-id="0c2e6-148">Vous devez spécifier l' <paramref name="ClassType" /> argument ou <paramref name="FileName" /> pour l’objet, mais pas les deux.</span><span class="sxs-lookup"><span data-stu-id="0c2e6-148">You must specify either the <paramref name="ClassType" /> or <paramref name="FileName" /> argument for the object, but not both.</span></span></param>
        <param name="LinkToFile"><span data-ttu-id="0c2e6-149"><b>Objet</b>facultatif.</span><span class="sxs-lookup"><span data-stu-id="0c2e6-149">Optional <b>Object</b>.</span></span> <span data-ttu-id="0c2e6-150"><b>True</b> pour lier l’objet OLE au fichier à partir duquel il a été créé ; <b>False</b> pour transformer l’objet OLE en une copie indépendante du fichier.</span><span class="sxs-lookup"><span data-stu-id="0c2e6-150"><b>True</b> to link the OLE object to the file from which it was created; <b>False</b> to make the OLE object an independent copy of the file.</span></span> <span data-ttu-id="0c2e6-151">Si vous avez spécifié une valeur pour <paramref name="ClassType" /> , l' <paramref name="LinkToFile" /> argument doit avoir la valeur <b>false</b>.</span><span class="sxs-lookup"><span data-stu-id="0c2e6-151">If you specified a value for <paramref name="ClassType" />, the <paramref name="LinkToFile" /> argument must be <b>False</b>.</span></span> <span data-ttu-id="0c2e6-152">La valeur par défaut est <b>False</b>.</span><span class="sxs-lookup"><span data-stu-id="0c2e6-152">The default value is <b>False</b>.</span></span></param>
        <param name="DisplayAsIcon"><span data-ttu-id="0c2e6-153"><b>Objet</b>facultatif.</span><span class="sxs-lookup"><span data-stu-id="0c2e6-153">Optional <b>Object</b>.</span></span> <span data-ttu-id="0c2e6-154"><b>True</b> pour afficher l'objet OLE en tant qu'icône.</span><span class="sxs-lookup"><span data-stu-id="0c2e6-154"><b>True</b> to display the OLE object as an icon.</span></span> <span data-ttu-id="0c2e6-155">La valeur par défaut est <b>False</b>.</span><span class="sxs-lookup"><span data-stu-id="0c2e6-155">The default value is <b>False</b>.</span></span></param>
        <param name="IconFileName"><span data-ttu-id="0c2e6-156"><b>Objet</b>facultatif.</span><span class="sxs-lookup"><span data-stu-id="0c2e6-156">Optional <b>Object</b>.</span></span> <span data-ttu-id="0c2e6-157">Fichier contenant l'icône à afficher.</span><span class="sxs-lookup"><span data-stu-id="0c2e6-157">The file that contains the icon to be displayed.</span></span></param>
        <param name="IconIndex"><span data-ttu-id="0c2e6-158"><b>Objet</b>facultatif.</span><span class="sxs-lookup"><span data-stu-id="0c2e6-158">Optional <b>Object</b>.</span></span> <span data-ttu-id="0c2e6-159">Numéro d’index de l’icône dans <paramref name="IconFileName" /> .</span><span class="sxs-lookup"><span data-stu-id="0c2e6-159">The index number of the icon within <paramref name="IconFileName" />.</span></span> <span data-ttu-id="0c2e6-160">L'ordre des icônes défini dans le fichier spécifié correspond à l'ordre d'affichage des icônes dans la boîte de dialogue Changer d'icône (menu Insertion, boîte de dialogue Insérer un objet), quand la case à cocher Afficher sous forme d'icône est activée.</span><span class="sxs-lookup"><span data-stu-id="0c2e6-160">The order of icons in the specified file corresponds to the order in which the icons appear in the Change Icon dialog box (Insert menu, Object dialog box) when the Display as icon check box is selected.</span></span> <span data-ttu-id="0c2e6-161">La première icône dans le fichier porte le numéro d'index 0 (zéro).</span><span class="sxs-lookup"><span data-stu-id="0c2e6-161">The first icon in the file has the index number 0 (zero).</span></span> <span data-ttu-id="0c2e6-162">Si une icône avec le numéro d’index donné n’existe pas dans <paramref name="IconFileName" /> , l’icône avec le numéro d’index 1 (la deuxième icône dans le fichier) est utilisée.</span><span class="sxs-lookup"><span data-stu-id="0c2e6-162">If an icon with the given index number doesn't exist in <paramref name="IconFileName" />, the icon with the index number 1 (the second icon in the file) is used.</span></span> <span data-ttu-id="0c2e6-163">La valeur par défaut est 0 (zéro).</span><span class="sxs-lookup"><span data-stu-id="0c2e6-163">The default value is 0 (zero).</span></span></param>
        <param name="IconLabel"><span data-ttu-id="0c2e6-164"><b>Objet</b>facultatif.</span><span class="sxs-lookup"><span data-stu-id="0c2e6-164">Optional <b>Object</b>.</span></span> <span data-ttu-id="0c2e6-165">Légende à afficher sous l'icône.</span><span class="sxs-lookup"><span data-stu-id="0c2e6-165">A label (caption) to be displayed beneath the icon.</span></span></param>
        <param name="Range"><span data-ttu-id="0c2e6-166"><b>Objet</b>facultatif.</span><span class="sxs-lookup"><span data-stu-id="0c2e6-166">Optional <b>Object</b>.</span></span> <span data-ttu-id="0c2e6-167">Plage dans laquelle l'objet OLE est placé dans le texte.</span><span class="sxs-lookup"><span data-stu-id="0c2e6-167">The range where the OLE object will be placed in the text.</span></span> <span data-ttu-id="0c2e6-168">L'objet OLE remplace cette plage, sauf si elle est réduite.</span><span class="sxs-lookup"><span data-stu-id="0c2e6-168">The OLE object replaces the range, unless the range is collapsed.</span></span> <span data-ttu-id="0c2e6-169">Si vous ne spécifiez pas cet argument, l'objet se place automatiquement.</span><span class="sxs-lookup"><span data-stu-id="0c2e6-169">If this argument is omitted, the object is placed automatically.</span></span></param>
        <summary><span data-ttu-id="0c2e6-170">Crée un objet OLE.</span><span class="sxs-lookup"><span data-stu-id="0c2e6-170">Creates an OLE object.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="0c2e6-171">Renvoie l' <see cref="T:Microsoft.Office.Interop.Word.InlineShape" /> objet qui représente le nouvel objet OLE.</span><span class="sxs-lookup"><span data-stu-id="0c2e6-171">Returns the <see cref="T:Microsoft.Office.Interop.Word.InlineShape" /> object that represents the new OLE object.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="AddPicture">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.InlineShape AddPicture (string FileName, ref object LinkToFile, ref object SaveWithDocument, ref object Range);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Word.InlineShape AddPicture([in]string FileName, [in]object&amp; LinkToFile, [in]object&amp; SaveWithDocument, [in]object&amp; Range) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.InlineShapes.AddPicture(System.String,System.Object@,System.Object@,System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddPicture (FileName As String, Optional ByRef LinkToFile As Object, Optional ByRef SaveWithDocument As Object, Optional ByRef Range As Object) As InlineShape" />
      <MemberSignature Language="F#" Value="abstract member AddPicture : string * obj * obj * obj -&gt; Microsoft.Office.Interop.Word.InlineShape" Usage="inlineShapes.AddPicture (FileName, LinkToFile, SaveWithDocument, Range)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(100)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.InlineShape</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileName" Type="System.String" />
        <Parameter Name="LinkToFile" Type="System.Object" RefType="ref" />
        <Parameter Name="SaveWithDocument" Type="System.Object" RefType="ref" />
        <Parameter Name="Range" Type="System.Object" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="FileName"><span data-ttu-id="0c2e6-172">Argument de type <b>String</b> obligatoire.</span><span class="sxs-lookup"><span data-stu-id="0c2e6-172">Required <b>String</b>.</span></span> <span data-ttu-id="0c2e6-173">Chemin et nom de fichier de l'image.</span><span class="sxs-lookup"><span data-stu-id="0c2e6-173">The path and file name of the picture.</span></span></param>
        <param name="LinkToFile"><span data-ttu-id="0c2e6-174"><b>Objet</b>facultatif.</span><span class="sxs-lookup"><span data-stu-id="0c2e6-174">Optional <b>Object</b>.</span></span> <span data-ttu-id="0c2e6-175"><b>True</b> pour lier l'image au fichier à partir duquel il a été créé.</span><span class="sxs-lookup"><span data-stu-id="0c2e6-175"><b>True</b> to link the picture to the file from which it was created.</span></span> <span data-ttu-id="0c2e6-176"><b>False</b> pour transformer l'image une copie indépendante du fichier.</span><span class="sxs-lookup"><span data-stu-id="0c2e6-176"><b>False</b> to make the picture an independent copy of the file.</span></span> <span data-ttu-id="0c2e6-177">La valeur par défaut est <b>False</b>.</span><span class="sxs-lookup"><span data-stu-id="0c2e6-177">The default value is <b>False</b>.</span></span></param>
        <param name="SaveWithDocument"><span data-ttu-id="0c2e6-178"><b>Objet</b>facultatif.</span><span class="sxs-lookup"><span data-stu-id="0c2e6-178">Optional <b>Object</b>.</span></span> <span data-ttu-id="0c2e6-179"><b>True</b> pour enregistrer l'image liée avec le document.</span><span class="sxs-lookup"><span data-stu-id="0c2e6-179"><b>True</b> to save the linked picture with the document.</span></span> <span data-ttu-id="0c2e6-180">La valeur par défaut est <b>False</b>.</span><span class="sxs-lookup"><span data-stu-id="0c2e6-180">The default value is <b>False</b>.</span></span></param>
        <param name="Range"><span data-ttu-id="0c2e6-181"><b>Objet</b>facultatif.</span><span class="sxs-lookup"><span data-stu-id="0c2e6-181">Optional <b>Object</b>.</span></span> <span data-ttu-id="0c2e6-182">Emplacement où se positionnera l'image dans le texte.</span><span class="sxs-lookup"><span data-stu-id="0c2e6-182">The location where the picture will be placed in the text.</span></span> <span data-ttu-id="0c2e6-183">L'image remplace la plage, si cette dernière n'est pas réduite ; si elle l'est, l'image est insérée.</span><span class="sxs-lookup"><span data-stu-id="0c2e6-183">If the range isn't collapsed, the picture replaces the range; otherwise, the picture is inserted.</span></span> <span data-ttu-id="0c2e6-184">Si vous ne spécifiez pas cet argument, l'image se place automatiquement.</span><span class="sxs-lookup"><span data-stu-id="0c2e6-184">If this argument is omitted, the picture is placed automatically.</span></span></param>
        <summary><span data-ttu-id="0c2e6-185">Ajoute une image à un document.</span><span class="sxs-lookup"><span data-stu-id="0c2e6-185">Adds a picture to a document.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="0c2e6-186">Cette méthode renvoie un <see cref="T:Microsoft.Office.Interop.Word.Shape" /> objet qui représente l’image et l’ajoute à la <see cref="T:Microsoft.Office.Interop.Word.InlineShapes" /> collection.</span><span class="sxs-lookup"><span data-stu-id="0c2e6-186">This method returns a <see cref="T:Microsoft.Office.Interop.Word.Shape" /> object that represents the picture and adds it to the <see cref="T:Microsoft.Office.Interop.Word.InlineShapes" /> collection.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="AddPictureBullet">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.InlineShape AddPictureBullet (string FileName, ref object Range);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Word.InlineShape AddPictureBullet([in]string FileName, [in]object&amp; Range) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.InlineShapes.AddPictureBullet(System.String,System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddPictureBullet (FileName As String, Optional ByRef Range As Object) As InlineShape" />
      <MemberSignature Language="F#" Value="abstract member AddPictureBullet : string * obj -&gt; Microsoft.Office.Interop.Word.InlineShape" Usage="inlineShapes.AddPictureBullet (FileName, Range)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(106)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.InlineShape</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileName" Type="System.String" />
        <Parameter Name="Range" Type="System.Object" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="FileName"><span data-ttu-id="0c2e6-187">Argument de type <b>String</b> obligatoire.</span><span class="sxs-lookup"><span data-stu-id="0c2e6-187">Required <b>String</b>.</span></span> <span data-ttu-id="0c2e6-188">Nom de fichier de l'image que vous souhaitez utiliser pour la puce image.</span><span class="sxs-lookup"><span data-stu-id="0c2e6-188">The file name of the image you want to use for the picture bullet.</span></span></param>
        <param name="Range"><span data-ttu-id="0c2e6-189"><b>Objet</b>facultatif.</span><span class="sxs-lookup"><span data-stu-id="0c2e6-189">Optional <b>Object</b>.</span></span> <span data-ttu-id="0c2e6-190">Plage à laquelle Microsoft Word ajoute la puce image.</span><span class="sxs-lookup"><span data-stu-id="0c2e6-190">The range to which Microsoft Word adds the picture bullet.</span></span> <span data-ttu-id="0c2e6-191">Word ajoute la puce image à chaque paragraphe contenu dans cette plage.</span><span class="sxs-lookup"><span data-stu-id="0c2e6-191">Word adds the picture bullet to each paragraph in the range.</span></span> <span data-ttu-id="0c2e6-192">Si vous ne spécifiez pas cet argument, Word ajoute la puce image à chaque paragraphe de la sélection active.</span><span class="sxs-lookup"><span data-stu-id="0c2e6-192">If this argument is omitted, Word adds the picture bullet to each paragraph in the current selection.</span></span></param>
        <summary><span data-ttu-id="0c2e6-193">Ajoute une puce image provenant d'un fichier image dans le document actif.</span><span class="sxs-lookup"><span data-stu-id="0c2e6-193">Adds a picture bullet based on an image file to the current document.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="0c2e6-194">Cette méthode renvoie un <see cref="T:Microsoft.Office.Interop.Word.InlineShape" /> objet.</span><span class="sxs-lookup"><span data-stu-id="0c2e6-194">This method returns a <see cref="T:Microsoft.Office.Interop.Word.InlineShape" /> object.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="AddSmartArt">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.InlineShape AddSmartArt (Microsoft.Office.Core.SmartArtLayout Layout, ref object Range);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Word.InlineShape AddSmartArt([in]class Microsoft.Office.Core.SmartArtLayout Layout, [in]object&amp; Range) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.InlineShapes.AddSmartArt(Microsoft.Office.Core.SmartArtLayout,System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddSmartArt (Layout As SmartArtLayout, Optional ByRef Range As Object) As InlineShape" />
      <MemberSignature Language="F#" Value="abstract member AddSmartArt : Microsoft.Office.Core.SmartArtLayout * obj -&gt; Microsoft.Office.Interop.Word.InlineShape" Usage="inlineShapes.AddSmartArt (Layout, Range)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(108)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.InlineShape</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Layout" Type="Microsoft.Office.Core.SmartArtLayout" />
        <Parameter Name="Range" Type="System.Object" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="Layout"><span data-ttu-id="0c2e6-195"><see cref="T:Microsoft.Office.Core.SmartArtLayout" />Objet qui spécifie la disposition du graphique SmartArt.</span><span class="sxs-lookup"><span data-stu-id="0c2e6-195">A <see cref="T:Microsoft.Office.Core.SmartArtLayout" /> object that specifies the layout for the SmartArt graphic.</span></span></param>
        <param name="Range"><span data-ttu-id="0c2e6-196">Spécifie le texte auquel le graphique SmartArt est lié.</span><span class="sxs-lookup"><span data-stu-id="0c2e6-196">Specifies the text to which the SmartArt graphic is bound.</span></span> <span data-ttu-id="0c2e6-197">Si <paramref name="Range" /> est spécifié, le graphique SmartArt est placé au début du premier paragraphe de la plage.</span><span class="sxs-lookup"><span data-stu-id="0c2e6-197">If <paramref name="Range" /> is specified, the SmartArt graphic is positioned at the beginning of the first paragraph in the range.</span></span> <span data-ttu-id="0c2e6-198">Si ce paramètre est omis, la plage est sélectionnée automatiquement et le graphique SmartArt est positionné par rapport aux bords supérieur et gauche de la page.</span><span class="sxs-lookup"><span data-stu-id="0c2e6-198">If this parameter is omitted, the range is selected automatically, and the SmartArt graphic is positioned relative to the top and left edges of the page.</span></span></param>
        <summary><span data-ttu-id="0c2e6-199">Insère un graphique SmartArt en tant que forme insérée dans le document actif.</span><span class="sxs-lookup"><span data-stu-id="0c2e6-199">Inserts a SmartArt graphic as an inline shape into the active document.</span></span></summary>
        <returns><span data-ttu-id="0c2e6-200">Graphique SmartArt à insérer.</span><span class="sxs-lookup"><span data-stu-id="0c2e6-200">The SmartArt graphic to insert.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddWebVideo">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.InlineShape AddWebVideo (string EmbedCode, ref object VideoWidth, ref object VideoHeight, ref object PosterFrameImage, ref object Url, ref object Range);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Word.InlineShape AddWebVideo([in]string EmbedCode, [in]object&amp; VideoWidth, [in]object&amp; VideoHeight, [in]object&amp; PosterFrameImage, [in]object&amp; Url, [in]object&amp; Range) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.InlineShapes.AddWebVideo(System.String,System.Object@,System.Object@,System.Object@,System.Object@,System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddWebVideo (EmbedCode As String, ByRef VideoWidth As Object, ByRef VideoHeight As Object, Optional ByRef PosterFrameImage As Object, Optional ByRef Url As Object, Optional ByRef Range As Object) As InlineShape" />
      <MemberSignature Language="F#" Value="abstract member AddWebVideo : string * obj * obj * obj * obj * obj -&gt; Microsoft.Office.Interop.Word.InlineShape" Usage="inlineShapes.AddWebVideo (EmbedCode, VideoWidth, VideoHeight, PosterFrameImage, Url, Range)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(109)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.InlineShape</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="EmbedCode" Type="System.String" />
        <Parameter Name="VideoWidth" Type="System.Object" RefType="ref" />
        <Parameter Name="VideoHeight" Type="System.Object" RefType="ref" />
        <Parameter Name="PosterFrameImage" Type="System.Object" RefType="ref" />
        <Parameter Name="Url" Type="System.Object" RefType="ref" />
        <Parameter Name="Range" Type="System.Object" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="EmbedCode"><span data-ttu-id="0c2e6-201">Code incorporé pour la vidéo.</span><span class="sxs-lookup"><span data-stu-id="0c2e6-201">The embed code for the video.</span></span></param>
        <param name="VideoWidth"><span data-ttu-id="0c2e6-202">Entier qui représente la largeur de la vidéo Web en pixels.</span><span class="sxs-lookup"><span data-stu-id="0c2e6-202">An integer that represents the width of the web video in pixels.</span></span></param>
        <param name="VideoHeight"><span data-ttu-id="0c2e6-203">Entier qui représente la hauteur de la vidéo Web en pixels.</span><span class="sxs-lookup"><span data-stu-id="0c2e6-203">An integer that represents the height of the web video in pixels.</span></span></param>
        <param name="PosterFrameImage"><span data-ttu-id="0c2e6-204">Chaîne qui pointe vers le fichier à utiliser comme cadre d’affiche pour la vidéo Web.</span><span class="sxs-lookup"><span data-stu-id="0c2e6-204">A string that points to the file to use as the poster frame for the web video.</span></span></param>
        <param name="Url"><span data-ttu-id="0c2e6-205">URL de la vidéo.</span><span class="sxs-lookup"><span data-stu-id="0c2e6-205">The URL to the video.</span></span></param>
        <param name="Range"><span data-ttu-id="0c2e6-206">Plage à laquelle insérer la vidéo Web.</span><span class="sxs-lookup"><span data-stu-id="0c2e6-206">The range at which to insert the web video.</span></span> <span data-ttu-id="0c2e6-207">Si <paramref name="Range" /> est omis, la sélection actuelle est utilisée.</span><span class="sxs-lookup"><span data-stu-id="0c2e6-207">If <paramref name="Range" /> is omitted, the current selection is used.</span></span></param>
        <summary><span data-ttu-id="0c2e6-208">Ajoute une nouvelle vidéo Web au document.</span><span class="sxs-lookup"><span data-stu-id="0c2e6-208">Adds a new web video to the document.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Application">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.Application Application { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Word.Application Application" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.InlineShapes.Application" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Application As Application" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Word::Application ^ Application { Microsoft::Office::Interop::Word::Application ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Application : Microsoft.Office.Interop.Word.Application" Usage="Microsoft.Office.Interop.Word.InlineShapes.Application" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1000)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1000)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.Application</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0c2e6-209">Renvoie un <see cref="T:Microsoft.Office.Interop.Word.Application" /> Object qui représente l’application Microsoft Word.</span><span class="sxs-lookup"><span data-stu-id="0c2e6-209">Returns a <see cref="T:Microsoft.Office.Interop.Word.Application" /> object that represents the Microsoft Word application.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.InlineShapes.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Count : int" Usage="Microsoft.Office.Interop.Word.InlineShapes.Count" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0c2e6-210">Renvoie le nombre d’éléments dans la collection spécifiée.</span><span class="sxs-lookup"><span data-stu-id="0c2e6-210">Returns the number of items in the specified collection.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Creator">
      <MemberSignature Language="C#" Value="public int Creator { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Creator" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.InlineShapes.Creator" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Creator As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Creator { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Creator : int" Usage="Microsoft.Office.Interop.Word.InlineShapes.Creator" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1001)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1001)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0c2e6-211">Renvoie un entier 32 bits qui indique l'application dans laquelle l'objet spécifié a été créé.</span><span class="sxs-lookup"><span data-stu-id="0c2e6-211">Returns a 32-bit integer that indicates the application in which the specified object was created.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="0c2e6-212">Si l’objet spécifié a été créé dans Microsoft Word, cette propriété renvoie le nombre hexadécimal 4D535744, qui représente la chaîne « MSWD ».</span><span class="sxs-lookup"><span data-stu-id="0c2e6-212">If the specified object was created in Microsoft Word, this property returns the hexadecimal number 4D535744, which represents the string "MSWD."</span></span> <span data-ttu-id="0c2e6-213">[!REMARQUE] Cette valeur peut également être représentée par la constante <b>wdCreatorCode</b>.</span><span class="sxs-lookup"><span data-stu-id="0c2e6-213">This value can also be represented by the constant <b>wdCreatorCode</b>.</span></span></para>
          <para><span data-ttu-id="0c2e6-214">La propriété <b>Creator</b> a initialement été conçue pour être utilisée sur Macintosh, où chaque application possède un code de créateur de quatre caractères.</span><span class="sxs-lookup"><span data-stu-id="0c2e6-214">The <b>Creator</b> property was primarily designed to be used on the Macintosh, where each application has a four-character creator code.</span></span> <span data-ttu-id="0c2e6-215">Par exemple, Microsoft Word possède le code de créateur MSWD.</span><span class="sxs-lookup"><span data-stu-id="0c2e6-215">For example, Microsoft Word has the creator code MSWD.</span></span> <span data-ttu-id="0c2e6-216">Pour plus d'informations sur cette propriété, consultez la référence du langage aide incluse avec Microsoft Office Édition Macintosh.</span><span class="sxs-lookup"><span data-stu-id="0c2e6-216">For additional information about this property, consult the language reference Help included with Microsoft Office Macintosh Edition.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IEnumerator GetEnumerator() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.InlineShapes.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::IEnumerator ^ GetEnumerator();" />
      <MemberSignature Language="F#" Value="abstract member GetEnumerator : unit -&gt; System.Collections.IEnumerator" Usage="inlineShapes.GetEnumerator " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(-4)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.InlineShape this[int Index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Word.InlineShape Item(int32)" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.InlineShapes.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property Item(Index As Integer) As InlineShape" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Word::InlineShape ^ default[int] { Microsoft::Office::Interop::Word::InlineShape ^ get(int Index); };" />
      <MemberSignature Language="F#" Value="member this.Item(int) : Microsoft.Office.Interop.Word.InlineShape" Usage="Microsoft.Office.Interop.Word.InlineShapes.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.InlineShape</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="Index"><span data-ttu-id="0c2e6-217"><b>Entier</b> indiquant la position ordinale de l’objet individuel.</span><span class="sxs-lookup"><span data-stu-id="0c2e6-217">An <b>Integer</b> indicating the ordinal position of the individual object.</span></span></param>
        <summary><span data-ttu-id="0c2e6-218">Renvoie un objet spécifique appartenant à une collection.</span><span class="sxs-lookup"><span data-stu-id="0c2e6-218">Returns an individual object in a collection.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="New">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.InlineShape New (Microsoft.Office.Interop.Word.Range Range);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Word.InlineShape New([in]class Microsoft.Office.Interop.Word.Range Range) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.InlineShapes.New(Microsoft.Office.Interop.Word.Range)" />
      <MemberSignature Language="VB.NET" Value="Public Function New (Range As Range) As InlineShape" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Office::Interop::Word::InlineShape ^ New(Microsoft::Office::Interop::Word::Range ^ Range);" />
      <MemberSignature Language="F#" Value="abstract member New : Microsoft.Office.Interop.Word.Range -&gt; Microsoft.Office.Interop.Word.InlineShape" Usage="inlineShapes.New Range" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(200)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.InlineShape</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Range" Type="Microsoft.Office.Interop.Word.Range" />
      </Parameters>
      <Docs>
        <param name="Range"><span data-ttu-id="0c2e6-219">Objet required <see cref="T:Microsoft.Office.Interop.Word.Range" /> .</span><span class="sxs-lookup"><span data-stu-id="0c2e6-219">Required <see cref="T:Microsoft.Office.Interop.Word.Range" /> object.</span></span> <span data-ttu-id="0c2e6-220">Emplacement du nouveau graphisme.</span><span class="sxs-lookup"><span data-stu-id="0c2e6-220">The location of the new graphic.</span></span></param>
        <summary><span data-ttu-id="0c2e6-221">Insère un objet image Microsoft Word vierge d’un pouce carré et entouré d’une bordure.</span><span class="sxs-lookup"><span data-stu-id="0c2e6-221">Inserts an empty, 1-inch-square Microsoft Word picture object surrounded by a border.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="0c2e6-222">Cette méthode renvoie le nouveau graphique sous la forme d’un <see cref="T:Microsoft.Office.Interop.Word.InlineShape" /> objet.</span><span class="sxs-lookup"><span data-stu-id="0c2e6-222">This method returns the new graphic as an <see cref="T:Microsoft.Office.Interop.Word.InlineShape" /> object.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public object Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Parent" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.InlineShapes.Parent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parent As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Parent { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Parent : obj" Usage="Microsoft.Office.Interop.Word.InlineShapes.Parent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1002)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1002)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0c2e6-223">Cette propriété renvoie un objet qui représente l'objet parent de l'objet spécifié.</span><span class="sxs-lookup"><span data-stu-id="0c2e6-223">Returns an object that represents the parent object of the specified object.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
