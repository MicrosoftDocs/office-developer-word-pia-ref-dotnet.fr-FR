<Type Name="ShapeNodes" FullName="Microsoft.Office.Interop.Word.ShapeNodes">
  <Metadata><Meta Name="ms.openlocfilehash" Value="c2fc3b2804f5f177fa94175681c724162f840aa2" /><Meta Name="ms.sourcegitcommit" Value="655244c9d9a99d41d118f4fa57b5d74d46c410d7" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="fr-FR" /><Meta Name="ms.lasthandoff" Value="06/03/2020" /><Meta Name="ms.locfileid" Value="43924535" /></Metadata><TypeSignature Language="C#" Value="public interface ShapeNodes : System.Collections.IEnumerable" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract ShapeNodes implements class System.Collections.IEnumerable" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Office.Interop.Word.ShapeNodes" />
  <TypeSignature Language="VB.NET" Value="Public Interface ShapeNodes&#xA;Implements IEnumerable" />
  <TypeSignature Language="C++ CLI" Value="public interface class ShapeNodes : System::Collections::IEnumerable" />
  <TypeSignature Language="F#" Value="type ShapeNodes = interface&#xA;    interface IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
    <AssemblyVersion>15.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("000209CE-0000-0000-C000-000000000046")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.TypeLibType(4288)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="34b94-101">Collection de tous les <see cref="T:Microsoft.Office.Interop.Word.ShapeNode" /> objets de la forme libre spécifiée.</span><span class="sxs-lookup"><span data-stu-id="34b94-101">A collection of all the <see cref="T:Microsoft.Office.Interop.Word.ShapeNode" /> objects in the specified freeform.</span></span></summary>
    <remarks><para><span data-ttu-id="34b94-102">Chaque objet <b>ShapeNode</b> représente soit un noeud entre des segments dans une forme libre ou d'un point de contrôle pour un segment courbé d'une forme libre.</span><span class="sxs-lookup"><span data-stu-id="34b94-102">Each <b>ShapeNode</b> object represents either a node between segments in a freeform or a control point for a curved segment of a freeform.</span></span> <span data-ttu-id="34b94-103">Vous pouvez créer une forme libre manuellement ou à l’aide des <see cref="M:Microsoft.Office.Interop.Word.Shapes.BuildFreeform(Microsoft.Office.Core.MsoEditingType,System.Single,System.Single)" /> <see cref="M:Microsoft.Office.Interop.Word.InlineShape.ConvertToShape" /> méthodes et.</span><span class="sxs-lookup"><span data-stu-id="34b94-103">You can create a freeform manually or by using the <see cref="M:Microsoft.Office.Interop.Word.Shapes.BuildFreeform(Microsoft.Office.Core.MsoEditingType,System.Single,System.Single)" /> and <see cref="M:Microsoft.Office.Interop.Word.InlineShape.ConvertToShape" /> methods.</span></span></para>
      <para><span data-ttu-id="34b94-104">Utilisez la <see cref="P:Microsoft.Office.Interop.Word.Shape.Nodes" /> propriété pour renvoyer la collection <b>ShapeNodes</b> .</span><span class="sxs-lookup"><span data-stu-id="34b94-104">Use the <see cref="P:Microsoft.Office.Interop.Word.Shape.Nodes" /> property to return the <b>ShapeNodes</b> collection.</span></span></para>
      <para><span data-ttu-id="34b94-105">Utilisez la <see cref="M:Microsoft.Office.Interop.Word.ShapeNodes.Insert(System.Int32,Microsoft.Office.Core.MsoSegmentType,Microsoft.Office.Core.MsoEditingType,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)" /> méthode pour créer un nouveau nœud et l’ajouter à la collection <b>ShapeNodes</b> .</span><span class="sxs-lookup"><span data-stu-id="34b94-105">Use the <see cref="M:Microsoft.Office.Interop.Word.ShapeNodes.Insert(System.Int32,Microsoft.Office.Core.MsoSegmentType,Microsoft.Office.Core.MsoEditingType,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)" /> method to create a new node and add it to the <b>ShapeNodes</b> collection.</span></span></para>
      <para><span data-ttu-id="34b94-106">Utilisez <b>Nodes</b>( <paramref name="index" /> ), où <paramref name="index" /> est le numéro d’index du nœud, pour renvoyer un seul objet <b>ShapeNode</b> .</span><span class="sxs-lookup"><span data-stu-id="34b94-106">Use <b>Nodes</b>(<paramref name="index" />), where <paramref name="index" /> is the node index number, to return a single <b>ShapeNode</b> object.</span></span></para>
      <para> </para></remarks>
  </Docs>
  <Members>
    <Member MemberName="Application">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.Application Application { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Word.Application Application" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.ShapeNodes.Application" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Application As Application" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Word::Application ^ Application { Microsoft::Office::Interop::Word::Application ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Application : Microsoft.Office.Interop.Word.Application" Usage="Microsoft.Office.Interop.Word.ShapeNodes.Application" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1000)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1000)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.Application</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="34b94-107">Renvoie un <see cref="T:Microsoft.Office.Interop.Word.Application" /> Object qui représente l’application Microsoft Word.</span><span class="sxs-lookup"><span data-stu-id="34b94-107">Returns a <see cref="T:Microsoft.Office.Interop.Word.Application" /> object that represents the Microsoft Word application.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.ShapeNodes.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Count : int" Usage="Microsoft.Office.Interop.Word.ShapeNodes.Count" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="34b94-108">Renvoie le nombre d’éléments dans la collection spécifiée.</span><span class="sxs-lookup"><span data-stu-id="34b94-108">Returns the number of items in the specified collection.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Creator">
      <MemberSignature Language="C#" Value="public int Creator { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Creator" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.ShapeNodes.Creator" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Creator As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Creator { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Creator : int" Usage="Microsoft.Office.Interop.Word.ShapeNodes.Creator" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1001)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1001)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="34b94-109">Renvoie un entier 32 bits qui indique l'application dans laquelle l'objet spécifié a été créé.</span><span class="sxs-lookup"><span data-stu-id="34b94-109">Returns a 32-bit integer that indicates the application in which the specified object was created.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="34b94-110">Si l’objet a été créé dans Microsoft Word, cette propriété renvoie le nombre hexadécimal 4D535744, qui représente la chaîne « MSWD ».</span><span class="sxs-lookup"><span data-stu-id="34b94-110">If the object was created in Microsoft Word, this property returns the hexadecimal number 4D535744, which represents the string "MSWD."</span></span> <span data-ttu-id="34b94-111">[!REMARQUE] Cette valeur peut également être représentée par la constante <b>wdCreatorCode</b>.</span><span class="sxs-lookup"><span data-stu-id="34b94-111">This value can also be represented by the constant <b>wdCreatorCode</b>.</span></span></para>
          <para><span data-ttu-id="34b94-112">La propriété <b>Creator</b> a initialement été conçue pour être utilisée sur Macintosh, où chaque application possède un code de créateur de quatre caractères.</span><span class="sxs-lookup"><span data-stu-id="34b94-112">The <b>Creator</b> property was primarily designed to be used on the Macintosh, where each application has a four-character creator code.</span></span> <span data-ttu-id="34b94-113">Par exemple, Microsoft Word possède le code de créateur MSWD.</span><span class="sxs-lookup"><span data-stu-id="34b94-113">For example, Microsoft Word has the creator code MSWD.</span></span> <span data-ttu-id="34b94-114">Pour plus d'informations sur cette propriété, consultez la référence du langage aide incluse avec Microsoft Office Édition Macintosh.</span><span class="sxs-lookup"><span data-stu-id="34b94-114">For additional information about this property, consult the language reference Help included with Microsoft Office Macintosh Edition.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public void Delete (int Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Delete([in]int32 Index) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.ShapeNodes.Delete(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Delete (Index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Delete(int Index);" />
      <MemberSignature Language="F#" Value="abstract member Delete : int -&gt; unit" Usage="shapeNodes.Delete Index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(11)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="Index"><span data-ttu-id="34b94-115">Argument de type <b>Integer</b> obligatoire.</span><span class="sxs-lookup"><span data-stu-id="34b94-115">Required <b>Integer</b>.</span></span> <span data-ttu-id="34b94-116">Le numéro du nœud à supprimer de la forme.</span><span class="sxs-lookup"><span data-stu-id="34b94-116">The number of the shape node to delete.</span></span></param>
        <summary><span data-ttu-id="34b94-117">Cette méthode supprime l'objet spécifié.</span><span class="sxs-lookup"><span data-stu-id="34b94-117">Deletes the specified object.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IEnumerator GetEnumerator() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.ShapeNodes.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::IEnumerator ^ GetEnumerator();" />
      <MemberSignature Language="F#" Value="abstract member GetEnumerator : unit -&gt; System.Collections.IEnumerator" Usage="shapeNodes.GetEnumerator " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(-4)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public void Insert (int Index, Microsoft.Office.Core.MsoSegmentType SegmentType, Microsoft.Office.Core.MsoEditingType EditingType, float X1, float Y1, float X2 = 0, float Y2 = 0, float X3 = 0, float Y3 = 0);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Insert([in]int32 Index, [in]valuetype Microsoft.Office.Core.MsoSegmentType SegmentType, [in]valuetype Microsoft.Office.Core.MsoEditingType EditingType, [in]float32 X1, [in]float32 Y1, [in]float32 X2, [in]float32 Y2, [in]float32 X3, [in]float32 Y3) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.ShapeNodes.Insert(System.Int32,Microsoft.Office.Core.MsoSegmentType,Microsoft.Office.Core.MsoEditingType,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Insert (Index As Integer, SegmentType As MsoSegmentType, EditingType As MsoEditingType, X1 As Single, Y1 As Single, Optional X2 As Single = 0, Optional Y2 As Single = 0, Optional X3 As Single = 0, Optional Y3 As Single = 0)" />
      <MemberSignature Language="F#" Value="abstract member Insert : int * Microsoft.Office.Core.MsoSegmentType * Microsoft.Office.Core.MsoEditingType * single * single * single * single * single * single -&gt; unit" Usage="shapeNodes.Insert (Index, SegmentType, EditingType, X1, Y1, X2, Y2, X3, Y3)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(12)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Int32" />
        <Parameter Name="SegmentType" Type="Microsoft.Office.Core.MsoSegmentType" />
        <Parameter Name="EditingType" Type="Microsoft.Office.Core.MsoEditingType" />
        <Parameter Name="X1" Type="System.Single" />
        <Parameter Name="Y1" Type="System.Single" />
        <Parameter Name="X2" Type="System.Single" />
        <Parameter Name="Y2" Type="System.Single" />
        <Parameter Name="X3" Type="System.Single" />
        <Parameter Name="Y3" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="Index"><span data-ttu-id="34b94-118">Argument de type <b>Integer</b> obligatoire.</span><span class="sxs-lookup"><span data-stu-id="34b94-118">Required <b>Integer</b>.</span></span> <span data-ttu-id="34b94-119">Numéro du nœud de forme après lequel le nouveau nœud doit être inséré.</span><span class="sxs-lookup"><span data-stu-id="34b94-119">The number of the shape node after which to insert a new node.</span></span></param>
        <param name="SegmentType"><span data-ttu-id="34b94-120">Obligatoire <see cref="T:Microsoft.Office.Core.MsoSegmentType" /> .</span><span class="sxs-lookup"><span data-stu-id="34b94-120">Required <see cref="T:Microsoft.Office.Core.MsoSegmentType" />.</span></span> <span data-ttu-id="34b94-121">Type de ligne reliant le nœud inséré aux nœuds voisins.</span><span class="sxs-lookup"><span data-stu-id="34b94-121">The type of line that connects the inserted node to the neighboring nodes.</span></span></param>
        <param name="EditingType"><span data-ttu-id="34b94-122">Obligatoire <see cref="T:Microsoft.Office.Core.MsoEditingType" /> .</span><span class="sxs-lookup"><span data-stu-id="34b94-122">Required <see cref="T:Microsoft.Office.Core.MsoEditingType" />.</span></span> <span data-ttu-id="34b94-123">Propriété de modification du nœud inséré.</span><span class="sxs-lookup"><span data-stu-id="34b94-123">The editing property of the inserted node.</span></span></param>
        <param name="X1"><span data-ttu-id="34b94-124">Argument de type <b>Single</b> obligatoire.</span><span class="sxs-lookup"><span data-stu-id="34b94-124">Required <b>Single</b>.</span></span> <span data-ttu-id="34b94-125">Si le <paramref name="EditingType" /> nouveau segment est <b>msoEditingAuto</b>, cet argument spécifie la distance horizontale, exprimée en points, entre le coin supérieur gauche du document jusqu’au point de fin du nouveau segment.</span><span class="sxs-lookup"><span data-stu-id="34b94-125">If the <paramref name="EditingType" /> of the new segment is <b>msoEditingAuto</b>, this argument specifies the horizontal distance, measured in points, from the upper-left corner of the document to the end point of the new segment.</span></span> <span data-ttu-id="34b94-126">Si le <paramref name="EditingType" /> du nouveau nœud est <b>msoEditingCorner</b>, cet argument spécifie la distance horizontale, exprimée en points, entre le coin supérieur gauche du document jusqu’au premier point de contrôle du nouveau segment.</span><span class="sxs-lookup"><span data-stu-id="34b94-126">If the <paramref name="EditingType" /> of the new node is <b>msoEditingCorner</b>, this argument specifies the horizontal distance, measured in points, from the upper-left corner of the document to the first control point for the new segment.</span></span></param>
        <param name="Y1"><span data-ttu-id="34b94-127">Argument de type <b>Single</b> obligatoire.</span><span class="sxs-lookup"><span data-stu-id="34b94-127">Required <b>Single</b>.</span></span> <span data-ttu-id="34b94-128">Si le <paramref name="EditingType" /> nouveau segment est <b>msoEditingAuto</b>, cet argument spécifie la distance verticale, exprimée en points, entre le coin supérieur gauche du document jusqu’au point de fin du nouveau segment.</span><span class="sxs-lookup"><span data-stu-id="34b94-128">If the <paramref name="EditingType" /> of the new segment is <b>msoEditingAuto</b>, this argument specifies the vertical distance, measured in points, from the upper-left corner of the document to the end point of the new segment.</span></span> <span data-ttu-id="34b94-129">Si le <paramref name="EditingType" /> du nouveau nœud est <b>msoEditingCorner</b>, cet argument spécifie la distance verticale, exprimée en points, entre le coin supérieur gauche du document jusqu’au premier point de contrôle du nouveau segment.</span><span class="sxs-lookup"><span data-stu-id="34b94-129">If the <paramref name="EditingType" /> of the new node is <b>msoEditingCorner</b>, this argument specifies the vertical distance, measured in points, from the upper-left corner of the document to the first control point for the new segment.</span></span></param>
        <param name="X2"><span data-ttu-id="34b94-130"><b>Simple</b>facultatif.</span><span class="sxs-lookup"><span data-stu-id="34b94-130">Optional <b>Single</b>.</span></span> <span data-ttu-id="34b94-131">Si la <paramref name="EditingType" /> valeur du nouveau segment est <b>msoEditingCorner</b>, cet argument spécifie la distance horizontale, exprimée en points, entre le coin supérieur gauche du document jusqu’au deuxième point de contrôle du nouveau segment.</span><span class="sxs-lookup"><span data-stu-id="34b94-131">If the <paramref name="EditingType" /> of the new segment is <b>msoEditingCorner</b>, this argument specifies the horizontal distance, measured in points, from the upper-left corner of the document to the second control point for the new segment.</span></span> <span data-ttu-id="34b94-132">Si le <paramref name="EditingType" /> nouveau segment est <b>msoEditingAuto</b>, ne spécifiez pas de valeur pour cet argument.</span><span class="sxs-lookup"><span data-stu-id="34b94-132">If the <paramref name="EditingType" /> of the new segment is <b>msoEditingAuto</b>, don't specify a value for this argument.</span></span></param>
        <param name="Y2"><span data-ttu-id="34b94-133"><b>Simple</b>facultatif.</span><span class="sxs-lookup"><span data-stu-id="34b94-133">Optional <b>Single</b>.</span></span> <span data-ttu-id="34b94-134">Si la <paramref name="EditingType" /> valeur du nouveau segment est <b>msoEditingCorner</b>, cet argument spécifie la distance verticale, exprimée en points, entre le coin supérieur gauche du document jusqu’au deuxième point de contrôle du nouveau segment.</span><span class="sxs-lookup"><span data-stu-id="34b94-134">If the <paramref name="EditingType" /> of the new segment is <b>msoEditingCorner</b>, this argument specifies the vertical distance, measured in points, from the upper-left corner of the document to the second control point for the new segment.</span></span> <span data-ttu-id="34b94-135">Si le <paramref name="EditingType" /> nouveau segment est <b>msoEditingAuto</b>, ne spécifiez pas de valeur pour cet argument.</span><span class="sxs-lookup"><span data-stu-id="34b94-135">If the <paramref name="EditingType" /> of the new segment is <b>msoEditingAuto</b>, don't specify a value for this argument.</span></span></param>
        <param name="X3"><span data-ttu-id="34b94-136"><b>Simple</b>facultatif.</span><span class="sxs-lookup"><span data-stu-id="34b94-136">Optional <b>Single</b>.</span></span> <span data-ttu-id="34b94-137">Si la <paramref name="EditingType" /> valeur du nouveau segment est <b>msoEditingCorner</b>, cet argument spécifie la distance horizontale, exprimée en points, entre le coin supérieur gauche du document jusqu’au point de fin du nouveau segment.</span><span class="sxs-lookup"><span data-stu-id="34b94-137">If the <paramref name="EditingType" /> of the new segment is <b>msoEditingCorner</b>, this argument specifies the horizontal distance, measured in points, from the upper-left corner of the document to the end point of the new segment.</span></span> <span data-ttu-id="34b94-138">Si le <paramref name="EditingType" /> nouveau segment est <b>msoEditingAuto</b>, ne spécifiez pas de valeur pour cet argument.</span><span class="sxs-lookup"><span data-stu-id="34b94-138">If the <paramref name="EditingType" /> of the new segment is <b>msoEditingAuto</b>, don't specify a value for this argument.</span></span></param>
        <param name="Y3"><span data-ttu-id="34b94-139"><b>Simple</b>facultatif.</span><span class="sxs-lookup"><span data-stu-id="34b94-139">Optional <b>Single</b>.</span></span> <span data-ttu-id="34b94-140">Si la <paramref name="EditingType" /> valeur du nouveau segment est <b>msoEditingCorner</b>, cet argument spécifie la distance verticale, exprimée en points, entre le coin supérieur gauche du document jusqu’au point de fin du nouveau segment.</span><span class="sxs-lookup"><span data-stu-id="34b94-140">If the <paramref name="EditingType" /> of the new segment is <b>msoEditingCorner</b>, this argument specifies the vertical distance, measured in points, from the upper-left corner of the document to the end point of the new segment.</span></span> <span data-ttu-id="34b94-141">Si le <paramref name="EditingType" /> nouveau segment est <b>msoEditingAuto</b>, ne spécifiez pas de valeur pour cet argument.</span><span class="sxs-lookup"><span data-stu-id="34b94-141">If the <paramref name="EditingType" /> of the new segment is <b>msoEditingAuto</b>, don't specify a value for this argument.</span></span></param>
        <summary><span data-ttu-id="34b94-142">Insère un nœud dans une forme libre.</span><span class="sxs-lookup"><span data-stu-id="34b94-142">Inserts a node into a freeform shape.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.ShapeNode this[ref object Index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Word.ShapeNode Item(object)" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.ShapeNodes.Item(System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property Item(ByRef Index As Object) As ShapeNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Word::ShapeNode ^ default[System::Object ^ %] { Microsoft::Office::Interop::Word::ShapeNode ^ get(System::Object ^ % Index); };" />
      <MemberSignature Language="F#" Value="member this.Item(obj) : Microsoft.Office.Interop.Word.ShapeNode" Usage="Microsoft.Office.Interop.Word.ShapeNodes.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.ShapeNode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="Index"><span data-ttu-id="34b94-143"><b>Objet</b> indiquant la position ordinale ou une chaîne représentant le nom de l’objet individuel.</span><span class="sxs-lookup"><span data-stu-id="34b94-143">An <b>Object</b> indicating the ordinal position or a string representing the name of the individual object.</span></span></param>
        <summary><span data-ttu-id="34b94-144">Renvoie un objet spécifique appartenant à une collection.</span><span class="sxs-lookup"><span data-stu-id="34b94-144">Returns an individual object in a collection.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public object Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Parent" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.ShapeNodes.Parent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parent As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Parent { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Parent : obj" Usage="Microsoft.Office.Interop.Word.ShapeNodes.Parent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="34b94-145">Cette propriété renvoie un objet qui représente l'objet parent de l'objet spécifié.</span><span class="sxs-lookup"><span data-stu-id="34b94-145">Returns an object that represents the parent object of the specified object.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetEditingType">
      <MemberSignature Language="C#" Value="public void SetEditingType (int Index, Microsoft.Office.Core.MsoEditingType EditingType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetEditingType([in]int32 Index, [in]valuetype Microsoft.Office.Core.MsoEditingType EditingType) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.ShapeNodes.SetEditingType(System.Int32,Microsoft.Office.Core.MsoEditingType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetEditingType (Index As Integer, EditingType As MsoEditingType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetEditingType(int Index, Microsoft::Office::Core::MsoEditingType EditingType);" />
      <MemberSignature Language="F#" Value="abstract member SetEditingType : int * Microsoft.Office.Core.MsoEditingType -&gt; unit" Usage="shapeNodes.SetEditingType (Index, EditingType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(13)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Int32" />
        <Parameter Name="EditingType" Type="Microsoft.Office.Core.MsoEditingType" />
      </Parameters>
      <Docs>
        <param name="Index"><span data-ttu-id="34b94-146">Argument de type <b>Integer</b> obligatoire.</span><span class="sxs-lookup"><span data-stu-id="34b94-146">Required <b>Integer</b>.</span></span> <span data-ttu-id="34b94-147">Indique le nœud dont le type de modification doit être défini.</span><span class="sxs-lookup"><span data-stu-id="34b94-147">The node whose editing type is to be set.</span></span></param>
        <param name="EditingType"><span data-ttu-id="34b94-148">Obligatoire <see cref="T:Microsoft.Office.Core.MsoEditingType" /> .</span><span class="sxs-lookup"><span data-stu-id="34b94-148">Required <see cref="T:Microsoft.Office.Core.MsoEditingType" />.</span></span> <span data-ttu-id="34b94-149">Indique le type de modification prévu pour le sommet.</span><span class="sxs-lookup"><span data-stu-id="34b94-149">The editing property of the vertex.</span></span></param>
        <summary><span data-ttu-id="34b94-150">Définit le type de modification du nœud spécifié.</span><span class="sxs-lookup"><span data-stu-id="34b94-150">Sets the editing type of the specified node.</span></span></summary>
        <remarks><para><span data-ttu-id="34b94-151">Si celui-ci est un point de contrôle d'un segment courbé, cette méthode définit le type de modification du nœud adjacent à celui qui joint deux segments.</span><span class="sxs-lookup"><span data-stu-id="34b94-151">If the node is a control point for a curved segment, this method sets the editing type of the node adjacent to it that joins two segments.</span></span> <span data-ttu-id="34b94-152">Notez que, en fonction du type de modification, cette méthode peut affecter la position des nœuds adjacents.</span><span class="sxs-lookup"><span data-stu-id="34b94-152">Note that depending on the editing type, this method may affect the position of adjacent nodes.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="SetPosition">
      <MemberSignature Language="C#" Value="public void SetPosition (int Index, float X1, float Y1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetPosition([in]int32 Index, [in]float32 X1, [in]float32 Y1) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.ShapeNodes.SetPosition(System.Int32,System.Single,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetPosition (Index As Integer, X1 As Single, Y1 As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetPosition(int Index, float X1, float Y1);" />
      <MemberSignature Language="F#" Value="abstract member SetPosition : int * single * single -&gt; unit" Usage="shapeNodes.SetPosition (Index, X1, Y1)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(14)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Int32" />
        <Parameter Name="X1" Type="System.Single" />
        <Parameter Name="Y1" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="Index"><span data-ttu-id="34b94-153">Argument de type <b>Integer</b> obligatoire.</span><span class="sxs-lookup"><span data-stu-id="34b94-153">Required <b>Integer</b>.</span></span> <span data-ttu-id="34b94-154">Indique le nœud à positionner.</span><span class="sxs-lookup"><span data-stu-id="34b94-154">The node whose position is to be set.</span></span></param>
        <param name="X1"><span data-ttu-id="34b94-155">Argument de type <b>Single</b> obligatoire.</span><span class="sxs-lookup"><span data-stu-id="34b94-155">Required <b>Single</b>.</span></span> <span data-ttu-id="34b94-156">Position du nouveau nœud (en points) par rapport au coin supérieur gauche du document.</span><span class="sxs-lookup"><span data-stu-id="34b94-156">The position (in points) of the new node relative to the upper-left corner of the document.</span></span></param>
        <param name="Y1"><span data-ttu-id="34b94-157">Argument de type <b>Single</b> obligatoire.</span><span class="sxs-lookup"><span data-stu-id="34b94-157">Required <b>Single</b>.</span></span> <span data-ttu-id="34b94-158">Position du nouveau nœud (en points) par rapport au coin supérieur gauche du document.</span><span class="sxs-lookup"><span data-stu-id="34b94-158">The position (in points) of the new node relative to the upper-left corner of the document.</span></span></param>
        <summary><span data-ttu-id="34b94-159">Définit l’emplacement du nœud spécifié.</span><span class="sxs-lookup"><span data-stu-id="34b94-159">Sets the location of the specified node.</span></span></summary>
        <remarks><para><span data-ttu-id="34b94-160">Notez que, en fonction du type de modification du nœud, cette méthode peut affecter la position des nœuds adjacents.</span><span class="sxs-lookup"><span data-stu-id="34b94-160">Note that depending on the editing type of the node, this method may affect the position of adjacent nodes.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="SetSegmentType">
      <MemberSignature Language="C#" Value="public void SetSegmentType (int Index, Microsoft.Office.Core.MsoSegmentType SegmentType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetSegmentType([in]int32 Index, [in]valuetype Microsoft.Office.Core.MsoSegmentType SegmentType) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.ShapeNodes.SetSegmentType(System.Int32,Microsoft.Office.Core.MsoSegmentType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetSegmentType (Index As Integer, SegmentType As MsoSegmentType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetSegmentType(int Index, Microsoft::Office::Core::MsoSegmentType SegmentType);" />
      <MemberSignature Language="F#" Value="abstract member SetSegmentType : int * Microsoft.Office.Core.MsoSegmentType -&gt; unit" Usage="shapeNodes.SetSegmentType (Index, SegmentType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(15)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Int32" />
        <Parameter Name="SegmentType" Type="Microsoft.Office.Core.MsoSegmentType" />
      </Parameters>
      <Docs>
        <param name="Index"><span data-ttu-id="34b94-161">Argument de type <b>Integer</b> obligatoire.</span><span class="sxs-lookup"><span data-stu-id="34b94-161">Required <b>Integer</b>.</span></span> <span data-ttu-id="34b94-162">Indique le nœud dont le type de segment doit être déterminé.</span><span class="sxs-lookup"><span data-stu-id="34b94-162">The node whose segment type is to be set.</span></span></param>
        <param name="SegmentType"><span data-ttu-id="34b94-163">Obligatoire <see cref="T:Microsoft.Office.Core.MsoSegmentType" /> .</span><span class="sxs-lookup"><span data-stu-id="34b94-163">Required <see cref="T:Microsoft.Office.Core.MsoSegmentType" />.</span></span> <span data-ttu-id="34b94-164">Indique s'il s'agit d'un segment de droite ou de courbe.</span><span class="sxs-lookup"><span data-stu-id="34b94-164">Specifies if the segment is straight or curved.</span></span></param>
        <summary><span data-ttu-id="34b94-165">Définit le type de segment qui suit le nœud spécifié.</span><span class="sxs-lookup"><span data-stu-id="34b94-165">Sets the segment type of the segment that follows the specified node.</span></span></summary>
        <remarks><para><span data-ttu-id="34b94-p122">S'il s'agit d'un point de contrôle d'un segment de courbe, la méthode détermine le type de segment pour ce segment de courbe. Notez que le nombre de nœuds peut changer en raison de l'insertion et de l'effacement automatiques des nœuds adjacents.</span><span class="sxs-lookup"><span data-stu-id="34b94-p122">If the node is a control point for a curved segment, this method sets the segment type for that curve. Note that this may affect the total number of nodes by inserting or deleting adjacent nodes.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
  </Members>
</Type>
