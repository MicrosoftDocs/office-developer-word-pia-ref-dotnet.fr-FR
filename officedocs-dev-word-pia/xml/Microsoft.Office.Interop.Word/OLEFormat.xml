<Type Name="OLEFormat" FullName="Microsoft.Office.Interop.Word.OLEFormat">
  <Metadata><Meta Name="ms.openlocfilehash" Value="bcdda2a9384c1b47b80159134d1ef27ec87d05a8" /><Meta Name="ms.sourcegitcommit" Value="655244c9d9a99d41d118f4fa57b5d74d46c410d7" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="fr-FR" /><Meta Name="ms.lasthandoff" Value="06/03/2020" /><Meta Name="ms.locfileid" Value="43925106" /></Metadata><TypeSignature Language="C#" Value="public interface OLEFormat" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract OLEFormat" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Office.Interop.Word.OLEFormat" />
  <TypeSignature Language="VB.NET" Value="Public Interface OLEFormat" />
  <TypeSignature Language="C++ CLI" Value="public interface class OLEFormat" />
  <TypeSignature Language="F#" Value="type OLEFormat = interface" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
    <AssemblyVersion>15.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("00020933-0000-0000-C000-000000000046")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.TypeLibType(4288)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="2e923-101">Représente les caractéristiques OLE (autres que les caractéristiques de liaison) d'un objet OLE, d'un contrôle ActiveX ou d'un champ.</span><span class="sxs-lookup"><span data-stu-id="2e923-101">Represents the OLE characteristics (other than linking) for an OLE object, ActiveX control, or field.</span></span></summary>
    <remarks><para><span data-ttu-id="2e923-102">Utilisez la propriété <b>OLEFormat</b> d’un <see cref="T:Microsoft.Office.Interop.Word.Shape" /> <see cref="T:Microsoft.Office.Interop.Word.InlineShape" /> objet, ou <see cref="T:Microsoft.Office.Interop.Word.Field" /> pour renvoyer l’objet <b>OLEFormat</b> .</span><span class="sxs-lookup"><span data-stu-id="2e923-102">Use the <b>OLEFormat</b> property for a <see cref="T:Microsoft.Office.Interop.Word.Shape" />, <see cref="T:Microsoft.Office.Interop.Word.InlineShape" />, or <see cref="T:Microsoft.Office.Interop.Word.Field" /> object to return the <b>OLEFormat</b> object.</span></span></para>
      <para><span data-ttu-id="2e923-103">Les différents types de formes, de formes insérées et de champs n'offrent pas tous des fonctionnalités OLE.</span><span class="sxs-lookup"><span data-stu-id="2e923-103">Not all types of shapes, inline shapes, and fields have OLE capabilities.</span></span> <span data-ttu-id="2e923-104">Utilisez la propriété <b>Type</b> des objets <b>Shape</b> et <b>InlineShape</b> pour déterminer la catégorie à laquelle appartient la forme ou forme insérée spécifiée.</span><span class="sxs-lookup"><span data-stu-id="2e923-104">Use the <b>Type</b> property for the <b>Shape</b> and <b>InlineShape</b> objects to determine what category the specified shape or inline shape falls into.</span></span> <span data-ttu-id="2e923-105">La propriété <b>Type</b> d'un objet <b>Field</b> renvoie le type de champ.</span><span class="sxs-lookup"><span data-stu-id="2e923-105">The <b>Type</b> property for a <b>Field</b> object returns the type of field.</span></span></para>
      <para><span data-ttu-id="2e923-106">Vous pouvez utiliser les <see cref="M:Microsoft.Office.Interop.Word.OLEFormat.Activate" /> méthodes,, <see cref="M:Microsoft.Office.Interop.Word.OLEFormat.Edit" /> <see cref="M:Microsoft.Office.Interop.Word.OLEFormat.Open" /> et <see cref="M:Microsoft.Office.Interop.Word.OLEFormat.DoVerb(System.Object@)" /> pour automatiser un objet OLE.</span><span class="sxs-lookup"><span data-stu-id="2e923-106">You can use the <see cref="M:Microsoft.Office.Interop.Word.OLEFormat.Activate" />, <see cref="M:Microsoft.Office.Interop.Word.OLEFormat.Edit" />, <see cref="M:Microsoft.Office.Interop.Word.OLEFormat.Open" />, and <see cref="M:Microsoft.Office.Interop.Word.OLEFormat.DoVerb(System.Object@)" /> methods to automate an OLE object.</span></span></para>
      <para><span data-ttu-id="2e923-107">Utilisez la <see cref="P:Microsoft.Office.Interop.Word.OLEFormat.Object" /> propriété pour renvoyer un objet qui représente un contrôle ActiveX ou un objet OLE.</span><span class="sxs-lookup"><span data-stu-id="2e923-107">Use the <see cref="P:Microsoft.Office.Interop.Word.OLEFormat.Object" /> property to return an object that represents an ActiveX control or OLE object.</span></span> <span data-ttu-id="2e923-108">Avec cet objet, il est possible d'utiliser les propriétés et méthodes de l'application du conteneur ou du contrôle ActiveX.</span><span class="sxs-lookup"><span data-stu-id="2e923-108">With this object, you can use the properties and methods of the container application or the ActiveX control.</span></span></para>
      <para> </para></remarks>
  </Docs>
  <Members>
    <Member MemberName="Activate">
      <MemberSignature Language="C#" Value="public void Activate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Activate() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.OLEFormat.Activate" />
      <MemberSignature Language="VB.NET" Value="Public Sub Activate ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Activate();" />
      <MemberSignature Language="F#" Value="abstract member Activate : unit -&gt; unit" Usage="oLEFormat.Activate " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(104)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2e923-109">Active l'objet spécifié.</span><span class="sxs-lookup"><span data-stu-id="2e923-109">Activates the specified object.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ActivateAs">
      <MemberSignature Language="C#" Value="public void ActivateAs (string ClassType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ActivateAs([in]string ClassType) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.OLEFormat.ActivateAs(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ActivateAs (ClassType As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ActivateAs(System::String ^ ClassType);" />
      <MemberSignature Language="F#" Value="abstract member ActivateAs : string -&gt; unit" Usage="oLEFormat.ActivateAs ClassType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(111)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ClassType" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="ClassType"><span data-ttu-id="2e923-110">Argument de type <b>String</b> obligatoire.</span><span class="sxs-lookup"><span data-stu-id="2e923-110">Required <b>String</b>.</span></span> <span data-ttu-id="2e923-111">Le nom de l'application dans laquelle un objet OLE est ouvert.</span><span class="sxs-lookup"><span data-stu-id="2e923-111">The name of the application in which an OLE object is opened.</span></span> <span data-ttu-id="2e923-112">Pour afficher la liste des types d’objets que l’objet OLE peut être activés en tant que, cliquez sur l’objet, puis ouvrez la boîte de dialogue convertir (menu Edition, sous-menu objet).</span><span class="sxs-lookup"><span data-stu-id="2e923-112">To see a list of object types that the OLE object can be activated as, click the object and then open the Convert dialog box (Edit menu, Object submenu).</span></span> <span data-ttu-id="2e923-113">Vous pouvez rechercher la <paramref name="ClassType" /> chaîne en insérant un objet en tant que forme insérée, puis en affichant les codes de champ.</span><span class="sxs-lookup"><span data-stu-id="2e923-113">You can find the <paramref name="ClassType" /> string by inserting an object as an inline shape and then viewing the field codes.</span></span> <span data-ttu-id="2e923-114">Le type de classe de l'objet suit le mot « EMBED » ou le mot « LINK ».</span><span class="sxs-lookup"><span data-stu-id="2e923-114">The class type of the object follows either the word "EMBED" or the word "LINK."</span></span></param>
        <summary><span data-ttu-id="2e923-115">Définit la valeur du registre Windows qui détermine l'application utilisée par défaut pour activer l'objet OLE spécifié.</span><span class="sxs-lookup"><span data-stu-id="2e923-115">Sets the Windows registry value that determines the default application used to activate the specified OLE object.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Application">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.Application Application { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Word.Application Application" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.OLEFormat.Application" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Application As Application" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Word::Application ^ Application { Microsoft::Office::Interop::Word::Application ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Application : Microsoft.Office.Interop.Word.Application" Usage="Microsoft.Office.Interop.Word.OLEFormat.Application" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1000)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1000)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.Application</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2e923-116">Renvoie un <see cref="T:Microsoft.Office.Interop.Word.Application" /> Object qui représente l’application Microsoft Word.</span><span class="sxs-lookup"><span data-stu-id="2e923-116">Returns a <see cref="T:Microsoft.Office.Interop.Word.Application" /> object that represents the Microsoft Word application.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClassType">
      <MemberSignature Language="C#" Value="public string ClassType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ClassType" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.OLEFormat.ClassType" />
      <MemberSignature Language="VB.NET" Value="Public Property ClassType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ClassType { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ClassType : string with get, set" Usage="Microsoft.Office.Interop.Word.OLEFormat.ClassType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2e923-117">Cette propriété renvoie ou définit le type de classe de l'objet OLE spécifié, une image ou un champ.</span><span class="sxs-lookup"><span data-stu-id="2e923-117">Returns or sets the class type for the specified OLE object, picture, or field.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="2e923-118">Cette propriété est en lecture seule pour les objets liés autres que des liaisons DDE.</span><span class="sxs-lookup"><span data-stu-id="2e923-118">This property is read-only for linked objects other than DDE links.</span></span></para>
          <para><span data-ttu-id="2e923-119">La liste des applications disponibles s'affiche dans la zone Type d'objet de l'onglet Nouvel objet dans la boîte de dialogue Objet (menu Insertion).</span><span class="sxs-lookup"><span data-stu-id="2e923-119">You can see a list of the available applications in the Object type box on the Create New tab in the Object dialog box (Insert menu).</span></span> <span data-ttu-id="2e923-120">Vous pouvez rechercher la <paramref name="ClassType" /> chaîne en insérant un objet en tant que forme insérée, puis en affichant les codes de champ.</span><span class="sxs-lookup"><span data-stu-id="2e923-120">You can find the <paramref name="ClassType" /> string by inserting an object as an inline shape and then viewing the field codes.</span></span> <span data-ttu-id="2e923-121">Le type de classe de l'objet suit le mot « EMBED » ou le mot « LINK ».</span><span class="sxs-lookup"><span data-stu-id="2e923-121">The class type of the object follows either the word "EMBED" or the word "LINK."</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="ConvertTo">
      <MemberSignature Language="C#" Value="public void ConvertTo (ref object ClassType, ref object DisplayAsIcon, ref object IconFileName, ref object IconIndex, ref object IconLabel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ConvertTo([in]object&amp; ClassType, [in]object&amp; DisplayAsIcon, [in]object&amp; IconFileName, [in]object&amp; IconIndex, [in]object&amp; IconLabel) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.OLEFormat.ConvertTo(System.Object@,System.Object@,System.Object@,System.Object@,System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ConvertTo (Optional ByRef ClassType As Object, Optional ByRef DisplayAsIcon As Object, Optional ByRef IconFileName As Object, Optional ByRef IconIndex As Object, Optional ByRef IconLabel As Object)" />
      <MemberSignature Language="F#" Value="abstract member ConvertTo : obj * obj * obj * obj * obj -&gt; unit" Usage="oLEFormat.ConvertTo (ClassType, DisplayAsIcon, IconFileName, IconIndex, IconLabel)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(110)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ClassType" Type="System.Object" RefType="ref" />
        <Parameter Name="DisplayAsIcon" Type="System.Object" RefType="ref" />
        <Parameter Name="IconFileName" Type="System.Object" RefType="ref" />
        <Parameter Name="IconIndex" Type="System.Object" RefType="ref" />
        <Parameter Name="IconLabel" Type="System.Object" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="ClassType"><span data-ttu-id="2e923-122"><b>Objet</b>facultatif.</span><span class="sxs-lookup"><span data-stu-id="2e923-122">Optional <b>Object</b>.</span></span> <span data-ttu-id="2e923-123">Nom de l'application utilisée pour activer l'objet OLE.</span><span class="sxs-lookup"><span data-stu-id="2e923-123">The name of the application used to activate the OLE object.</span></span> <span data-ttu-id="2e923-124">La liste des applications disponibles s'affiche dans la zone Type d'objet de l'onglet Nouvel objet dans la boîte de dialogue Objet (menu Insertion).</span><span class="sxs-lookup"><span data-stu-id="2e923-124">You can see a list of the available applications in the Object type box on the Create New tab in the Object dialog box (Insert menu).</span></span> <span data-ttu-id="2e923-125">Vous pouvez rechercher la <paramref name="ClassType" /> chaîne en insérant un objet en tant que forme insérée, puis en affichant les codes de champ.</span><span class="sxs-lookup"><span data-stu-id="2e923-125">You can find the <paramref name="ClassType" /> string by inserting an object as an inline shape and then viewing the field codes.</span></span> <span data-ttu-id="2e923-126">Le type de classe de l'objet suit le mot « EMBED » ou le mot « LINK ».</span><span class="sxs-lookup"><span data-stu-id="2e923-126">The class type of the object follows either the word "EMBED" or the word "LINK."</span></span></param>
        <param name="DisplayAsIcon"><span data-ttu-id="2e923-127"><b>Objet</b>facultatif.</span><span class="sxs-lookup"><span data-stu-id="2e923-127">Optional <b>Object</b>.</span></span> <span data-ttu-id="2e923-128"><b>True</b> pour afficher l'objet OLE en tant qu'icône.</span><span class="sxs-lookup"><span data-stu-id="2e923-128"><b>True</b> to display the OLE object as an icon.</span></span> <span data-ttu-id="2e923-129">La valeur par défaut est <b>False</b>.</span><span class="sxs-lookup"><span data-stu-id="2e923-129">The default value is <b>False</b>.</span></span></param>
        <param name="IconFileName"><span data-ttu-id="2e923-130"><b>Objet</b>facultatif.</span><span class="sxs-lookup"><span data-stu-id="2e923-130">Optional <b>Object</b>.</span></span> <span data-ttu-id="2e923-131">Fichier contenant l'icône à afficher.</span><span class="sxs-lookup"><span data-stu-id="2e923-131">The file that contains the icon to be displayed.</span></span></param>
        <param name="IconIndex"><span data-ttu-id="2e923-132"><b>Objet</b>facultatif.</span><span class="sxs-lookup"><span data-stu-id="2e923-132">Optional <b>Object</b>.</span></span> <span data-ttu-id="2e923-133">Numéro d’index de l’icône dans <paramref name="IconFileName" /> .</span><span class="sxs-lookup"><span data-stu-id="2e923-133">The index number of the icon within <paramref name="IconFileName" />.</span></span> <span data-ttu-id="2e923-134">L'ordre des icônes défini dans le fichier spécifié correspond à l'ordre d'affichage des icônes dans la boîte de dialogue Changer d'icône (menu Insertion, boîte de dialogue Insérer un objet), quand la case à cocher Afficher sous forme d'icône est activée.</span><span class="sxs-lookup"><span data-stu-id="2e923-134">The order of icons in the specified file corresponds to the order in which the icons appear in the Change Icon dialog box (Insert menu, Object dialog box) when the Display as icon check box is selected.</span></span> <span data-ttu-id="2e923-135">La première icône dans le fichier porte le numéro d'index 0 (zéro).</span><span class="sxs-lookup"><span data-stu-id="2e923-135">The first icon in the file has the index number 0 (zero).</span></span> <span data-ttu-id="2e923-136">Si une icône avec le numéro d’index donné n’existe pas dans <paramref name="IconFileName" /> , l’icône avec le numéro d’index 1 (la deuxième icône dans le fichier) est utilisée.</span><span class="sxs-lookup"><span data-stu-id="2e923-136">If an icon with the given index number doesn't exist in <paramref name="IconFileName" />, the icon with the index number 1 (the second icon in the file) is used.</span></span> <span data-ttu-id="2e923-137">La valeur par défaut est 0 (zéro).</span><span class="sxs-lookup"><span data-stu-id="2e923-137">The default value is 0 (zero).</span></span></param>
        <param name="IconLabel"><span data-ttu-id="2e923-138"><b>Objet</b>facultatif.</span><span class="sxs-lookup"><span data-stu-id="2e923-138">Optional <b>Object</b>.</span></span> <span data-ttu-id="2e923-139">Légende à afficher sous l'icône.</span><span class="sxs-lookup"><span data-stu-id="2e923-139">A label (caption) to be displayed beneath the icon.</span></span></param>
        <summary><span data-ttu-id="2e923-140">Convertit l’objet OLE spécifié d’une classe à une autre, ce qui vous permet de modifier l’objet dans une autre application serveur ou de modifier l’affichage de l’objet dans le document.</span><span class="sxs-lookup"><span data-stu-id="2e923-140">Converts the specified OLE object from one class to another, making it possible for you to edit the object in a different server application, or change how the object is displayed in the document.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Creator">
      <MemberSignature Language="C#" Value="public int Creator { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Creator" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.OLEFormat.Creator" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Creator As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Creator { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Creator : int" Usage="Microsoft.Office.Interop.Word.OLEFormat.Creator" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1001)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1001)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2e923-141">Renvoie un entier 32 bits qui indique l'application dans laquelle l'objet spécifié a été créé.</span><span class="sxs-lookup"><span data-stu-id="2e923-141">Returns a 32-bit integer that indicates the application in which the specified object was created.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="2e923-142">Si l’objet a été créé dans Microsoft Word, cette propriété renvoie le nombre hexadécimal 4D535744, qui représente la chaîne « MSWD ».</span><span class="sxs-lookup"><span data-stu-id="2e923-142">If the object was created in Microsoft Word, this property returns the hexadecimal number 4D535744, which represents the string "MSWD."</span></span> <span data-ttu-id="2e923-143">[!REMARQUE] Cette valeur peut également être représentée par la constante <b>wdCreatorCode</b>.</span><span class="sxs-lookup"><span data-stu-id="2e923-143">This value can also be represented by the constant <b>wdCreatorCode</b>.</span></span></para>
          <para><span data-ttu-id="2e923-144">La propriété <b>Creator</b> a initialement été conçue pour être utilisée sur Macintosh, où chaque application possède un code de créateur de quatre caractères.</span><span class="sxs-lookup"><span data-stu-id="2e923-144">The <b>Creator</b> property was primarily designed to be used on the Macintosh, where each application has a four-character creator code.</span></span> <span data-ttu-id="2e923-145">Par exemple, Microsoft Word possède le code de créateur MSWD.</span><span class="sxs-lookup"><span data-stu-id="2e923-145">For example, Microsoft Word has the creator code MSWD.</span></span> <span data-ttu-id="2e923-146">Pour plus d'informations sur cette propriété, consultez la référence du langage aide incluse avec Microsoft Office Édition Macintosh.</span><span class="sxs-lookup"><span data-stu-id="2e923-146">For additional information about this property, consult the language reference Help included with Microsoft Office Macintosh Edition.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayAsIcon">
      <MemberSignature Language="C#" Value="public bool DisplayAsIcon { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DisplayAsIcon" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.OLEFormat.DisplayAsIcon" />
      <MemberSignature Language="VB.NET" Value="Public Property DisplayAsIcon As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DisplayAsIcon { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.DisplayAsIcon : bool with get, set" Usage="Microsoft.Office.Interop.Word.OLEFormat.DisplayAsIcon" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(3)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(3)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(3)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2e923-147"><b>True</b> si l'objet indiqué est affiché sous forme d'icône.</span><span class="sxs-lookup"><span data-stu-id="2e923-147"><b>True</b> if the specified object is displayed as an icon.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DoVerb">
      <MemberSignature Language="C#" Value="public void DoVerb (ref object VerbIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DoVerb([in]object&amp; VerbIndex) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.OLEFormat.DoVerb(System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DoVerb (Optional ByRef VerbIndex As Object)" />
      <MemberSignature Language="F#" Value="abstract member DoVerb : obj -&gt; unit" Usage="oLEFormat.DoVerb VerbIndex" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(109)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="VerbIndex" Type="System.Object" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="VerbIndex"><span data-ttu-id="2e923-148"><b>Objet</b>facultatif.</span><span class="sxs-lookup"><span data-stu-id="2e923-148">Optional <b>Object</b>.</span></span> <span data-ttu-id="2e923-149">Le verbe que l'objet OLE doit exécuter.</span><span class="sxs-lookup"><span data-stu-id="2e923-149">The verb that the OLE object should perform.</span></span> <span data-ttu-id="2e923-150">Si cet argument est omis, le verbe par défaut est envoyé.</span><span class="sxs-lookup"><span data-stu-id="2e923-150">If this argument is omitted, the default verb is sent.</span></span> <span data-ttu-id="2e923-151">Si l'objet OLE ne gère pas le verbe demandé, une erreur se produit.</span><span class="sxs-lookup"><span data-stu-id="2e923-151">If the OLE object does not support the requested verb, an error will occur.</span></span> <span data-ttu-id="2e923-152">Peut être n’importe quelle <see cref="T:Microsoft.Office.Interop.Word.WdOLEVerb" /> constante.</span><span class="sxs-lookup"><span data-stu-id="2e923-152">Can be any <see cref="T:Microsoft.Office.Interop.Word.WdOLEVerb" /> constant.</span></span></param>
        <summary><span data-ttu-id="2e923-153">Demande qu’un objet OLE exécute l’un de ses verbes disponibles : les actions qu’un objet OLE effectue pour activer son contenu.</span><span class="sxs-lookup"><span data-stu-id="2e923-153">Requests that an OLE object perform one of its available verbs— the actions an OLE object takes to activate its contents.</span></span> <span data-ttu-id="2e923-154">Chaque objet OLE prend en charge un ensemble de verbes le concernant.</span><span class="sxs-lookup"><span data-stu-id="2e923-154">Each OLE object supports a set of verbs that pertain to that object.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Edit">
      <MemberSignature Language="C#" Value="public void Edit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Edit() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.OLEFormat.Edit" />
      <MemberSignature Language="VB.NET" Value="Public Sub Edit ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Edit();" />
      <MemberSignature Language="F#" Value="abstract member Edit : unit -&gt; unit" Usage="oLEFormat.Edit " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(106)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2e923-155">Ouvre l'objet OLE spécifié en vue de le modifier dans l'application dans laquelle il a été créé.</span><span class="sxs-lookup"><span data-stu-id="2e923-155">Opens the specified OLE object for editing in the application it was created in.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IconIndex">
      <MemberSignature Language="C#" Value="public int IconIndex { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 IconIndex" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.OLEFormat.IconIndex" />
      <MemberSignature Language="VB.NET" Value="Public Property IconIndex As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int IconIndex { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.IconIndex : int with get, set" Usage="Microsoft.Office.Interop.Word.OLEFormat.IconIndex" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(9)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(9)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(9)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2e923-156">Cette propriété renvoie ou définit l’icône utilisée lorsque la <see cref="P:Microsoft.Office.Interop.Word.OLEFormat.DisplayAsIcon" /> propriété a la <b>valeur true</b>: 0 (zéro) correspond à la première icône, 1 correspond à la deuxième icône et ainsi de suite.</span><span class="sxs-lookup"><span data-stu-id="2e923-156">Returns or sets the icon that's used when the <see cref="P:Microsoft.Office.Interop.Word.OLEFormat.DisplayAsIcon" /> property is <b>True</b>: 0 (zero) corresponds to the first icon, 1 corresponds to the second icon, and so on.</span></span> <span data-ttu-id="2e923-157">Si cet argument est omis, la première icône (par défaut) est utilisée.</span><span class="sxs-lookup"><span data-stu-id="2e923-157">If this argument is omitted, the first (default) icon is used.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IconLabel">
      <MemberSignature Language="C#" Value="public string IconLabel { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string IconLabel" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.OLEFormat.IconLabel" />
      <MemberSignature Language="VB.NET" Value="Public Property IconLabel As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ IconLabel { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.IconLabel : string with get, set" Usage="Microsoft.Office.Interop.Word.OLEFormat.IconLabel" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(10)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(10)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(10)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2e923-158">Cette propriété renvoie ou définit le texte affiché sous l'icône d'un objet OLE.</span><span class="sxs-lookup"><span data-stu-id="2e923-158">Returns or sets the text displayed below the icon for an OLE object.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IconName">
      <MemberSignature Language="C#" Value="public string IconName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string IconName" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.OLEFormat.IconName" />
      <MemberSignature Language="VB.NET" Value="Public Property IconName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ IconName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.IconName : string with get, set" Usage="Microsoft.Office.Interop.Word.OLEFormat.IconName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(7)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(7)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(7)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2e923-159">Cette propriété renvoie ou définit le fichier de programme dans lequel l'icône d'un objet OLE est stockée.</span><span class="sxs-lookup"><span data-stu-id="2e923-159">Returns or sets the program file in which the icon for an OLE object is stored.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IconPath">
      <MemberSignature Language="C#" Value="public string IconPath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string IconPath" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.OLEFormat.IconPath" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IconPath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ IconPath { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.IconPath : string" Usage="Microsoft.Office.Interop.Word.OLEFormat.IconPath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(8)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(8)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2e923-160">Renvoie le chemin d'accès du fichier dans lequel l'icône d'un objet OLE est stockée.</span><span class="sxs-lookup"><span data-stu-id="2e923-160">Returns the path of the file in which the icon for an OLE object is stored.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Label">
      <MemberSignature Language="C#" Value="public string Label { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Label" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.OLEFormat.Label" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Label As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Label { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Label : string" Usage="Microsoft.Office.Interop.Word.OLEFormat.Label" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(12)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(12)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2e923-161">Renvoie une chaîne qui est utilisée pour identifier la partie du fichier source qui est liée.</span><span class="sxs-lookup"><span data-stu-id="2e923-161">Returns a string that's used to identify the portion of the source file that's being linked.</span></span> <span data-ttu-id="2e923-162">Par exemple, si le fichier source est un classeur Microsoft Excel, la propriété <b>label</b> peut renvoyer «Classeur1 ! R3C1 : R4C2» si l’objet OLE ne contient que quelques cellules de la feuille de calcul.</span><span class="sxs-lookup"><span data-stu-id="2e923-162">For example, if the source file is a Microsoft Excel workbook, the <b>Label</b> property might return "Workbook1!R3C1:R4C2" if the OLE object contains only a few cells from the worksheet.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="2e923-163">Cette propriété ne fonctionne qu'avec les formes, les formes fixes ou les champs définis comme objets OLE liés.</span><span class="sxs-lookup"><span data-stu-id="2e923-163">This property works only for shapes, inline shapes, or fields that are linked OLE objects.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Object">
      <MemberSignature Language="C#" Value="public object Object { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Object" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.OLEFormat.Object" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Object As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Object { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Object : obj" Usage="Microsoft.Office.Interop.Word.OLEFormat.Object" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(14)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(14)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2e923-164">Renvoie un <b>Object</b> qui représente l'interface de niveau supérieur de l'objet OLE spécifié.</span><span class="sxs-lookup"><span data-stu-id="2e923-164">Returns an <b>Object</b> that represents the specified OLE object's top-level interface.</span></span> <span data-ttu-id="2e923-165">Cette propriété permet d'accéder aux propriétés et méthodes d'un contrôle ActiveX ou de l'application dans laquelle l'objet OLE a été créé.</span><span class="sxs-lookup"><span data-stu-id="2e923-165">This property allows you to access the properties and methods of an ActiveX control or the application in which an OLE object was created.</span></span> <span data-ttu-id="2e923-166">Pour que cette propriété fonctionne, ce dernier doit prendre en charge OLE Automation.</span><span class="sxs-lookup"><span data-stu-id="2e923-166">The OLE object must support OLE Automation for this property to work.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Open">
      <MemberSignature Language="C#" Value="public void Open ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Open() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.OLEFormat.Open" />
      <MemberSignature Language="VB.NET" Value="Public Sub Open ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Open();" />
      <MemberSignature Language="F#" Value="abstract member Open : unit -&gt; unit" Usage="oLEFormat.Open " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(107)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2e923-167">Ouvre l'objet spécifié.</span><span class="sxs-lookup"><span data-stu-id="2e923-167">Opens the specified object.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public object Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Parent" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.OLEFormat.Parent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parent As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Parent { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Parent : obj" Usage="Microsoft.Office.Interop.Word.OLEFormat.Parent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1002)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1002)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2e923-168">Cette propriété renvoie un objet qui représente l'objet parent de l'objet spécifié.</span><span class="sxs-lookup"><span data-stu-id="2e923-168">Returns an object that represents the parent object of the specified object.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PreserveFormattingOnUpdate">
      <MemberSignature Language="C#" Value="public bool PreserveFormattingOnUpdate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool PreserveFormattingOnUpdate" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.OLEFormat.PreserveFormattingOnUpdate" />
      <MemberSignature Language="VB.NET" Value="Public Property PreserveFormattingOnUpdate As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool PreserveFormattingOnUpdate { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.PreserveFormattingOnUpdate : bool with get, set" Usage="Microsoft.Office.Interop.Word.OLEFormat.PreserveFormattingOnUpdate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(112)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(112)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(112)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2e923-169"><b>True :</b> conserve la mise en forme définie dans Microsoft Word pour un objet OLE lié, tel qu'une table liée à une feuille de calcul Microsoft Excel.</span><span class="sxs-lookup"><span data-stu-id="2e923-169"><b>True</b> preserves formatting done in Microsoft Word to a linked OLE object, such as a table linked to a Microsoft Excel spreadsheet.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="2e923-p117">Lorsque la <b>propriété PreserveFormattingOnUpdate</b> a la valeur <b>True</b>, la mise en forme des modifications apportées à l'objet dans Word est conservée lorsque l'objet est mis à jour. Word met à jour uniquement le contenu de l'objet lié.</span><span class="sxs-lookup"><span data-stu-id="2e923-p117">When <b>PreserveFormattingOnUpdate</b> is set to <b>True</b>, formatting changes made to the object in Word is preserved when the object is updated. Word updates only the content in the linked object.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="ProgID">
      <MemberSignature Language="C#" Value="public string ProgID { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ProgID" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.OLEFormat.ProgID" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ProgID As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ProgID { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ProgID : string" Usage="Microsoft.Office.Interop.Word.OLEFormat.ProgID" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(22)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(22)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2e923-172">Renvoie l’identificateur de programmation (ProgID) de l’objet OLE spécifié.</span><span class="sxs-lookup"><span data-stu-id="2e923-172">Returns the programmatic identifier (ProgID) for the specified OLE object.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="2e923-173">Les propriétés <b>ProgID</b> et <see cref="P:Microsoft.Office.Interop.Word.OLEFormat.ClassType" /> Properties renvoient, par défaut, la même chaîne.</span><span class="sxs-lookup"><span data-stu-id="2e923-173">The <b>ProgID</b> and <see cref="P:Microsoft.Office.Interop.Word.OLEFormat.ClassType" /> properties will (by default) return the same string.</span></span> <span data-ttu-id="2e923-174">Cependant, vous pouvez modifier la propriété <b>ClassType</b> pour les liaisons DDE.</span><span class="sxs-lookup"><span data-stu-id="2e923-174">However, you can change the <b>ClassType</b> property for DDE links.</span></span></para>
          <para><span data-ttu-id="2e923-175">
            <b>Sécurité</b>  L’échange dynamique de données (DDE) est une technologie plus ancienne qui n’est pas sécurisée.</span><span class="sxs-lookup"><span data-stu-id="2e923-175">
            <b>Security</b>  Dynamic data exchange (DDE) is an older technology that is not secure.</span></span> <span data-ttu-id="2e923-176">Dans la mesure du possible, utilisez une alternative plus sécurisée à DDE.</span><span class="sxs-lookup"><span data-stu-id="2e923-176">If possible, use a more secure alternative to DDE.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
  </Members>
</Type>
